
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model abuse_report_feedbacks
 * 
 */
export type abuse_report_feedbacks = $Result.DefaultSelection<Prisma.$abuse_report_feedbacksPayload>
/**
 * Model attendance
 * 
 */
export type attendance = $Result.DefaultSelection<Prisma.$attendancePayload>
/**
 * Model coin_transaction
 * 
 */
export type coin_transaction = $Result.DefaultSelection<Prisma.$coin_transactionPayload>
/**
 * Model comments
 * 
 */
export type comments = $Result.DefaultSelection<Prisma.$commentsPayload>
/**
 * Model comments_group
 * 
 */
export type comments_group = $Result.DefaultSelection<Prisma.$comments_groupPayload>
/**
 * Model courses
 * 
 */
export type courses = $Result.DefaultSelection<Prisma.$coursesPayload>
/**
 * Model error_report_feedbacks
 * 
 */
export type error_report_feedbacks = $Result.DefaultSelection<Prisma.$error_report_feedbacksPayload>
/**
 * Model group_members
 * 
 */
export type group_members = $Result.DefaultSelection<Prisma.$group_membersPayload>
/**
 * Model group_posts
 * 
 */
export type group_posts = $Result.DefaultSelection<Prisma.$group_postsPayload>
/**
 * Model groups
 * 
 */
export type groups = $Result.DefaultSelection<Prisma.$groupsPayload>
/**
 * Model messages
 * 
 */
export type messages = $Result.DefaultSelection<Prisma.$messagesPayload>
/**
 * Model packages
 * 
 */
export type packages = $Result.DefaultSelection<Prisma.$packagesPayload>
/**
 * Model posts
 * 
 */
export type posts = $Result.DefaultSelection<Prisma.$postsPayload>
/**
 * Model react_comments
 * 
 */
export type react_comments = $Result.DefaultSelection<Prisma.$react_commentsPayload>
/**
 * Model react_posts
 * 
 */
export type react_posts = $Result.DefaultSelection<Prisma.$react_postsPayload>
/**
 * Model shared_post
 * 
 */
export type shared_post = $Result.DefaultSelection<Prisma.$shared_postPayload>
/**
 * Model study_access_topic
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type study_access_topic = $Result.DefaultSelection<Prisma.$study_access_topicPayload>
/**
 * Model topics
 * 
 */
export type topics = $Result.DefaultSelection<Prisma.$topicsPayload>
/**
 * Model transaction_history
 * 
 */
export type transaction_history = $Result.DefaultSelection<Prisma.$transaction_historyPayload>
/**
 * Model user_abuse_reports
 * 
 */
export type user_abuse_reports = $Result.DefaultSelection<Prisma.$user_abuse_reportsPayload>
/**
 * Model user_courses
 * 
 */
export type user_courses = $Result.DefaultSelection<Prisma.$user_coursesPayload>
/**
 * Model user_error_reports
 * 
 */
export type user_error_reports = $Result.DefaultSelection<Prisma.$user_error_reportsPayload>
/**
 * Model user_packages
 * 
 */
export type user_packages = $Result.DefaultSelection<Prisma.$user_packagesPayload>
/**
 * Model user_profile_history
 * 
 */
export type user_profile_history = $Result.DefaultSelection<Prisma.$user_profile_historyPayload>
/**
 * Model user_progress
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type user_progress = $Result.DefaultSelection<Prisma.$user_progressPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model words
 * 
 */
export type words = $Result.DefaultSelection<Prisma.$wordsPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Abuse_report_feedbacks
 * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Abuse_report_feedbacks
   * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.abuse_report_feedbacks`: Exposes CRUD operations for the **abuse_report_feedbacks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Abuse_report_feedbacks
    * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findMany()
    * ```
    */
  get abuse_report_feedbacks(): Prisma.abuse_report_feedbacksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.attendance`: Exposes CRUD operations for the **attendance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attendances
    * const attendances = await prisma.attendance.findMany()
    * ```
    */
  get attendance(): Prisma.attendanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.coin_transaction`: Exposes CRUD operations for the **coin_transaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Coin_transactions
    * const coin_transactions = await prisma.coin_transaction.findMany()
    * ```
    */
  get coin_transaction(): Prisma.coin_transactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comments`: Exposes CRUD operations for the **comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comments.findMany()
    * ```
    */
  get comments(): Prisma.commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comments_group`: Exposes CRUD operations for the **comments_group** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments_groups
    * const comments_groups = await prisma.comments_group.findMany()
    * ```
    */
  get comments_group(): Prisma.comments_groupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.courses`: Exposes CRUD operations for the **courses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Courses
    * const courses = await prisma.courses.findMany()
    * ```
    */
  get courses(): Prisma.coursesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.error_report_feedbacks`: Exposes CRUD operations for the **error_report_feedbacks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Error_report_feedbacks
    * const error_report_feedbacks = await prisma.error_report_feedbacks.findMany()
    * ```
    */
  get error_report_feedbacks(): Prisma.error_report_feedbacksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.group_members`: Exposes CRUD operations for the **group_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Group_members
    * const group_members = await prisma.group_members.findMany()
    * ```
    */
  get group_members(): Prisma.group_membersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.group_posts`: Exposes CRUD operations for the **group_posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Group_posts
    * const group_posts = await prisma.group_posts.findMany()
    * ```
    */
  get group_posts(): Prisma.group_postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.groups`: Exposes CRUD operations for the **groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Groups
    * const groups = await prisma.groups.findMany()
    * ```
    */
  get groups(): Prisma.groupsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.messages`: Exposes CRUD operations for the **messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.messages.findMany()
    * ```
    */
  get messages(): Prisma.messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.packages`: Exposes CRUD operations for the **packages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Packages
    * const packages = await prisma.packages.findMany()
    * ```
    */
  get packages(): Prisma.packagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.posts`: Exposes CRUD operations for the **posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.posts.findMany()
    * ```
    */
  get posts(): Prisma.postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.react_comments`: Exposes CRUD operations for the **react_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more React_comments
    * const react_comments = await prisma.react_comments.findMany()
    * ```
    */
  get react_comments(): Prisma.react_commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.react_posts`: Exposes CRUD operations for the **react_posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more React_posts
    * const react_posts = await prisma.react_posts.findMany()
    * ```
    */
  get react_posts(): Prisma.react_postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shared_post`: Exposes CRUD operations for the **shared_post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shared_posts
    * const shared_posts = await prisma.shared_post.findMany()
    * ```
    */
  get shared_post(): Prisma.shared_postDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.study_access_topic`: Exposes CRUD operations for the **study_access_topic** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Study_access_topics
    * const study_access_topics = await prisma.study_access_topic.findMany()
    * ```
    */
  get study_access_topic(): Prisma.study_access_topicDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.topics`: Exposes CRUD operations for the **topics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Topics
    * const topics = await prisma.topics.findMany()
    * ```
    */
  get topics(): Prisma.topicsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaction_history`: Exposes CRUD operations for the **transaction_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaction_histories
    * const transaction_histories = await prisma.transaction_history.findMany()
    * ```
    */
  get transaction_history(): Prisma.transaction_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_abuse_reports`: Exposes CRUD operations for the **user_abuse_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_abuse_reports
    * const user_abuse_reports = await prisma.user_abuse_reports.findMany()
    * ```
    */
  get user_abuse_reports(): Prisma.user_abuse_reportsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_courses`: Exposes CRUD operations for the **user_courses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_courses
    * const user_courses = await prisma.user_courses.findMany()
    * ```
    */
  get user_courses(): Prisma.user_coursesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_error_reports`: Exposes CRUD operations for the **user_error_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_error_reports
    * const user_error_reports = await prisma.user_error_reports.findMany()
    * ```
    */
  get user_error_reports(): Prisma.user_error_reportsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_packages`: Exposes CRUD operations for the **user_packages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_packages
    * const user_packages = await prisma.user_packages.findMany()
    * ```
    */
  get user_packages(): Prisma.user_packagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_profile_history`: Exposes CRUD operations for the **user_profile_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_profile_histories
    * const user_profile_histories = await prisma.user_profile_history.findMany()
    * ```
    */
  get user_profile_history(): Prisma.user_profile_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_progress`: Exposes CRUD operations for the **user_progress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_progresses
    * const user_progresses = await prisma.user_progress.findMany()
    * ```
    */
  get user_progress(): Prisma.user_progressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.words`: Exposes CRUD operations for the **words** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Words
    * const words = await prisma.words.findMany()
    * ```
    */
  get words(): Prisma.wordsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    abuse_report_feedbacks: 'abuse_report_feedbacks',
    attendance: 'attendance',
    coin_transaction: 'coin_transaction',
    comments: 'comments',
    comments_group: 'comments_group',
    courses: 'courses',
    error_report_feedbacks: 'error_report_feedbacks',
    group_members: 'group_members',
    group_posts: 'group_posts',
    groups: 'groups',
    messages: 'messages',
    packages: 'packages',
    posts: 'posts',
    react_comments: 'react_comments',
    react_posts: 'react_posts',
    shared_post: 'shared_post',
    study_access_topic: 'study_access_topic',
    topics: 'topics',
    transaction_history: 'transaction_history',
    user_abuse_reports: 'user_abuse_reports',
    user_courses: 'user_courses',
    user_error_reports: 'user_error_reports',
    user_packages: 'user_packages',
    user_profile_history: 'user_profile_history',
    user_progress: 'user_progress',
    users: 'users',
    words: 'words'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "abuse_report_feedbacks" | "attendance" | "coin_transaction" | "comments" | "comments_group" | "courses" | "error_report_feedbacks" | "group_members" | "group_posts" | "groups" | "messages" | "packages" | "posts" | "react_comments" | "react_posts" | "shared_post" | "study_access_topic" | "topics" | "transaction_history" | "user_abuse_reports" | "user_courses" | "user_error_reports" | "user_packages" | "user_profile_history" | "user_progress" | "users" | "words"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      abuse_report_feedbacks: {
        payload: Prisma.$abuse_report_feedbacksPayload<ExtArgs>
        fields: Prisma.abuse_report_feedbacksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.abuse_report_feedbacksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.abuse_report_feedbacksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>
          }
          findFirst: {
            args: Prisma.abuse_report_feedbacksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.abuse_report_feedbacksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>
          }
          findMany: {
            args: Prisma.abuse_report_feedbacksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>[]
          }
          create: {
            args: Prisma.abuse_report_feedbacksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>
          }
          createMany: {
            args: Prisma.abuse_report_feedbacksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.abuse_report_feedbacksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>[]
          }
          delete: {
            args: Prisma.abuse_report_feedbacksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>
          }
          update: {
            args: Prisma.abuse_report_feedbacksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>
          }
          deleteMany: {
            args: Prisma.abuse_report_feedbacksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.abuse_report_feedbacksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.abuse_report_feedbacksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>[]
          }
          upsert: {
            args: Prisma.abuse_report_feedbacksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$abuse_report_feedbacksPayload>
          }
          aggregate: {
            args: Prisma.Abuse_report_feedbacksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAbuse_report_feedbacks>
          }
          groupBy: {
            args: Prisma.abuse_report_feedbacksGroupByArgs<ExtArgs>
            result: $Utils.Optional<Abuse_report_feedbacksGroupByOutputType>[]
          }
          count: {
            args: Prisma.abuse_report_feedbacksCountArgs<ExtArgs>
            result: $Utils.Optional<Abuse_report_feedbacksCountAggregateOutputType> | number
          }
        }
      }
      attendance: {
        payload: Prisma.$attendancePayload<ExtArgs>
        fields: Prisma.attendanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.attendanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.attendanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          findFirst: {
            args: Prisma.attendanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.attendanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          findMany: {
            args: Prisma.attendanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          create: {
            args: Prisma.attendanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          createMany: {
            args: Prisma.attendanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.attendanceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          delete: {
            args: Prisma.attendanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          update: {
            args: Prisma.attendanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          deleteMany: {
            args: Prisma.attendanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.attendanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.attendanceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          upsert: {
            args: Prisma.attendanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          aggregate: {
            args: Prisma.AttendanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAttendance>
          }
          groupBy: {
            args: Prisma.attendanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AttendanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.attendanceCountArgs<ExtArgs>
            result: $Utils.Optional<AttendanceCountAggregateOutputType> | number
          }
        }
      }
      coin_transaction: {
        payload: Prisma.$coin_transactionPayload<ExtArgs>
        fields: Prisma.coin_transactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.coin_transactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.coin_transactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>
          }
          findFirst: {
            args: Prisma.coin_transactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.coin_transactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>
          }
          findMany: {
            args: Prisma.coin_transactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>[]
          }
          create: {
            args: Prisma.coin_transactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>
          }
          createMany: {
            args: Prisma.coin_transactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.coin_transactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>[]
          }
          delete: {
            args: Prisma.coin_transactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>
          }
          update: {
            args: Prisma.coin_transactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>
          }
          deleteMany: {
            args: Prisma.coin_transactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.coin_transactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.coin_transactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>[]
          }
          upsert: {
            args: Prisma.coin_transactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coin_transactionPayload>
          }
          aggregate: {
            args: Prisma.Coin_transactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCoin_transaction>
          }
          groupBy: {
            args: Prisma.coin_transactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Coin_transactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.coin_transactionCountArgs<ExtArgs>
            result: $Utils.Optional<Coin_transactionCountAggregateOutputType> | number
          }
        }
      }
      comments: {
        payload: Prisma.$commentsPayload<ExtArgs>
        fields: Prisma.commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>
          }
          findFirst: {
            args: Prisma.commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>
          }
          findMany: {
            args: Prisma.commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>[]
          }
          create: {
            args: Prisma.commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>
          }
          createMany: {
            args: Prisma.commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.commentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>[]
          }
          delete: {
            args: Prisma.commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>
          }
          update: {
            args: Prisma.commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>
          }
          deleteMany: {
            args: Prisma.commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.commentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>[]
          }
          upsert: {
            args: Prisma.commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentsPayload>
          }
          aggregate: {
            args: Prisma.CommentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComments>
          }
          groupBy: {
            args: Prisma.commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.commentsCountArgs<ExtArgs>
            result: $Utils.Optional<CommentsCountAggregateOutputType> | number
          }
        }
      }
      comments_group: {
        payload: Prisma.$comments_groupPayload<ExtArgs>
        fields: Prisma.comments_groupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.comments_groupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.comments_groupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>
          }
          findFirst: {
            args: Prisma.comments_groupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.comments_groupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>
          }
          findMany: {
            args: Prisma.comments_groupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>[]
          }
          create: {
            args: Prisma.comments_groupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>
          }
          createMany: {
            args: Prisma.comments_groupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.comments_groupCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>[]
          }
          delete: {
            args: Prisma.comments_groupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>
          }
          update: {
            args: Prisma.comments_groupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>
          }
          deleteMany: {
            args: Prisma.comments_groupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.comments_groupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.comments_groupUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>[]
          }
          upsert: {
            args: Prisma.comments_groupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comments_groupPayload>
          }
          aggregate: {
            args: Prisma.Comments_groupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComments_group>
          }
          groupBy: {
            args: Prisma.comments_groupGroupByArgs<ExtArgs>
            result: $Utils.Optional<Comments_groupGroupByOutputType>[]
          }
          count: {
            args: Prisma.comments_groupCountArgs<ExtArgs>
            result: $Utils.Optional<Comments_groupCountAggregateOutputType> | number
          }
        }
      }
      courses: {
        payload: Prisma.$coursesPayload<ExtArgs>
        fields: Prisma.coursesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.coursesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.coursesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          findFirst: {
            args: Prisma.coursesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.coursesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          findMany: {
            args: Prisma.coursesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>[]
          }
          create: {
            args: Prisma.coursesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          createMany: {
            args: Prisma.coursesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.coursesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>[]
          }
          delete: {
            args: Prisma.coursesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          update: {
            args: Prisma.coursesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          deleteMany: {
            args: Prisma.coursesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.coursesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.coursesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>[]
          }
          upsert: {
            args: Prisma.coursesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          aggregate: {
            args: Prisma.CoursesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourses>
          }
          groupBy: {
            args: Prisma.coursesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CoursesGroupByOutputType>[]
          }
          count: {
            args: Prisma.coursesCountArgs<ExtArgs>
            result: $Utils.Optional<CoursesCountAggregateOutputType> | number
          }
        }
      }
      error_report_feedbacks: {
        payload: Prisma.$error_report_feedbacksPayload<ExtArgs>
        fields: Prisma.error_report_feedbacksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.error_report_feedbacksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.error_report_feedbacksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>
          }
          findFirst: {
            args: Prisma.error_report_feedbacksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.error_report_feedbacksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>
          }
          findMany: {
            args: Prisma.error_report_feedbacksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>[]
          }
          create: {
            args: Prisma.error_report_feedbacksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>
          }
          createMany: {
            args: Prisma.error_report_feedbacksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.error_report_feedbacksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>[]
          }
          delete: {
            args: Prisma.error_report_feedbacksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>
          }
          update: {
            args: Prisma.error_report_feedbacksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>
          }
          deleteMany: {
            args: Prisma.error_report_feedbacksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.error_report_feedbacksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.error_report_feedbacksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>[]
          }
          upsert: {
            args: Prisma.error_report_feedbacksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$error_report_feedbacksPayload>
          }
          aggregate: {
            args: Prisma.Error_report_feedbacksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateError_report_feedbacks>
          }
          groupBy: {
            args: Prisma.error_report_feedbacksGroupByArgs<ExtArgs>
            result: $Utils.Optional<Error_report_feedbacksGroupByOutputType>[]
          }
          count: {
            args: Prisma.error_report_feedbacksCountArgs<ExtArgs>
            result: $Utils.Optional<Error_report_feedbacksCountAggregateOutputType> | number
          }
        }
      }
      group_members: {
        payload: Prisma.$group_membersPayload<ExtArgs>
        fields: Prisma.group_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.group_membersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.group_membersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          findFirst: {
            args: Prisma.group_membersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.group_membersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          findMany: {
            args: Prisma.group_membersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>[]
          }
          create: {
            args: Prisma.group_membersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          createMany: {
            args: Prisma.group_membersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.group_membersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>[]
          }
          delete: {
            args: Prisma.group_membersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          update: {
            args: Prisma.group_membersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          deleteMany: {
            args: Prisma.group_membersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.group_membersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.group_membersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>[]
          }
          upsert: {
            args: Prisma.group_membersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          aggregate: {
            args: Prisma.Group_membersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroup_members>
          }
          groupBy: {
            args: Prisma.group_membersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Group_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.group_membersCountArgs<ExtArgs>
            result: $Utils.Optional<Group_membersCountAggregateOutputType> | number
          }
        }
      }
      group_posts: {
        payload: Prisma.$group_postsPayload<ExtArgs>
        fields: Prisma.group_postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.group_postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.group_postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>
          }
          findFirst: {
            args: Prisma.group_postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.group_postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>
          }
          findMany: {
            args: Prisma.group_postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>[]
          }
          create: {
            args: Prisma.group_postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>
          }
          createMany: {
            args: Prisma.group_postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.group_postsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>[]
          }
          delete: {
            args: Prisma.group_postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>
          }
          update: {
            args: Prisma.group_postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>
          }
          deleteMany: {
            args: Prisma.group_postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.group_postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.group_postsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>[]
          }
          upsert: {
            args: Prisma.group_postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_postsPayload>
          }
          aggregate: {
            args: Prisma.Group_postsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroup_posts>
          }
          groupBy: {
            args: Prisma.group_postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Group_postsGroupByOutputType>[]
          }
          count: {
            args: Prisma.group_postsCountArgs<ExtArgs>
            result: $Utils.Optional<Group_postsCountAggregateOutputType> | number
          }
        }
      }
      groups: {
        payload: Prisma.$groupsPayload<ExtArgs>
        fields: Prisma.groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          findFirst: {
            args: Prisma.groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          findMany: {
            args: Prisma.groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>[]
          }
          create: {
            args: Prisma.groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          createMany: {
            args: Prisma.groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.groupsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>[]
          }
          delete: {
            args: Prisma.groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          update: {
            args: Prisma.groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          deleteMany: {
            args: Prisma.groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.groupsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>[]
          }
          upsert: {
            args: Prisma.groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          aggregate: {
            args: Prisma.GroupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroups>
          }
          groupBy: {
            args: Prisma.groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<GroupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.groupsCountArgs<ExtArgs>
            result: $Utils.Optional<GroupsCountAggregateOutputType> | number
          }
        }
      }
      messages: {
        payload: Prisma.$messagesPayload<ExtArgs>
        fields: Prisma.messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findFirst: {
            args: Prisma.messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findMany: {
            args: Prisma.messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          create: {
            args: Prisma.messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          createMany: {
            args: Prisma.messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.messagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          delete: {
            args: Prisma.messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          update: {
            args: Prisma.messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          deleteMany: {
            args: Prisma.messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.messagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          upsert: {
            args: Prisma.messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          aggregate: {
            args: Prisma.MessagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessages>
          }
          groupBy: {
            args: Prisma.messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.messagesCountArgs<ExtArgs>
            result: $Utils.Optional<MessagesCountAggregateOutputType> | number
          }
        }
      }
      packages: {
        payload: Prisma.$packagesPayload<ExtArgs>
        fields: Prisma.packagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.packagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.packagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          findFirst: {
            args: Prisma.packagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.packagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          findMany: {
            args: Prisma.packagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>[]
          }
          create: {
            args: Prisma.packagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          createMany: {
            args: Prisma.packagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.packagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>[]
          }
          delete: {
            args: Prisma.packagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          update: {
            args: Prisma.packagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          deleteMany: {
            args: Prisma.packagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.packagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.packagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>[]
          }
          upsert: {
            args: Prisma.packagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          aggregate: {
            args: Prisma.PackagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePackages>
          }
          groupBy: {
            args: Prisma.packagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PackagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.packagesCountArgs<ExtArgs>
            result: $Utils.Optional<PackagesCountAggregateOutputType> | number
          }
        }
      }
      posts: {
        payload: Prisma.$postsPayload<ExtArgs>
        fields: Prisma.postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          findFirst: {
            args: Prisma.postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          findMany: {
            args: Prisma.postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>[]
          }
          create: {
            args: Prisma.postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          createMany: {
            args: Prisma.postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.postsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>[]
          }
          delete: {
            args: Prisma.postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          update: {
            args: Prisma.postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          deleteMany: {
            args: Prisma.postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.postsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>[]
          }
          upsert: {
            args: Prisma.postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          aggregate: {
            args: Prisma.PostsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePosts>
          }
          groupBy: {
            args: Prisma.postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostsGroupByOutputType>[]
          }
          count: {
            args: Prisma.postsCountArgs<ExtArgs>
            result: $Utils.Optional<PostsCountAggregateOutputType> | number
          }
        }
      }
      react_comments: {
        payload: Prisma.$react_commentsPayload<ExtArgs>
        fields: Prisma.react_commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.react_commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.react_commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>
          }
          findFirst: {
            args: Prisma.react_commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.react_commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>
          }
          findMany: {
            args: Prisma.react_commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>[]
          }
          create: {
            args: Prisma.react_commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>
          }
          createMany: {
            args: Prisma.react_commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.react_commentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>[]
          }
          delete: {
            args: Prisma.react_commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>
          }
          update: {
            args: Prisma.react_commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>
          }
          deleteMany: {
            args: Prisma.react_commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.react_commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.react_commentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>[]
          }
          upsert: {
            args: Prisma.react_commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_commentsPayload>
          }
          aggregate: {
            args: Prisma.React_commentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReact_comments>
          }
          groupBy: {
            args: Prisma.react_commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<React_commentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.react_commentsCountArgs<ExtArgs>
            result: $Utils.Optional<React_commentsCountAggregateOutputType> | number
          }
        }
      }
      react_posts: {
        payload: Prisma.$react_postsPayload<ExtArgs>
        fields: Prisma.react_postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.react_postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.react_postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>
          }
          findFirst: {
            args: Prisma.react_postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.react_postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>
          }
          findMany: {
            args: Prisma.react_postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>[]
          }
          create: {
            args: Prisma.react_postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>
          }
          createMany: {
            args: Prisma.react_postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.react_postsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>[]
          }
          delete: {
            args: Prisma.react_postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>
          }
          update: {
            args: Prisma.react_postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>
          }
          deleteMany: {
            args: Prisma.react_postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.react_postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.react_postsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>[]
          }
          upsert: {
            args: Prisma.react_postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$react_postsPayload>
          }
          aggregate: {
            args: Prisma.React_postsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReact_posts>
          }
          groupBy: {
            args: Prisma.react_postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<React_postsGroupByOutputType>[]
          }
          count: {
            args: Prisma.react_postsCountArgs<ExtArgs>
            result: $Utils.Optional<React_postsCountAggregateOutputType> | number
          }
        }
      }
      shared_post: {
        payload: Prisma.$shared_postPayload<ExtArgs>
        fields: Prisma.shared_postFieldRefs
        operations: {
          findUnique: {
            args: Prisma.shared_postFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.shared_postFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>
          }
          findFirst: {
            args: Prisma.shared_postFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.shared_postFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>
          }
          findMany: {
            args: Prisma.shared_postFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>[]
          }
          create: {
            args: Prisma.shared_postCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>
          }
          createMany: {
            args: Prisma.shared_postCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.shared_postCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>[]
          }
          delete: {
            args: Prisma.shared_postDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>
          }
          update: {
            args: Prisma.shared_postUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>
          }
          deleteMany: {
            args: Prisma.shared_postDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.shared_postUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.shared_postUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>[]
          }
          upsert: {
            args: Prisma.shared_postUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shared_postPayload>
          }
          aggregate: {
            args: Prisma.Shared_postAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShared_post>
          }
          groupBy: {
            args: Prisma.shared_postGroupByArgs<ExtArgs>
            result: $Utils.Optional<Shared_postGroupByOutputType>[]
          }
          count: {
            args: Prisma.shared_postCountArgs<ExtArgs>
            result: $Utils.Optional<Shared_postCountAggregateOutputType> | number
          }
        }
      }
      study_access_topic: {
        payload: Prisma.$study_access_topicPayload<ExtArgs>
        fields: Prisma.study_access_topicFieldRefs
        operations: {
          findUnique: {
            args: Prisma.study_access_topicFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.study_access_topicFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>
          }
          findFirst: {
            args: Prisma.study_access_topicFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.study_access_topicFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>
          }
          findMany: {
            args: Prisma.study_access_topicFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>[]
          }
          create: {
            args: Prisma.study_access_topicCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>
          }
          createMany: {
            args: Prisma.study_access_topicCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.study_access_topicCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>[]
          }
          delete: {
            args: Prisma.study_access_topicDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>
          }
          update: {
            args: Prisma.study_access_topicUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>
          }
          deleteMany: {
            args: Prisma.study_access_topicDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.study_access_topicUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.study_access_topicUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>[]
          }
          upsert: {
            args: Prisma.study_access_topicUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$study_access_topicPayload>
          }
          aggregate: {
            args: Prisma.Study_access_topicAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStudy_access_topic>
          }
          groupBy: {
            args: Prisma.study_access_topicGroupByArgs<ExtArgs>
            result: $Utils.Optional<Study_access_topicGroupByOutputType>[]
          }
          count: {
            args: Prisma.study_access_topicCountArgs<ExtArgs>
            result: $Utils.Optional<Study_access_topicCountAggregateOutputType> | number
          }
        }
      }
      topics: {
        payload: Prisma.$topicsPayload<ExtArgs>
        fields: Prisma.topicsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.topicsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.topicsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>
          }
          findFirst: {
            args: Prisma.topicsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.topicsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>
          }
          findMany: {
            args: Prisma.topicsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>[]
          }
          create: {
            args: Prisma.topicsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>
          }
          createMany: {
            args: Prisma.topicsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.topicsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>[]
          }
          delete: {
            args: Prisma.topicsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>
          }
          update: {
            args: Prisma.topicsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>
          }
          deleteMany: {
            args: Prisma.topicsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.topicsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.topicsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>[]
          }
          upsert: {
            args: Prisma.topicsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$topicsPayload>
          }
          aggregate: {
            args: Prisma.TopicsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTopics>
          }
          groupBy: {
            args: Prisma.topicsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TopicsGroupByOutputType>[]
          }
          count: {
            args: Prisma.topicsCountArgs<ExtArgs>
            result: $Utils.Optional<TopicsCountAggregateOutputType> | number
          }
        }
      }
      transaction_history: {
        payload: Prisma.$transaction_historyPayload<ExtArgs>
        fields: Prisma.transaction_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transaction_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transaction_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>
          }
          findFirst: {
            args: Prisma.transaction_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transaction_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>
          }
          findMany: {
            args: Prisma.transaction_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>[]
          }
          create: {
            args: Prisma.transaction_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>
          }
          createMany: {
            args: Prisma.transaction_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transaction_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>[]
          }
          delete: {
            args: Prisma.transaction_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>
          }
          update: {
            args: Prisma.transaction_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>
          }
          deleteMany: {
            args: Prisma.transaction_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transaction_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.transaction_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>[]
          }
          upsert: {
            args: Prisma.transaction_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaction_historyPayload>
          }
          aggregate: {
            args: Prisma.Transaction_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaction_history>
          }
          groupBy: {
            args: Prisma.transaction_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Transaction_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.transaction_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Transaction_historyCountAggregateOutputType> | number
          }
        }
      }
      user_abuse_reports: {
        payload: Prisma.$user_abuse_reportsPayload<ExtArgs>
        fields: Prisma.user_abuse_reportsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_abuse_reportsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_abuse_reportsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>
          }
          findFirst: {
            args: Prisma.user_abuse_reportsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_abuse_reportsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>
          }
          findMany: {
            args: Prisma.user_abuse_reportsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>[]
          }
          create: {
            args: Prisma.user_abuse_reportsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>
          }
          createMany: {
            args: Prisma.user_abuse_reportsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_abuse_reportsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>[]
          }
          delete: {
            args: Prisma.user_abuse_reportsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>
          }
          update: {
            args: Prisma.user_abuse_reportsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>
          }
          deleteMany: {
            args: Prisma.user_abuse_reportsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_abuse_reportsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_abuse_reportsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>[]
          }
          upsert: {
            args: Prisma.user_abuse_reportsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_abuse_reportsPayload>
          }
          aggregate: {
            args: Prisma.User_abuse_reportsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_abuse_reports>
          }
          groupBy: {
            args: Prisma.user_abuse_reportsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_abuse_reportsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_abuse_reportsCountArgs<ExtArgs>
            result: $Utils.Optional<User_abuse_reportsCountAggregateOutputType> | number
          }
        }
      }
      user_courses: {
        payload: Prisma.$user_coursesPayload<ExtArgs>
        fields: Prisma.user_coursesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_coursesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_coursesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>
          }
          findFirst: {
            args: Prisma.user_coursesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_coursesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>
          }
          findMany: {
            args: Prisma.user_coursesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>[]
          }
          create: {
            args: Prisma.user_coursesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>
          }
          createMany: {
            args: Prisma.user_coursesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_coursesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>[]
          }
          delete: {
            args: Prisma.user_coursesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>
          }
          update: {
            args: Prisma.user_coursesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>
          }
          deleteMany: {
            args: Prisma.user_coursesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_coursesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_coursesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>[]
          }
          upsert: {
            args: Prisma.user_coursesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_coursesPayload>
          }
          aggregate: {
            args: Prisma.User_coursesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_courses>
          }
          groupBy: {
            args: Prisma.user_coursesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_coursesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_coursesCountArgs<ExtArgs>
            result: $Utils.Optional<User_coursesCountAggregateOutputType> | number
          }
        }
      }
      user_error_reports: {
        payload: Prisma.$user_error_reportsPayload<ExtArgs>
        fields: Prisma.user_error_reportsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_error_reportsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_error_reportsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>
          }
          findFirst: {
            args: Prisma.user_error_reportsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_error_reportsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>
          }
          findMany: {
            args: Prisma.user_error_reportsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>[]
          }
          create: {
            args: Prisma.user_error_reportsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>
          }
          createMany: {
            args: Prisma.user_error_reportsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_error_reportsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>[]
          }
          delete: {
            args: Prisma.user_error_reportsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>
          }
          update: {
            args: Prisma.user_error_reportsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>
          }
          deleteMany: {
            args: Prisma.user_error_reportsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_error_reportsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_error_reportsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>[]
          }
          upsert: {
            args: Prisma.user_error_reportsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_error_reportsPayload>
          }
          aggregate: {
            args: Prisma.User_error_reportsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_error_reports>
          }
          groupBy: {
            args: Prisma.user_error_reportsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_error_reportsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_error_reportsCountArgs<ExtArgs>
            result: $Utils.Optional<User_error_reportsCountAggregateOutputType> | number
          }
        }
      }
      user_packages: {
        payload: Prisma.$user_packagesPayload<ExtArgs>
        fields: Prisma.user_packagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_packagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_packagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>
          }
          findFirst: {
            args: Prisma.user_packagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_packagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>
          }
          findMany: {
            args: Prisma.user_packagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>[]
          }
          create: {
            args: Prisma.user_packagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>
          }
          createMany: {
            args: Prisma.user_packagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_packagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>[]
          }
          delete: {
            args: Prisma.user_packagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>
          }
          update: {
            args: Prisma.user_packagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>
          }
          deleteMany: {
            args: Prisma.user_packagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_packagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_packagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>[]
          }
          upsert: {
            args: Prisma.user_packagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_packagesPayload>
          }
          aggregate: {
            args: Prisma.User_packagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_packages>
          }
          groupBy: {
            args: Prisma.user_packagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_packagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_packagesCountArgs<ExtArgs>
            result: $Utils.Optional<User_packagesCountAggregateOutputType> | number
          }
        }
      }
      user_profile_history: {
        payload: Prisma.$user_profile_historyPayload<ExtArgs>
        fields: Prisma.user_profile_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_profile_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_profile_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>
          }
          findFirst: {
            args: Prisma.user_profile_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_profile_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>
          }
          findMany: {
            args: Prisma.user_profile_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>[]
          }
          create: {
            args: Prisma.user_profile_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>
          }
          createMany: {
            args: Prisma.user_profile_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_profile_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>[]
          }
          delete: {
            args: Prisma.user_profile_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>
          }
          update: {
            args: Prisma.user_profile_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>
          }
          deleteMany: {
            args: Prisma.user_profile_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_profile_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_profile_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>[]
          }
          upsert: {
            args: Prisma.user_profile_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profile_historyPayload>
          }
          aggregate: {
            args: Prisma.User_profile_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_profile_history>
          }
          groupBy: {
            args: Prisma.user_profile_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_profile_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_profile_historyCountArgs<ExtArgs>
            result: $Utils.Optional<User_profile_historyCountAggregateOutputType> | number
          }
        }
      }
      user_progress: {
        payload: Prisma.$user_progressPayload<ExtArgs>
        fields: Prisma.user_progressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_progressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_progressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>
          }
          findFirst: {
            args: Prisma.user_progressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_progressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>
          }
          findMany: {
            args: Prisma.user_progressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>[]
          }
          create: {
            args: Prisma.user_progressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>
          }
          createMany: {
            args: Prisma.user_progressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_progressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>[]
          }
          delete: {
            args: Prisma.user_progressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>
          }
          update: {
            args: Prisma.user_progressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>
          }
          deleteMany: {
            args: Prisma.user_progressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_progressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_progressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>[]
          }
          upsert: {
            args: Prisma.user_progressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_progressPayload>
          }
          aggregate: {
            args: Prisma.User_progressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_progress>
          }
          groupBy: {
            args: Prisma.user_progressGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_progressGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_progressCountArgs<ExtArgs>
            result: $Utils.Optional<User_progressCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      words: {
        payload: Prisma.$wordsPayload<ExtArgs>
        fields: Prisma.wordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>
          }
          findFirst: {
            args: Prisma.wordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>
          }
          findMany: {
            args: Prisma.wordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>[]
          }
          create: {
            args: Prisma.wordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>
          }
          createMany: {
            args: Prisma.wordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.wordsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>[]
          }
          delete: {
            args: Prisma.wordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>
          }
          update: {
            args: Prisma.wordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>
          }
          deleteMany: {
            args: Prisma.wordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.wordsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>[]
          }
          upsert: {
            args: Prisma.wordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wordsPayload>
          }
          aggregate: {
            args: Prisma.WordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWords>
          }
          groupBy: {
            args: Prisma.wordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<WordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wordsCountArgs<ExtArgs>
            result: $Utils.Optional<WordsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    abuse_report_feedbacks?: abuse_report_feedbacksOmit
    attendance?: attendanceOmit
    coin_transaction?: coin_transactionOmit
    comments?: commentsOmit
    comments_group?: comments_groupOmit
    courses?: coursesOmit
    error_report_feedbacks?: error_report_feedbacksOmit
    group_members?: group_membersOmit
    group_posts?: group_postsOmit
    groups?: groupsOmit
    messages?: messagesOmit
    packages?: packagesOmit
    posts?: postsOmit
    react_comments?: react_commentsOmit
    react_posts?: react_postsOmit
    shared_post?: shared_postOmit
    study_access_topic?: study_access_topicOmit
    topics?: topicsOmit
    transaction_history?: transaction_historyOmit
    user_abuse_reports?: user_abuse_reportsOmit
    user_courses?: user_coursesOmit
    user_error_reports?: user_error_reportsOmit
    user_packages?: user_packagesOmit
    user_profile_history?: user_profile_historyOmit
    user_progress?: user_progressOmit
    users?: usersOmit
    words?: wordsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CommentsCountOutputType
   */

  export type CommentsCountOutputType = {
    react_comments: number
  }

  export type CommentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    react_comments?: boolean | CommentsCountOutputTypeCountReact_commentsArgs
  }

  // Custom InputTypes
  /**
   * CommentsCountOutputType without action
   */
  export type CommentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentsCountOutputType
     */
    select?: CommentsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommentsCountOutputType without action
   */
  export type CommentsCountOutputTypeCountReact_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: react_commentsWhereInput
  }


  /**
   * Count Type CoursesCountOutputType
   */

  export type CoursesCountOutputType = {
    user_courses: number
    words: number
  }

  export type CoursesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_courses?: boolean | CoursesCountOutputTypeCountUser_coursesArgs
    words?: boolean | CoursesCountOutputTypeCountWordsArgs
  }

  // Custom InputTypes
  /**
   * CoursesCountOutputType without action
   */
  export type CoursesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoursesCountOutputType
     */
    select?: CoursesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CoursesCountOutputType without action
   */
  export type CoursesCountOutputTypeCountUser_coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_coursesWhereInput
  }

  /**
   * CoursesCountOutputType without action
   */
  export type CoursesCountOutputTypeCountWordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wordsWhereInput
  }


  /**
   * Count Type GroupsCountOutputType
   */

  export type GroupsCountOutputType = {
    comments_group: number
    group_members: number
    group_posts: number
    messages: number
  }

  export type GroupsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments_group?: boolean | GroupsCountOutputTypeCountComments_groupArgs
    group_members?: boolean | GroupsCountOutputTypeCountGroup_membersArgs
    group_posts?: boolean | GroupsCountOutputTypeCountGroup_postsArgs
    messages?: boolean | GroupsCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroupsCountOutputType
     */
    select?: GroupsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountComments_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comments_groupWhereInput
  }

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountGroup_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_membersWhereInput
  }

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountGroup_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_postsWhereInput
  }

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }


  /**
   * Count Type PackagesCountOutputType
   */

  export type PackagesCountOutputType = {
    user_packages: number
  }

  export type PackagesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_packages?: boolean | PackagesCountOutputTypeCountUser_packagesArgs
  }

  // Custom InputTypes
  /**
   * PackagesCountOutputType without action
   */
  export type PackagesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackagesCountOutputType
     */
    select?: PackagesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PackagesCountOutputType without action
   */
  export type PackagesCountOutputTypeCountUser_packagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_packagesWhereInput
  }


  /**
   * Count Type PostsCountOutputType
   */

  export type PostsCountOutputType = {
    comments: number
    comments_group: number
    react_posts: number
    shared_post: number
  }

  export type PostsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | PostsCountOutputTypeCountCommentsArgs
    comments_group?: boolean | PostsCountOutputTypeCountComments_groupArgs
    react_posts?: boolean | PostsCountOutputTypeCountReact_postsArgs
    shared_post?: boolean | PostsCountOutputTypeCountShared_postArgs
  }

  // Custom InputTypes
  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostsCountOutputType
     */
    select?: PostsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentsWhereInput
  }

  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeCountComments_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comments_groupWhereInput
  }

  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeCountReact_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: react_postsWhereInput
  }

  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeCountShared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shared_postWhereInput
  }


  /**
   * Count Type Shared_postCountOutputType
   */

  export type Shared_postCountOutputType = {
    comments: number
    other_shared_post: number
  }

  export type Shared_postCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | Shared_postCountOutputTypeCountCommentsArgs
    other_shared_post?: boolean | Shared_postCountOutputTypeCountOther_shared_postArgs
  }

  // Custom InputTypes
  /**
   * Shared_postCountOutputType without action
   */
  export type Shared_postCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shared_postCountOutputType
     */
    select?: Shared_postCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Shared_postCountOutputType without action
   */
  export type Shared_postCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentsWhereInput
  }

  /**
   * Shared_postCountOutputType without action
   */
  export type Shared_postCountOutputTypeCountOther_shared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shared_postWhereInput
  }


  /**
   * Count Type TopicsCountOutputType
   */

  export type TopicsCountOutputType = {
    courses: number
    study_access_topic: number
  }

  export type TopicsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | TopicsCountOutputTypeCountCoursesArgs
    study_access_topic?: boolean | TopicsCountOutputTypeCountStudy_access_topicArgs
  }

  // Custom InputTypes
  /**
   * TopicsCountOutputType without action
   */
  export type TopicsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TopicsCountOutputType
     */
    select?: TopicsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TopicsCountOutputType without action
   */
  export type TopicsCountOutputTypeCountCoursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coursesWhereInput
  }

  /**
   * TopicsCountOutputType without action
   */
  export type TopicsCountOutputTypeCountStudy_access_topicArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: study_access_topicWhereInput
  }


  /**
   * Count Type User_abuse_reportsCountOutputType
   */

  export type User_abuse_reportsCountOutputType = {
    abuse_report_feedbacks: number
  }

  export type User_abuse_reportsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abuse_report_feedbacks?: boolean | User_abuse_reportsCountOutputTypeCountAbuse_report_feedbacksArgs
  }

  // Custom InputTypes
  /**
   * User_abuse_reportsCountOutputType without action
   */
  export type User_abuse_reportsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_abuse_reportsCountOutputType
     */
    select?: User_abuse_reportsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_abuse_reportsCountOutputType without action
   */
  export type User_abuse_reportsCountOutputTypeCountAbuse_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abuse_report_feedbacksWhereInput
  }


  /**
   * Count Type User_error_reportsCountOutputType
   */

  export type User_error_reportsCountOutputType = {
    error_report_feedbacks: number
  }

  export type User_error_reportsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    error_report_feedbacks?: boolean | User_error_reportsCountOutputTypeCountError_report_feedbacksArgs
  }

  // Custom InputTypes
  /**
   * User_error_reportsCountOutputType without action
   */
  export type User_error_reportsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_error_reportsCountOutputType
     */
    select?: User_error_reportsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_error_reportsCountOutputType without action
   */
  export type User_error_reportsCountOutputTypeCountError_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: error_report_feedbacksWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    abuse_report_feedbacks: number
    attendance: number
    coin_transaction: number
    comments: number
    comments_group: number
    error_report_feedbacks: number
    group_members: number
    group_posts: number
    groups: number
    messages: number
    posts: number
    react_comments: number
    react_posts: number
    shared_post: number
    study_access_topic: number
    transaction_history: number
    user_abuse_reports: number
    user_courses: number
    user_error_reports: number
    user_packages: number
    user_profile_history_user_profile_history_changed_byTousers: number
    user_profile_history_user_profile_history_user_idTousers: number
    user_progress: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abuse_report_feedbacks?: boolean | UsersCountOutputTypeCountAbuse_report_feedbacksArgs
    attendance?: boolean | UsersCountOutputTypeCountAttendanceArgs
    coin_transaction?: boolean | UsersCountOutputTypeCountCoin_transactionArgs
    comments?: boolean | UsersCountOutputTypeCountCommentsArgs
    comments_group?: boolean | UsersCountOutputTypeCountComments_groupArgs
    error_report_feedbacks?: boolean | UsersCountOutputTypeCountError_report_feedbacksArgs
    group_members?: boolean | UsersCountOutputTypeCountGroup_membersArgs
    group_posts?: boolean | UsersCountOutputTypeCountGroup_postsArgs
    groups?: boolean | UsersCountOutputTypeCountGroupsArgs
    messages?: boolean | UsersCountOutputTypeCountMessagesArgs
    posts?: boolean | UsersCountOutputTypeCountPostsArgs
    react_comments?: boolean | UsersCountOutputTypeCountReact_commentsArgs
    react_posts?: boolean | UsersCountOutputTypeCountReact_postsArgs
    shared_post?: boolean | UsersCountOutputTypeCountShared_postArgs
    study_access_topic?: boolean | UsersCountOutputTypeCountStudy_access_topicArgs
    transaction_history?: boolean | UsersCountOutputTypeCountTransaction_historyArgs
    user_abuse_reports?: boolean | UsersCountOutputTypeCountUser_abuse_reportsArgs
    user_courses?: boolean | UsersCountOutputTypeCountUser_coursesArgs
    user_error_reports?: boolean | UsersCountOutputTypeCountUser_error_reportsArgs
    user_packages?: boolean | UsersCountOutputTypeCountUser_packagesArgs
    user_profile_history_user_profile_history_changed_byTousers?: boolean | UsersCountOutputTypeCountUser_profile_history_user_profile_history_changed_byTousersArgs
    user_profile_history_user_profile_history_user_idTousers?: boolean | UsersCountOutputTypeCountUser_profile_history_user_profile_history_user_idTousersArgs
    user_progress?: boolean | UsersCountOutputTypeCountUser_progressArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAbuse_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abuse_report_feedbacksWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAttendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attendanceWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCoin_transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coin_transactionWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountComments_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comments_groupWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountError_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: error_report_feedbacksWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountGroup_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_membersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountGroup_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_postsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groupsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReact_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: react_commentsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReact_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: react_postsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountShared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shared_postWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountStudy_access_topicArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: study_access_topicWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountTransaction_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaction_historyWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_abuse_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_abuse_reportsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_coursesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_error_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_error_reportsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_packagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_packagesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_profile_history_user_profile_history_changed_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_profile_historyWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_profile_history_user_profile_history_user_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_profile_historyWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_progressWhereInput
  }


  /**
   * Count Type WordsCountOutputType
   */

  export type WordsCountOutputType = {
    user_progress: number
  }

  export type WordsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_progress?: boolean | WordsCountOutputTypeCountUser_progressArgs
  }

  // Custom InputTypes
  /**
   * WordsCountOutputType without action
   */
  export type WordsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WordsCountOutputType
     */
    select?: WordsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WordsCountOutputType without action
   */
  export type WordsCountOutputTypeCountUser_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_progressWhereInput
  }


  /**
   * Models
   */

  /**
   * Model abuse_report_feedbacks
   */

  export type AggregateAbuse_report_feedbacks = {
    _count: Abuse_report_feedbacksCountAggregateOutputType | null
    _min: Abuse_report_feedbacksMinAggregateOutputType | null
    _max: Abuse_report_feedbacksMaxAggregateOutputType | null
  }

  export type Abuse_report_feedbacksMinAggregateOutputType = {
    id: string | null
    report_id: string | null
    admin_id: string | null
    feedback: string | null
    responded_at: Date | null
  }

  export type Abuse_report_feedbacksMaxAggregateOutputType = {
    id: string | null
    report_id: string | null
    admin_id: string | null
    feedback: string | null
    responded_at: Date | null
  }

  export type Abuse_report_feedbacksCountAggregateOutputType = {
    id: number
    report_id: number
    admin_id: number
    feedback: number
    responded_at: number
    _all: number
  }


  export type Abuse_report_feedbacksMinAggregateInputType = {
    id?: true
    report_id?: true
    admin_id?: true
    feedback?: true
    responded_at?: true
  }

  export type Abuse_report_feedbacksMaxAggregateInputType = {
    id?: true
    report_id?: true
    admin_id?: true
    feedback?: true
    responded_at?: true
  }

  export type Abuse_report_feedbacksCountAggregateInputType = {
    id?: true
    report_id?: true
    admin_id?: true
    feedback?: true
    responded_at?: true
    _all?: true
  }

  export type Abuse_report_feedbacksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which abuse_report_feedbacks to aggregate.
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abuse_report_feedbacks to fetch.
     */
    orderBy?: abuse_report_feedbacksOrderByWithRelationInput | abuse_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: abuse_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abuse_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abuse_report_feedbacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned abuse_report_feedbacks
    **/
    _count?: true | Abuse_report_feedbacksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Abuse_report_feedbacksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Abuse_report_feedbacksMaxAggregateInputType
  }

  export type GetAbuse_report_feedbacksAggregateType<T extends Abuse_report_feedbacksAggregateArgs> = {
        [P in keyof T & keyof AggregateAbuse_report_feedbacks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAbuse_report_feedbacks[P]>
      : GetScalarType<T[P], AggregateAbuse_report_feedbacks[P]>
  }




  export type abuse_report_feedbacksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abuse_report_feedbacksWhereInput
    orderBy?: abuse_report_feedbacksOrderByWithAggregationInput | abuse_report_feedbacksOrderByWithAggregationInput[]
    by: Abuse_report_feedbacksScalarFieldEnum[] | Abuse_report_feedbacksScalarFieldEnum
    having?: abuse_report_feedbacksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Abuse_report_feedbacksCountAggregateInputType | true
    _min?: Abuse_report_feedbacksMinAggregateInputType
    _max?: Abuse_report_feedbacksMaxAggregateInputType
  }

  export type Abuse_report_feedbacksGroupByOutputType = {
    id: string
    report_id: string
    admin_id: string | null
    feedback: string | null
    responded_at: Date | null
    _count: Abuse_report_feedbacksCountAggregateOutputType | null
    _min: Abuse_report_feedbacksMinAggregateOutputType | null
    _max: Abuse_report_feedbacksMaxAggregateOutputType | null
  }

  type GetAbuse_report_feedbacksGroupByPayload<T extends abuse_report_feedbacksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Abuse_report_feedbacksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Abuse_report_feedbacksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Abuse_report_feedbacksGroupByOutputType[P]>
            : GetScalarType<T[P], Abuse_report_feedbacksGroupByOutputType[P]>
        }
      >
    >


  export type abuse_report_feedbacksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
    user_abuse_reports?: boolean | user_abuse_reportsDefaultArgs<ExtArgs>
    users?: boolean | abuse_report_feedbacks$usersArgs<ExtArgs>
  }, ExtArgs["result"]["abuse_report_feedbacks"]>

  export type abuse_report_feedbacksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
    user_abuse_reports?: boolean | user_abuse_reportsDefaultArgs<ExtArgs>
    users?: boolean | abuse_report_feedbacks$usersArgs<ExtArgs>
  }, ExtArgs["result"]["abuse_report_feedbacks"]>

  export type abuse_report_feedbacksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
    user_abuse_reports?: boolean | user_abuse_reportsDefaultArgs<ExtArgs>
    users?: boolean | abuse_report_feedbacks$usersArgs<ExtArgs>
  }, ExtArgs["result"]["abuse_report_feedbacks"]>

  export type abuse_report_feedbacksSelectScalar = {
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
  }

  export type abuse_report_feedbacksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "report_id" | "admin_id" | "feedback" | "responded_at", ExtArgs["result"]["abuse_report_feedbacks"]>
  export type abuse_report_feedbacksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_abuse_reports?: boolean | user_abuse_reportsDefaultArgs<ExtArgs>
    users?: boolean | abuse_report_feedbacks$usersArgs<ExtArgs>
  }
  export type abuse_report_feedbacksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_abuse_reports?: boolean | user_abuse_reportsDefaultArgs<ExtArgs>
    users?: boolean | abuse_report_feedbacks$usersArgs<ExtArgs>
  }
  export type abuse_report_feedbacksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_abuse_reports?: boolean | user_abuse_reportsDefaultArgs<ExtArgs>
    users?: boolean | abuse_report_feedbacks$usersArgs<ExtArgs>
  }

  export type $abuse_report_feedbacksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "abuse_report_feedbacks"
    objects: {
      user_abuse_reports: Prisma.$user_abuse_reportsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      report_id: string
      admin_id: string | null
      feedback: string | null
      responded_at: Date | null
    }, ExtArgs["result"]["abuse_report_feedbacks"]>
    composites: {}
  }

  type abuse_report_feedbacksGetPayload<S extends boolean | null | undefined | abuse_report_feedbacksDefaultArgs> = $Result.GetResult<Prisma.$abuse_report_feedbacksPayload, S>

  type abuse_report_feedbacksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<abuse_report_feedbacksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Abuse_report_feedbacksCountAggregateInputType | true
    }

  export interface abuse_report_feedbacksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['abuse_report_feedbacks'], meta: { name: 'abuse_report_feedbacks' } }
    /**
     * Find zero or one Abuse_report_feedbacks that matches the filter.
     * @param {abuse_report_feedbacksFindUniqueArgs} args - Arguments to find a Abuse_report_feedbacks
     * @example
     * // Get one Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends abuse_report_feedbacksFindUniqueArgs>(args: SelectSubset<T, abuse_report_feedbacksFindUniqueArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Abuse_report_feedbacks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {abuse_report_feedbacksFindUniqueOrThrowArgs} args - Arguments to find a Abuse_report_feedbacks
     * @example
     * // Get one Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends abuse_report_feedbacksFindUniqueOrThrowArgs>(args: SelectSubset<T, abuse_report_feedbacksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Abuse_report_feedbacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abuse_report_feedbacksFindFirstArgs} args - Arguments to find a Abuse_report_feedbacks
     * @example
     * // Get one Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends abuse_report_feedbacksFindFirstArgs>(args?: SelectSubset<T, abuse_report_feedbacksFindFirstArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Abuse_report_feedbacks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abuse_report_feedbacksFindFirstOrThrowArgs} args - Arguments to find a Abuse_report_feedbacks
     * @example
     * // Get one Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends abuse_report_feedbacksFindFirstOrThrowArgs>(args?: SelectSubset<T, abuse_report_feedbacksFindFirstOrThrowArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Abuse_report_feedbacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abuse_report_feedbacksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findMany()
     * 
     * // Get first 10 Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const abuse_report_feedbacksWithIdOnly = await prisma.abuse_report_feedbacks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends abuse_report_feedbacksFindManyArgs>(args?: SelectSubset<T, abuse_report_feedbacksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Abuse_report_feedbacks.
     * @param {abuse_report_feedbacksCreateArgs} args - Arguments to create a Abuse_report_feedbacks.
     * @example
     * // Create one Abuse_report_feedbacks
     * const Abuse_report_feedbacks = await prisma.abuse_report_feedbacks.create({
     *   data: {
     *     // ... data to create a Abuse_report_feedbacks
     *   }
     * })
     * 
     */
    create<T extends abuse_report_feedbacksCreateArgs>(args: SelectSubset<T, abuse_report_feedbacksCreateArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Abuse_report_feedbacks.
     * @param {abuse_report_feedbacksCreateManyArgs} args - Arguments to create many Abuse_report_feedbacks.
     * @example
     * // Create many Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends abuse_report_feedbacksCreateManyArgs>(args?: SelectSubset<T, abuse_report_feedbacksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Abuse_report_feedbacks and returns the data saved in the database.
     * @param {abuse_report_feedbacksCreateManyAndReturnArgs} args - Arguments to create many Abuse_report_feedbacks.
     * @example
     * // Create many Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Abuse_report_feedbacks and only return the `id`
     * const abuse_report_feedbacksWithIdOnly = await prisma.abuse_report_feedbacks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends abuse_report_feedbacksCreateManyAndReturnArgs>(args?: SelectSubset<T, abuse_report_feedbacksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Abuse_report_feedbacks.
     * @param {abuse_report_feedbacksDeleteArgs} args - Arguments to delete one Abuse_report_feedbacks.
     * @example
     * // Delete one Abuse_report_feedbacks
     * const Abuse_report_feedbacks = await prisma.abuse_report_feedbacks.delete({
     *   where: {
     *     // ... filter to delete one Abuse_report_feedbacks
     *   }
     * })
     * 
     */
    delete<T extends abuse_report_feedbacksDeleteArgs>(args: SelectSubset<T, abuse_report_feedbacksDeleteArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Abuse_report_feedbacks.
     * @param {abuse_report_feedbacksUpdateArgs} args - Arguments to update one Abuse_report_feedbacks.
     * @example
     * // Update one Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends abuse_report_feedbacksUpdateArgs>(args: SelectSubset<T, abuse_report_feedbacksUpdateArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Abuse_report_feedbacks.
     * @param {abuse_report_feedbacksDeleteManyArgs} args - Arguments to filter Abuse_report_feedbacks to delete.
     * @example
     * // Delete a few Abuse_report_feedbacks
     * const { count } = await prisma.abuse_report_feedbacks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends abuse_report_feedbacksDeleteManyArgs>(args?: SelectSubset<T, abuse_report_feedbacksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Abuse_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abuse_report_feedbacksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends abuse_report_feedbacksUpdateManyArgs>(args: SelectSubset<T, abuse_report_feedbacksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Abuse_report_feedbacks and returns the data updated in the database.
     * @param {abuse_report_feedbacksUpdateManyAndReturnArgs} args - Arguments to update many Abuse_report_feedbacks.
     * @example
     * // Update many Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Abuse_report_feedbacks and only return the `id`
     * const abuse_report_feedbacksWithIdOnly = await prisma.abuse_report_feedbacks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends abuse_report_feedbacksUpdateManyAndReturnArgs>(args: SelectSubset<T, abuse_report_feedbacksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Abuse_report_feedbacks.
     * @param {abuse_report_feedbacksUpsertArgs} args - Arguments to update or create a Abuse_report_feedbacks.
     * @example
     * // Update or create a Abuse_report_feedbacks
     * const abuse_report_feedbacks = await prisma.abuse_report_feedbacks.upsert({
     *   create: {
     *     // ... data to create a Abuse_report_feedbacks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Abuse_report_feedbacks we want to update
     *   }
     * })
     */
    upsert<T extends abuse_report_feedbacksUpsertArgs>(args: SelectSubset<T, abuse_report_feedbacksUpsertArgs<ExtArgs>>): Prisma__abuse_report_feedbacksClient<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Abuse_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abuse_report_feedbacksCountArgs} args - Arguments to filter Abuse_report_feedbacks to count.
     * @example
     * // Count the number of Abuse_report_feedbacks
     * const count = await prisma.abuse_report_feedbacks.count({
     *   where: {
     *     // ... the filter for the Abuse_report_feedbacks we want to count
     *   }
     * })
    **/
    count<T extends abuse_report_feedbacksCountArgs>(
      args?: Subset<T, abuse_report_feedbacksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Abuse_report_feedbacksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Abuse_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Abuse_report_feedbacksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Abuse_report_feedbacksAggregateArgs>(args: Subset<T, Abuse_report_feedbacksAggregateArgs>): Prisma.PrismaPromise<GetAbuse_report_feedbacksAggregateType<T>>

    /**
     * Group by Abuse_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abuse_report_feedbacksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends abuse_report_feedbacksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: abuse_report_feedbacksGroupByArgs['orderBy'] }
        : { orderBy?: abuse_report_feedbacksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, abuse_report_feedbacksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAbuse_report_feedbacksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the abuse_report_feedbacks model
   */
  readonly fields: abuse_report_feedbacksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for abuse_report_feedbacks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__abuse_report_feedbacksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_abuse_reports<T extends user_abuse_reportsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, user_abuse_reportsDefaultArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends abuse_report_feedbacks$usersArgs<ExtArgs> = {}>(args?: Subset<T, abuse_report_feedbacks$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the abuse_report_feedbacks model
   */
  interface abuse_report_feedbacksFieldRefs {
    readonly id: FieldRef<"abuse_report_feedbacks", 'String'>
    readonly report_id: FieldRef<"abuse_report_feedbacks", 'String'>
    readonly admin_id: FieldRef<"abuse_report_feedbacks", 'String'>
    readonly feedback: FieldRef<"abuse_report_feedbacks", 'String'>
    readonly responded_at: FieldRef<"abuse_report_feedbacks", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * abuse_report_feedbacks findUnique
   */
  export type abuse_report_feedbacksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which abuse_report_feedbacks to fetch.
     */
    where: abuse_report_feedbacksWhereUniqueInput
  }

  /**
   * abuse_report_feedbacks findUniqueOrThrow
   */
  export type abuse_report_feedbacksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which abuse_report_feedbacks to fetch.
     */
    where: abuse_report_feedbacksWhereUniqueInput
  }

  /**
   * abuse_report_feedbacks findFirst
   */
  export type abuse_report_feedbacksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which abuse_report_feedbacks to fetch.
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abuse_report_feedbacks to fetch.
     */
    orderBy?: abuse_report_feedbacksOrderByWithRelationInput | abuse_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for abuse_report_feedbacks.
     */
    cursor?: abuse_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abuse_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abuse_report_feedbacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of abuse_report_feedbacks.
     */
    distinct?: Abuse_report_feedbacksScalarFieldEnum | Abuse_report_feedbacksScalarFieldEnum[]
  }

  /**
   * abuse_report_feedbacks findFirstOrThrow
   */
  export type abuse_report_feedbacksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which abuse_report_feedbacks to fetch.
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abuse_report_feedbacks to fetch.
     */
    orderBy?: abuse_report_feedbacksOrderByWithRelationInput | abuse_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for abuse_report_feedbacks.
     */
    cursor?: abuse_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abuse_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abuse_report_feedbacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of abuse_report_feedbacks.
     */
    distinct?: Abuse_report_feedbacksScalarFieldEnum | Abuse_report_feedbacksScalarFieldEnum[]
  }

  /**
   * abuse_report_feedbacks findMany
   */
  export type abuse_report_feedbacksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which abuse_report_feedbacks to fetch.
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abuse_report_feedbacks to fetch.
     */
    orderBy?: abuse_report_feedbacksOrderByWithRelationInput | abuse_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing abuse_report_feedbacks.
     */
    cursor?: abuse_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abuse_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abuse_report_feedbacks.
     */
    skip?: number
    distinct?: Abuse_report_feedbacksScalarFieldEnum | Abuse_report_feedbacksScalarFieldEnum[]
  }

  /**
   * abuse_report_feedbacks create
   */
  export type abuse_report_feedbacksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * The data needed to create a abuse_report_feedbacks.
     */
    data: XOR<abuse_report_feedbacksCreateInput, abuse_report_feedbacksUncheckedCreateInput>
  }

  /**
   * abuse_report_feedbacks createMany
   */
  export type abuse_report_feedbacksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many abuse_report_feedbacks.
     */
    data: abuse_report_feedbacksCreateManyInput | abuse_report_feedbacksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * abuse_report_feedbacks createManyAndReturn
   */
  export type abuse_report_feedbacksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * The data used to create many abuse_report_feedbacks.
     */
    data: abuse_report_feedbacksCreateManyInput | abuse_report_feedbacksCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * abuse_report_feedbacks update
   */
  export type abuse_report_feedbacksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * The data needed to update a abuse_report_feedbacks.
     */
    data: XOR<abuse_report_feedbacksUpdateInput, abuse_report_feedbacksUncheckedUpdateInput>
    /**
     * Choose, which abuse_report_feedbacks to update.
     */
    where: abuse_report_feedbacksWhereUniqueInput
  }

  /**
   * abuse_report_feedbacks updateMany
   */
  export type abuse_report_feedbacksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update abuse_report_feedbacks.
     */
    data: XOR<abuse_report_feedbacksUpdateManyMutationInput, abuse_report_feedbacksUncheckedUpdateManyInput>
    /**
     * Filter which abuse_report_feedbacks to update
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * Limit how many abuse_report_feedbacks to update.
     */
    limit?: number
  }

  /**
   * abuse_report_feedbacks updateManyAndReturn
   */
  export type abuse_report_feedbacksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * The data used to update abuse_report_feedbacks.
     */
    data: XOR<abuse_report_feedbacksUpdateManyMutationInput, abuse_report_feedbacksUncheckedUpdateManyInput>
    /**
     * Filter which abuse_report_feedbacks to update
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * Limit how many abuse_report_feedbacks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * abuse_report_feedbacks upsert
   */
  export type abuse_report_feedbacksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * The filter to search for the abuse_report_feedbacks to update in case it exists.
     */
    where: abuse_report_feedbacksWhereUniqueInput
    /**
     * In case the abuse_report_feedbacks found by the `where` argument doesn't exist, create a new abuse_report_feedbacks with this data.
     */
    create: XOR<abuse_report_feedbacksCreateInput, abuse_report_feedbacksUncheckedCreateInput>
    /**
     * In case the abuse_report_feedbacks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<abuse_report_feedbacksUpdateInput, abuse_report_feedbacksUncheckedUpdateInput>
  }

  /**
   * abuse_report_feedbacks delete
   */
  export type abuse_report_feedbacksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter which abuse_report_feedbacks to delete.
     */
    where: abuse_report_feedbacksWhereUniqueInput
  }

  /**
   * abuse_report_feedbacks deleteMany
   */
  export type abuse_report_feedbacksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which abuse_report_feedbacks to delete
     */
    where?: abuse_report_feedbacksWhereInput
    /**
     * Limit how many abuse_report_feedbacks to delete.
     */
    limit?: number
  }

  /**
   * abuse_report_feedbacks.users
   */
  export type abuse_report_feedbacks$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * abuse_report_feedbacks without action
   */
  export type abuse_report_feedbacksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
  }


  /**
   * Model attendance
   */

  export type AggregateAttendance = {
    _count: AttendanceCountAggregateOutputType | null
    _min: AttendanceMinAggregateOutputType | null
    _max: AttendanceMaxAggregateOutputType | null
  }

  export type AttendanceMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    checkin_date: Date | null
  }

  export type AttendanceMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    checkin_date: Date | null
  }

  export type AttendanceCountAggregateOutputType = {
    id: number
    user_id: number
    checkin_date: number
    _all: number
  }


  export type AttendanceMinAggregateInputType = {
    id?: true
    user_id?: true
    checkin_date?: true
  }

  export type AttendanceMaxAggregateInputType = {
    id?: true
    user_id?: true
    checkin_date?: true
  }

  export type AttendanceCountAggregateInputType = {
    id?: true
    user_id?: true
    checkin_date?: true
    _all?: true
  }

  export type AttendanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attendance to aggregate.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attendances
    **/
    _count?: true | AttendanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AttendanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AttendanceMaxAggregateInputType
  }

  export type GetAttendanceAggregateType<T extends AttendanceAggregateArgs> = {
        [P in keyof T & keyof AggregateAttendance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttendance[P]>
      : GetScalarType<T[P], AggregateAttendance[P]>
  }




  export type attendanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attendanceWhereInput
    orderBy?: attendanceOrderByWithAggregationInput | attendanceOrderByWithAggregationInput[]
    by: AttendanceScalarFieldEnum[] | AttendanceScalarFieldEnum
    having?: attendanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AttendanceCountAggregateInputType | true
    _min?: AttendanceMinAggregateInputType
    _max?: AttendanceMaxAggregateInputType
  }

  export type AttendanceGroupByOutputType = {
    id: string
    user_id: string
    checkin_date: Date
    _count: AttendanceCountAggregateOutputType | null
    _min: AttendanceMinAggregateOutputType | null
    _max: AttendanceMaxAggregateOutputType | null
  }

  type GetAttendanceGroupByPayload<T extends attendanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AttendanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AttendanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AttendanceGroupByOutputType[P]>
            : GetScalarType<T[P], AttendanceGroupByOutputType[P]>
        }
      >
    >


  export type attendanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    checkin_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["attendance"]>

  export type attendanceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    checkin_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["attendance"]>

  export type attendanceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    checkin_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["attendance"]>

  export type attendanceSelectScalar = {
    id?: boolean
    user_id?: boolean
    checkin_date?: boolean
  }

  export type attendanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "checkin_date", ExtArgs["result"]["attendance"]>
  export type attendanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type attendanceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type attendanceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $attendancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "attendance"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      checkin_date: Date
    }, ExtArgs["result"]["attendance"]>
    composites: {}
  }

  type attendanceGetPayload<S extends boolean | null | undefined | attendanceDefaultArgs> = $Result.GetResult<Prisma.$attendancePayload, S>

  type attendanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<attendanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AttendanceCountAggregateInputType | true
    }

  export interface attendanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['attendance'], meta: { name: 'attendance' } }
    /**
     * Find zero or one Attendance that matches the filter.
     * @param {attendanceFindUniqueArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends attendanceFindUniqueArgs>(args: SelectSubset<T, attendanceFindUniqueArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Attendance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {attendanceFindUniqueOrThrowArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends attendanceFindUniqueOrThrowArgs>(args: SelectSubset<T, attendanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attendance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindFirstArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends attendanceFindFirstArgs>(args?: SelectSubset<T, attendanceFindFirstArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attendance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindFirstOrThrowArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends attendanceFindFirstOrThrowArgs>(args?: SelectSubset<T, attendanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Attendances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attendances
     * const attendances = await prisma.attendance.findMany()
     * 
     * // Get first 10 Attendances
     * const attendances = await prisma.attendance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const attendanceWithIdOnly = await prisma.attendance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends attendanceFindManyArgs>(args?: SelectSubset<T, attendanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Attendance.
     * @param {attendanceCreateArgs} args - Arguments to create a Attendance.
     * @example
     * // Create one Attendance
     * const Attendance = await prisma.attendance.create({
     *   data: {
     *     // ... data to create a Attendance
     *   }
     * })
     * 
     */
    create<T extends attendanceCreateArgs>(args: SelectSubset<T, attendanceCreateArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Attendances.
     * @param {attendanceCreateManyArgs} args - Arguments to create many Attendances.
     * @example
     * // Create many Attendances
     * const attendance = await prisma.attendance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends attendanceCreateManyArgs>(args?: SelectSubset<T, attendanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Attendances and returns the data saved in the database.
     * @param {attendanceCreateManyAndReturnArgs} args - Arguments to create many Attendances.
     * @example
     * // Create many Attendances
     * const attendance = await prisma.attendance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Attendances and only return the `id`
     * const attendanceWithIdOnly = await prisma.attendance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends attendanceCreateManyAndReturnArgs>(args?: SelectSubset<T, attendanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Attendance.
     * @param {attendanceDeleteArgs} args - Arguments to delete one Attendance.
     * @example
     * // Delete one Attendance
     * const Attendance = await prisma.attendance.delete({
     *   where: {
     *     // ... filter to delete one Attendance
     *   }
     * })
     * 
     */
    delete<T extends attendanceDeleteArgs>(args: SelectSubset<T, attendanceDeleteArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Attendance.
     * @param {attendanceUpdateArgs} args - Arguments to update one Attendance.
     * @example
     * // Update one Attendance
     * const attendance = await prisma.attendance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends attendanceUpdateArgs>(args: SelectSubset<T, attendanceUpdateArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Attendances.
     * @param {attendanceDeleteManyArgs} args - Arguments to filter Attendances to delete.
     * @example
     * // Delete a few Attendances
     * const { count } = await prisma.attendance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends attendanceDeleteManyArgs>(args?: SelectSubset<T, attendanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attendances
     * const attendance = await prisma.attendance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends attendanceUpdateManyArgs>(args: SelectSubset<T, attendanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attendances and returns the data updated in the database.
     * @param {attendanceUpdateManyAndReturnArgs} args - Arguments to update many Attendances.
     * @example
     * // Update many Attendances
     * const attendance = await prisma.attendance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Attendances and only return the `id`
     * const attendanceWithIdOnly = await prisma.attendance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends attendanceUpdateManyAndReturnArgs>(args: SelectSubset<T, attendanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Attendance.
     * @param {attendanceUpsertArgs} args - Arguments to update or create a Attendance.
     * @example
     * // Update or create a Attendance
     * const attendance = await prisma.attendance.upsert({
     *   create: {
     *     // ... data to create a Attendance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attendance we want to update
     *   }
     * })
     */
    upsert<T extends attendanceUpsertArgs>(args: SelectSubset<T, attendanceUpsertArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceCountArgs} args - Arguments to filter Attendances to count.
     * @example
     * // Count the number of Attendances
     * const count = await prisma.attendance.count({
     *   where: {
     *     // ... the filter for the Attendances we want to count
     *   }
     * })
    **/
    count<T extends attendanceCountArgs>(
      args?: Subset<T, attendanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AttendanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AttendanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AttendanceAggregateArgs>(args: Subset<T, AttendanceAggregateArgs>): Prisma.PrismaPromise<GetAttendanceAggregateType<T>>

    /**
     * Group by Attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends attendanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: attendanceGroupByArgs['orderBy'] }
        : { orderBy?: attendanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, attendanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttendanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the attendance model
   */
  readonly fields: attendanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for attendance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__attendanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the attendance model
   */
  interface attendanceFieldRefs {
    readonly id: FieldRef<"attendance", 'String'>
    readonly user_id: FieldRef<"attendance", 'String'>
    readonly checkin_date: FieldRef<"attendance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * attendance findUnique
   */
  export type attendanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance findUniqueOrThrow
   */
  export type attendanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance findFirst
   */
  export type attendanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attendances.
     */
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance findFirstOrThrow
   */
  export type attendanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attendances.
     */
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance findMany
   */
  export type attendanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendances to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance create
   */
  export type attendanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * The data needed to create a attendance.
     */
    data: XOR<attendanceCreateInput, attendanceUncheckedCreateInput>
  }

  /**
   * attendance createMany
   */
  export type attendanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many attendances.
     */
    data: attendanceCreateManyInput | attendanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attendance createManyAndReturn
   */
  export type attendanceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The data used to create many attendances.
     */
    data: attendanceCreateManyInput | attendanceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * attendance update
   */
  export type attendanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * The data needed to update a attendance.
     */
    data: XOR<attendanceUpdateInput, attendanceUncheckedUpdateInput>
    /**
     * Choose, which attendance to update.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance updateMany
   */
  export type attendanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update attendances.
     */
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyInput>
    /**
     * Filter which attendances to update
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to update.
     */
    limit?: number
  }

  /**
   * attendance updateManyAndReturn
   */
  export type attendanceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The data used to update attendances.
     */
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyInput>
    /**
     * Filter which attendances to update
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * attendance upsert
   */
  export type attendanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * The filter to search for the attendance to update in case it exists.
     */
    where: attendanceWhereUniqueInput
    /**
     * In case the attendance found by the `where` argument doesn't exist, create a new attendance with this data.
     */
    create: XOR<attendanceCreateInput, attendanceUncheckedCreateInput>
    /**
     * In case the attendance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attendanceUpdateInput, attendanceUncheckedUpdateInput>
  }

  /**
   * attendance delete
   */
  export type attendanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter which attendance to delete.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance deleteMany
   */
  export type attendanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attendances to delete
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to delete.
     */
    limit?: number
  }

  /**
   * attendance without action
   */
  export type attendanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
  }


  /**
   * Model coin_transaction
   */

  export type AggregateCoin_transaction = {
    _count: Coin_transactionCountAggregateOutputType | null
    _avg: Coin_transactionAvgAggregateOutputType | null
    _sum: Coin_transactionSumAggregateOutputType | null
    _min: Coin_transactionMinAggregateOutputType | null
    _max: Coin_transactionMaxAggregateOutputType | null
  }

  export type Coin_transactionAvgAggregateOutputType = {
    amount: number | null
  }

  export type Coin_transactionSumAggregateOutputType = {
    amount: number | null
  }

  export type Coin_transactionMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    amount: number | null
    reason: string | null
    reference_id: string | null
    reference_table: string | null
    created_at: Date | null
  }

  export type Coin_transactionMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    amount: number | null
    reason: string | null
    reference_id: string | null
    reference_table: string | null
    created_at: Date | null
  }

  export type Coin_transactionCountAggregateOutputType = {
    id: number
    user_id: number
    amount: number
    reason: number
    reference_id: number
    reference_table: number
    created_at: number
    _all: number
  }


  export type Coin_transactionAvgAggregateInputType = {
    amount?: true
  }

  export type Coin_transactionSumAggregateInputType = {
    amount?: true
  }

  export type Coin_transactionMinAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    reason?: true
    reference_id?: true
    reference_table?: true
    created_at?: true
  }

  export type Coin_transactionMaxAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    reason?: true
    reference_id?: true
    reference_table?: true
    created_at?: true
  }

  export type Coin_transactionCountAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    reason?: true
    reference_id?: true
    reference_table?: true
    created_at?: true
    _all?: true
  }

  export type Coin_transactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which coin_transaction to aggregate.
     */
    where?: coin_transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coin_transactions to fetch.
     */
    orderBy?: coin_transactionOrderByWithRelationInput | coin_transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: coin_transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coin_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coin_transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned coin_transactions
    **/
    _count?: true | Coin_transactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Coin_transactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Coin_transactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Coin_transactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Coin_transactionMaxAggregateInputType
  }

  export type GetCoin_transactionAggregateType<T extends Coin_transactionAggregateArgs> = {
        [P in keyof T & keyof AggregateCoin_transaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCoin_transaction[P]>
      : GetScalarType<T[P], AggregateCoin_transaction[P]>
  }




  export type coin_transactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coin_transactionWhereInput
    orderBy?: coin_transactionOrderByWithAggregationInput | coin_transactionOrderByWithAggregationInput[]
    by: Coin_transactionScalarFieldEnum[] | Coin_transactionScalarFieldEnum
    having?: coin_transactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Coin_transactionCountAggregateInputType | true
    _avg?: Coin_transactionAvgAggregateInputType
    _sum?: Coin_transactionSumAggregateInputType
    _min?: Coin_transactionMinAggregateInputType
    _max?: Coin_transactionMaxAggregateInputType
  }

  export type Coin_transactionGroupByOutputType = {
    id: string
    user_id: string
    amount: number
    reason: string
    reference_id: string | null
    reference_table: string | null
    created_at: Date | null
    _count: Coin_transactionCountAggregateOutputType | null
    _avg: Coin_transactionAvgAggregateOutputType | null
    _sum: Coin_transactionSumAggregateOutputType | null
    _min: Coin_transactionMinAggregateOutputType | null
    _max: Coin_transactionMaxAggregateOutputType | null
  }

  type GetCoin_transactionGroupByPayload<T extends coin_transactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Coin_transactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Coin_transactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Coin_transactionGroupByOutputType[P]>
            : GetScalarType<T[P], Coin_transactionGroupByOutputType[P]>
        }
      >
    >


  export type coin_transactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    amount?: boolean
    reason?: boolean
    reference_id?: boolean
    reference_table?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coin_transaction"]>

  export type coin_transactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    amount?: boolean
    reason?: boolean
    reference_id?: boolean
    reference_table?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coin_transaction"]>

  export type coin_transactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    amount?: boolean
    reason?: boolean
    reference_id?: boolean
    reference_table?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coin_transaction"]>

  export type coin_transactionSelectScalar = {
    id?: boolean
    user_id?: boolean
    amount?: boolean
    reason?: boolean
    reference_id?: boolean
    reference_table?: boolean
    created_at?: boolean
  }

  export type coin_transactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "amount" | "reason" | "reference_id" | "reference_table" | "created_at", ExtArgs["result"]["coin_transaction"]>
  export type coin_transactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type coin_transactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type coin_transactionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $coin_transactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "coin_transaction"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      amount: number
      reason: string
      reference_id: string | null
      reference_table: string | null
      created_at: Date | null
    }, ExtArgs["result"]["coin_transaction"]>
    composites: {}
  }

  type coin_transactionGetPayload<S extends boolean | null | undefined | coin_transactionDefaultArgs> = $Result.GetResult<Prisma.$coin_transactionPayload, S>

  type coin_transactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<coin_transactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Coin_transactionCountAggregateInputType | true
    }

  export interface coin_transactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['coin_transaction'], meta: { name: 'coin_transaction' } }
    /**
     * Find zero or one Coin_transaction that matches the filter.
     * @param {coin_transactionFindUniqueArgs} args - Arguments to find a Coin_transaction
     * @example
     * // Get one Coin_transaction
     * const coin_transaction = await prisma.coin_transaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends coin_transactionFindUniqueArgs>(args: SelectSubset<T, coin_transactionFindUniqueArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Coin_transaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {coin_transactionFindUniqueOrThrowArgs} args - Arguments to find a Coin_transaction
     * @example
     * // Get one Coin_transaction
     * const coin_transaction = await prisma.coin_transaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends coin_transactionFindUniqueOrThrowArgs>(args: SelectSubset<T, coin_transactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Coin_transaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coin_transactionFindFirstArgs} args - Arguments to find a Coin_transaction
     * @example
     * // Get one Coin_transaction
     * const coin_transaction = await prisma.coin_transaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends coin_transactionFindFirstArgs>(args?: SelectSubset<T, coin_transactionFindFirstArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Coin_transaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coin_transactionFindFirstOrThrowArgs} args - Arguments to find a Coin_transaction
     * @example
     * // Get one Coin_transaction
     * const coin_transaction = await prisma.coin_transaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends coin_transactionFindFirstOrThrowArgs>(args?: SelectSubset<T, coin_transactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Coin_transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coin_transactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Coin_transactions
     * const coin_transactions = await prisma.coin_transaction.findMany()
     * 
     * // Get first 10 Coin_transactions
     * const coin_transactions = await prisma.coin_transaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const coin_transactionWithIdOnly = await prisma.coin_transaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends coin_transactionFindManyArgs>(args?: SelectSubset<T, coin_transactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Coin_transaction.
     * @param {coin_transactionCreateArgs} args - Arguments to create a Coin_transaction.
     * @example
     * // Create one Coin_transaction
     * const Coin_transaction = await prisma.coin_transaction.create({
     *   data: {
     *     // ... data to create a Coin_transaction
     *   }
     * })
     * 
     */
    create<T extends coin_transactionCreateArgs>(args: SelectSubset<T, coin_transactionCreateArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Coin_transactions.
     * @param {coin_transactionCreateManyArgs} args - Arguments to create many Coin_transactions.
     * @example
     * // Create many Coin_transactions
     * const coin_transaction = await prisma.coin_transaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends coin_transactionCreateManyArgs>(args?: SelectSubset<T, coin_transactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Coin_transactions and returns the data saved in the database.
     * @param {coin_transactionCreateManyAndReturnArgs} args - Arguments to create many Coin_transactions.
     * @example
     * // Create many Coin_transactions
     * const coin_transaction = await prisma.coin_transaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Coin_transactions and only return the `id`
     * const coin_transactionWithIdOnly = await prisma.coin_transaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends coin_transactionCreateManyAndReturnArgs>(args?: SelectSubset<T, coin_transactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Coin_transaction.
     * @param {coin_transactionDeleteArgs} args - Arguments to delete one Coin_transaction.
     * @example
     * // Delete one Coin_transaction
     * const Coin_transaction = await prisma.coin_transaction.delete({
     *   where: {
     *     // ... filter to delete one Coin_transaction
     *   }
     * })
     * 
     */
    delete<T extends coin_transactionDeleteArgs>(args: SelectSubset<T, coin_transactionDeleteArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Coin_transaction.
     * @param {coin_transactionUpdateArgs} args - Arguments to update one Coin_transaction.
     * @example
     * // Update one Coin_transaction
     * const coin_transaction = await prisma.coin_transaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends coin_transactionUpdateArgs>(args: SelectSubset<T, coin_transactionUpdateArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Coin_transactions.
     * @param {coin_transactionDeleteManyArgs} args - Arguments to filter Coin_transactions to delete.
     * @example
     * // Delete a few Coin_transactions
     * const { count } = await prisma.coin_transaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends coin_transactionDeleteManyArgs>(args?: SelectSubset<T, coin_transactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Coin_transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coin_transactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Coin_transactions
     * const coin_transaction = await prisma.coin_transaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends coin_transactionUpdateManyArgs>(args: SelectSubset<T, coin_transactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Coin_transactions and returns the data updated in the database.
     * @param {coin_transactionUpdateManyAndReturnArgs} args - Arguments to update many Coin_transactions.
     * @example
     * // Update many Coin_transactions
     * const coin_transaction = await prisma.coin_transaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Coin_transactions and only return the `id`
     * const coin_transactionWithIdOnly = await prisma.coin_transaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends coin_transactionUpdateManyAndReturnArgs>(args: SelectSubset<T, coin_transactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Coin_transaction.
     * @param {coin_transactionUpsertArgs} args - Arguments to update or create a Coin_transaction.
     * @example
     * // Update or create a Coin_transaction
     * const coin_transaction = await prisma.coin_transaction.upsert({
     *   create: {
     *     // ... data to create a Coin_transaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Coin_transaction we want to update
     *   }
     * })
     */
    upsert<T extends coin_transactionUpsertArgs>(args: SelectSubset<T, coin_transactionUpsertArgs<ExtArgs>>): Prisma__coin_transactionClient<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Coin_transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coin_transactionCountArgs} args - Arguments to filter Coin_transactions to count.
     * @example
     * // Count the number of Coin_transactions
     * const count = await prisma.coin_transaction.count({
     *   where: {
     *     // ... the filter for the Coin_transactions we want to count
     *   }
     * })
    **/
    count<T extends coin_transactionCountArgs>(
      args?: Subset<T, coin_transactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Coin_transactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Coin_transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Coin_transactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Coin_transactionAggregateArgs>(args: Subset<T, Coin_transactionAggregateArgs>): Prisma.PrismaPromise<GetCoin_transactionAggregateType<T>>

    /**
     * Group by Coin_transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coin_transactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends coin_transactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: coin_transactionGroupByArgs['orderBy'] }
        : { orderBy?: coin_transactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, coin_transactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCoin_transactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the coin_transaction model
   */
  readonly fields: coin_transactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for coin_transaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__coin_transactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the coin_transaction model
   */
  interface coin_transactionFieldRefs {
    readonly id: FieldRef<"coin_transaction", 'String'>
    readonly user_id: FieldRef<"coin_transaction", 'String'>
    readonly amount: FieldRef<"coin_transaction", 'Int'>
    readonly reason: FieldRef<"coin_transaction", 'String'>
    readonly reference_id: FieldRef<"coin_transaction", 'String'>
    readonly reference_table: FieldRef<"coin_transaction", 'String'>
    readonly created_at: FieldRef<"coin_transaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * coin_transaction findUnique
   */
  export type coin_transactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * Filter, which coin_transaction to fetch.
     */
    where: coin_transactionWhereUniqueInput
  }

  /**
   * coin_transaction findUniqueOrThrow
   */
  export type coin_transactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * Filter, which coin_transaction to fetch.
     */
    where: coin_transactionWhereUniqueInput
  }

  /**
   * coin_transaction findFirst
   */
  export type coin_transactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * Filter, which coin_transaction to fetch.
     */
    where?: coin_transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coin_transactions to fetch.
     */
    orderBy?: coin_transactionOrderByWithRelationInput | coin_transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for coin_transactions.
     */
    cursor?: coin_transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coin_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coin_transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of coin_transactions.
     */
    distinct?: Coin_transactionScalarFieldEnum | Coin_transactionScalarFieldEnum[]
  }

  /**
   * coin_transaction findFirstOrThrow
   */
  export type coin_transactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * Filter, which coin_transaction to fetch.
     */
    where?: coin_transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coin_transactions to fetch.
     */
    orderBy?: coin_transactionOrderByWithRelationInput | coin_transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for coin_transactions.
     */
    cursor?: coin_transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coin_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coin_transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of coin_transactions.
     */
    distinct?: Coin_transactionScalarFieldEnum | Coin_transactionScalarFieldEnum[]
  }

  /**
   * coin_transaction findMany
   */
  export type coin_transactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * Filter, which coin_transactions to fetch.
     */
    where?: coin_transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coin_transactions to fetch.
     */
    orderBy?: coin_transactionOrderByWithRelationInput | coin_transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing coin_transactions.
     */
    cursor?: coin_transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coin_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coin_transactions.
     */
    skip?: number
    distinct?: Coin_transactionScalarFieldEnum | Coin_transactionScalarFieldEnum[]
  }

  /**
   * coin_transaction create
   */
  export type coin_transactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * The data needed to create a coin_transaction.
     */
    data: XOR<coin_transactionCreateInput, coin_transactionUncheckedCreateInput>
  }

  /**
   * coin_transaction createMany
   */
  export type coin_transactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many coin_transactions.
     */
    data: coin_transactionCreateManyInput | coin_transactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * coin_transaction createManyAndReturn
   */
  export type coin_transactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * The data used to create many coin_transactions.
     */
    data: coin_transactionCreateManyInput | coin_transactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * coin_transaction update
   */
  export type coin_transactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * The data needed to update a coin_transaction.
     */
    data: XOR<coin_transactionUpdateInput, coin_transactionUncheckedUpdateInput>
    /**
     * Choose, which coin_transaction to update.
     */
    where: coin_transactionWhereUniqueInput
  }

  /**
   * coin_transaction updateMany
   */
  export type coin_transactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update coin_transactions.
     */
    data: XOR<coin_transactionUpdateManyMutationInput, coin_transactionUncheckedUpdateManyInput>
    /**
     * Filter which coin_transactions to update
     */
    where?: coin_transactionWhereInput
    /**
     * Limit how many coin_transactions to update.
     */
    limit?: number
  }

  /**
   * coin_transaction updateManyAndReturn
   */
  export type coin_transactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * The data used to update coin_transactions.
     */
    data: XOR<coin_transactionUpdateManyMutationInput, coin_transactionUncheckedUpdateManyInput>
    /**
     * Filter which coin_transactions to update
     */
    where?: coin_transactionWhereInput
    /**
     * Limit how many coin_transactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * coin_transaction upsert
   */
  export type coin_transactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * The filter to search for the coin_transaction to update in case it exists.
     */
    where: coin_transactionWhereUniqueInput
    /**
     * In case the coin_transaction found by the `where` argument doesn't exist, create a new coin_transaction with this data.
     */
    create: XOR<coin_transactionCreateInput, coin_transactionUncheckedCreateInput>
    /**
     * In case the coin_transaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<coin_transactionUpdateInput, coin_transactionUncheckedUpdateInput>
  }

  /**
   * coin_transaction delete
   */
  export type coin_transactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    /**
     * Filter which coin_transaction to delete.
     */
    where: coin_transactionWhereUniqueInput
  }

  /**
   * coin_transaction deleteMany
   */
  export type coin_transactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which coin_transactions to delete
     */
    where?: coin_transactionWhereInput
    /**
     * Limit how many coin_transactions to delete.
     */
    limit?: number
  }

  /**
   * coin_transaction without action
   */
  export type coin_transactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
  }


  /**
   * Model comments
   */

  export type AggregateComments = {
    _count: CommentsCountAggregateOutputType | null
    _avg: CommentsAvgAggregateOutputType | null
    _sum: CommentsSumAggregateOutputType | null
    _min: CommentsMinAggregateOutputType | null
    _max: CommentsMaxAggregateOutputType | null
  }

  export type CommentsAvgAggregateOutputType = {
    react_count: number | null
  }

  export type CommentsSumAggregateOutputType = {
    react_count: number | null
  }

  export type CommentsMinAggregateOutputType = {
    id: string | null
    post_id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    parent_comment: string | null
    root_comment: string | null
    shared_post_id: string | null
  }

  export type CommentsMaxAggregateOutputType = {
    id: string | null
    post_id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    parent_comment: string | null
    root_comment: string | null
    shared_post_id: string | null
  }

  export type CommentsCountAggregateOutputType = {
    id: number
    post_id: number
    user_id: number
    react_count: number
    content: number
    created_date: number
    parent_comment: number
    root_comment: number
    shared_post_id: number
    _all: number
  }


  export type CommentsAvgAggregateInputType = {
    react_count?: true
  }

  export type CommentsSumAggregateInputType = {
    react_count?: true
  }

  export type CommentsMinAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    parent_comment?: true
    root_comment?: true
    shared_post_id?: true
  }

  export type CommentsMaxAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    parent_comment?: true
    root_comment?: true
    shared_post_id?: true
  }

  export type CommentsCountAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    parent_comment?: true
    root_comment?: true
    shared_post_id?: true
    _all?: true
  }

  export type CommentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comments to aggregate.
     */
    where?: commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned comments
    **/
    _count?: true | CommentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentsMaxAggregateInputType
  }

  export type GetCommentsAggregateType<T extends CommentsAggregateArgs> = {
        [P in keyof T & keyof AggregateComments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComments[P]>
      : GetScalarType<T[P], AggregateComments[P]>
  }




  export type commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentsWhereInput
    orderBy?: commentsOrderByWithAggregationInput | commentsOrderByWithAggregationInput[]
    by: CommentsScalarFieldEnum[] | CommentsScalarFieldEnum
    having?: commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentsCountAggregateInputType | true
    _avg?: CommentsAvgAggregateInputType
    _sum?: CommentsSumAggregateInputType
    _min?: CommentsMinAggregateInputType
    _max?: CommentsMaxAggregateInputType
  }

  export type CommentsGroupByOutputType = {
    id: string
    post_id: string | null
    user_id: string
    react_count: number | null
    content: string | null
    created_date: Date | null
    parent_comment: string | null
    root_comment: string | null
    shared_post_id: string | null
    _count: CommentsCountAggregateOutputType | null
    _avg: CommentsAvgAggregateOutputType | null
    _sum: CommentsSumAggregateOutputType | null
    _min: CommentsMinAggregateOutputType | null
    _max: CommentsMaxAggregateOutputType | null
  }

  type GetCommentsGroupByPayload<T extends commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentsGroupByOutputType[P]>
            : GetScalarType<T[P], CommentsGroupByOutputType[P]>
        }
      >
    >


  export type commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comment?: boolean
    root_comment?: boolean
    shared_post_id?: boolean
    posts?: boolean | comments$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    shared_post?: boolean | comments$shared_postArgs<ExtArgs>
    react_comments?: boolean | comments$react_commentsArgs<ExtArgs>
    _count?: boolean | CommentsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comments"]>

  export type commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comment?: boolean
    root_comment?: boolean
    shared_post_id?: boolean
    posts?: boolean | comments$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    shared_post?: boolean | comments$shared_postArgs<ExtArgs>
  }, ExtArgs["result"]["comments"]>

  export type commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comment?: boolean
    root_comment?: boolean
    shared_post_id?: boolean
    posts?: boolean | comments$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    shared_post?: boolean | comments$shared_postArgs<ExtArgs>
  }, ExtArgs["result"]["comments"]>

  export type commentsSelectScalar = {
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comment?: boolean
    root_comment?: boolean
    shared_post_id?: boolean
  }

  export type commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "user_id" | "react_count" | "content" | "created_date" | "parent_comment" | "root_comment" | "shared_post_id", ExtArgs["result"]["comments"]>
  export type commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | comments$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    shared_post?: boolean | comments$shared_postArgs<ExtArgs>
    react_comments?: boolean | comments$react_commentsArgs<ExtArgs>
    _count?: boolean | CommentsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | comments$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    shared_post?: boolean | comments$shared_postArgs<ExtArgs>
  }
  export type commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | comments$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    shared_post?: boolean | comments$shared_postArgs<ExtArgs>
  }

  export type $commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "comments"
    objects: {
      posts: Prisma.$postsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs>
      shared_post: Prisma.$shared_postPayload<ExtArgs> | null
      react_comments: Prisma.$react_commentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      post_id: string | null
      user_id: string
      react_count: number | null
      content: string | null
      created_date: Date | null
      parent_comment: string | null
      root_comment: string | null
      shared_post_id: string | null
    }, ExtArgs["result"]["comments"]>
    composites: {}
  }

  type commentsGetPayload<S extends boolean | null | undefined | commentsDefaultArgs> = $Result.GetResult<Prisma.$commentsPayload, S>

  type commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentsCountAggregateInputType | true
    }

  export interface commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['comments'], meta: { name: 'comments' } }
    /**
     * Find zero or one Comments that matches the filter.
     * @param {commentsFindUniqueArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends commentsFindUniqueArgs>(args: SelectSubset<T, commentsFindUniqueArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {commentsFindUniqueOrThrowArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentsFindFirstArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends commentsFindFirstArgs>(args?: SelectSubset<T, commentsFindFirstArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentsFindFirstOrThrowArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comments.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentsWithIdOnly = await prisma.comments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends commentsFindManyArgs>(args?: SelectSubset<T, commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comments.
     * @param {commentsCreateArgs} args - Arguments to create a Comments.
     * @example
     * // Create one Comments
     * const Comments = await prisma.comments.create({
     *   data: {
     *     // ... data to create a Comments
     *   }
     * })
     * 
     */
    create<T extends commentsCreateArgs>(args: SelectSubset<T, commentsCreateArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {commentsCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comments = await prisma.comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends commentsCreateManyArgs>(args?: SelectSubset<T, commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments and returns the data saved in the database.
     * @param {commentsCreateManyAndReturnArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comments = await prisma.comments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments and only return the `id`
     * const commentsWithIdOnly = await prisma.comments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comments.
     * @param {commentsDeleteArgs} args - Arguments to delete one Comments.
     * @example
     * // Delete one Comments
     * const Comments = await prisma.comments.delete({
     *   where: {
     *     // ... filter to delete one Comments
     *   }
     * })
     * 
     */
    delete<T extends commentsDeleteArgs>(args: SelectSubset<T, commentsDeleteArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comments.
     * @param {commentsUpdateArgs} args - Arguments to update one Comments.
     * @example
     * // Update one Comments
     * const comments = await prisma.comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends commentsUpdateArgs>(args: SelectSubset<T, commentsUpdateArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {commentsDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends commentsDeleteManyArgs>(args?: SelectSubset<T, commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comments = await prisma.comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends commentsUpdateManyArgs>(args: SelectSubset<T, commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments and returns the data updated in the database.
     * @param {commentsUpdateManyAndReturnArgs} args - Arguments to update many Comments.
     * @example
     * // Update many Comments
     * const comments = await prisma.comments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comments and only return the `id`
     * const commentsWithIdOnly = await prisma.comments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comments.
     * @param {commentsUpsertArgs} args - Arguments to update or create a Comments.
     * @example
     * // Update or create a Comments
     * const comments = await prisma.comments.upsert({
     *   create: {
     *     // ... data to create a Comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comments we want to update
     *   }
     * })
     */
    upsert<T extends commentsUpsertArgs>(args: SelectSubset<T, commentsUpsertArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentsCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comments.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends commentsCountArgs>(
      args?: Subset<T, commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentsAggregateArgs>(args: Subset<T, CommentsAggregateArgs>): Prisma.PrismaPromise<GetCommentsAggregateType<T>>

    /**
     * Group by Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: commentsGroupByArgs['orderBy'] }
        : { orderBy?: commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the comments model
   */
  readonly fields: commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends comments$postsArgs<ExtArgs> = {}>(args?: Subset<T, comments$postsArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    shared_post<T extends comments$shared_postArgs<ExtArgs> = {}>(args?: Subset<T, comments$shared_postArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    react_comments<T extends comments$react_commentsArgs<ExtArgs> = {}>(args?: Subset<T, comments$react_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the comments model
   */
  interface commentsFieldRefs {
    readonly id: FieldRef<"comments", 'String'>
    readonly post_id: FieldRef<"comments", 'String'>
    readonly user_id: FieldRef<"comments", 'String'>
    readonly react_count: FieldRef<"comments", 'Int'>
    readonly content: FieldRef<"comments", 'String'>
    readonly created_date: FieldRef<"comments", 'DateTime'>
    readonly parent_comment: FieldRef<"comments", 'String'>
    readonly root_comment: FieldRef<"comments", 'String'>
    readonly shared_post_id: FieldRef<"comments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * comments findUnique
   */
  export type commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * Filter, which comments to fetch.
     */
    where: commentsWhereUniqueInput
  }

  /**
   * comments findUniqueOrThrow
   */
  export type commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * Filter, which comments to fetch.
     */
    where: commentsWhereUniqueInput
  }

  /**
   * comments findFirst
   */
  export type commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * Filter, which comments to fetch.
     */
    where?: commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comments.
     */
    cursor?: commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comments.
     */
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }

  /**
   * comments findFirstOrThrow
   */
  export type commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * Filter, which comments to fetch.
     */
    where?: commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comments.
     */
    cursor?: commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comments.
     */
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }

  /**
   * comments findMany
   */
  export type commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * Filter, which comments to fetch.
     */
    where?: commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing comments.
     */
    cursor?: commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }

  /**
   * comments create
   */
  export type commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * The data needed to create a comments.
     */
    data: XOR<commentsCreateInput, commentsUncheckedCreateInput>
  }

  /**
   * comments createMany
   */
  export type commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many comments.
     */
    data: commentsCreateManyInput | commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * comments createManyAndReturn
   */
  export type commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * The data used to create many comments.
     */
    data: commentsCreateManyInput | commentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * comments update
   */
  export type commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * The data needed to update a comments.
     */
    data: XOR<commentsUpdateInput, commentsUncheckedUpdateInput>
    /**
     * Choose, which comments to update.
     */
    where: commentsWhereUniqueInput
  }

  /**
   * comments updateMany
   */
  export type commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update comments.
     */
    data: XOR<commentsUpdateManyMutationInput, commentsUncheckedUpdateManyInput>
    /**
     * Filter which comments to update
     */
    where?: commentsWhereInput
    /**
     * Limit how many comments to update.
     */
    limit?: number
  }

  /**
   * comments updateManyAndReturn
   */
  export type commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * The data used to update comments.
     */
    data: XOR<commentsUpdateManyMutationInput, commentsUncheckedUpdateManyInput>
    /**
     * Filter which comments to update
     */
    where?: commentsWhereInput
    /**
     * Limit how many comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * comments upsert
   */
  export type commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * The filter to search for the comments to update in case it exists.
     */
    where: commentsWhereUniqueInput
    /**
     * In case the comments found by the `where` argument doesn't exist, create a new comments with this data.
     */
    create: XOR<commentsCreateInput, commentsUncheckedCreateInput>
    /**
     * In case the comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<commentsUpdateInput, commentsUncheckedUpdateInput>
  }

  /**
   * comments delete
   */
  export type commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    /**
     * Filter which comments to delete.
     */
    where: commentsWhereUniqueInput
  }

  /**
   * comments deleteMany
   */
  export type commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comments to delete
     */
    where?: commentsWhereInput
    /**
     * Limit how many comments to delete.
     */
    limit?: number
  }

  /**
   * comments.posts
   */
  export type comments$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    where?: postsWhereInput
  }

  /**
   * comments.shared_post
   */
  export type comments$shared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    where?: shared_postWhereInput
  }

  /**
   * comments.react_comments
   */
  export type comments$react_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    where?: react_commentsWhereInput
    orderBy?: react_commentsOrderByWithRelationInput | react_commentsOrderByWithRelationInput[]
    cursor?: react_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: React_commentsScalarFieldEnum | React_commentsScalarFieldEnum[]
  }

  /**
   * comments without action
   */
  export type commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
  }


  /**
   * Model comments_group
   */

  export type AggregateComments_group = {
    _count: Comments_groupCountAggregateOutputType | null
    _avg: Comments_groupAvgAggregateOutputType | null
    _sum: Comments_groupSumAggregateOutputType | null
    _min: Comments_groupMinAggregateOutputType | null
    _max: Comments_groupMaxAggregateOutputType | null
  }

  export type Comments_groupAvgAggregateOutputType = {
    react_count: number | null
  }

  export type Comments_groupSumAggregateOutputType = {
    react_count: number | null
  }

  export type Comments_groupMinAggregateOutputType = {
    id: string | null
    group_id: string | null
    post_id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    parent_comments: string | null
  }

  export type Comments_groupMaxAggregateOutputType = {
    id: string | null
    group_id: string | null
    post_id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    parent_comments: string | null
  }

  export type Comments_groupCountAggregateOutputType = {
    id: number
    group_id: number
    post_id: number
    user_id: number
    react_count: number
    content: number
    created_date: number
    parent_comments: number
    _all: number
  }


  export type Comments_groupAvgAggregateInputType = {
    react_count?: true
  }

  export type Comments_groupSumAggregateInputType = {
    react_count?: true
  }

  export type Comments_groupMinAggregateInputType = {
    id?: true
    group_id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    parent_comments?: true
  }

  export type Comments_groupMaxAggregateInputType = {
    id?: true
    group_id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    parent_comments?: true
  }

  export type Comments_groupCountAggregateInputType = {
    id?: true
    group_id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    parent_comments?: true
    _all?: true
  }

  export type Comments_groupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comments_group to aggregate.
     */
    where?: comments_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments_groups to fetch.
     */
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: comments_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned comments_groups
    **/
    _count?: true | Comments_groupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Comments_groupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Comments_groupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Comments_groupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Comments_groupMaxAggregateInputType
  }

  export type GetComments_groupAggregateType<T extends Comments_groupAggregateArgs> = {
        [P in keyof T & keyof AggregateComments_group]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComments_group[P]>
      : GetScalarType<T[P], AggregateComments_group[P]>
  }




  export type comments_groupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comments_groupWhereInput
    orderBy?: comments_groupOrderByWithAggregationInput | comments_groupOrderByWithAggregationInput[]
    by: Comments_groupScalarFieldEnum[] | Comments_groupScalarFieldEnum
    having?: comments_groupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Comments_groupCountAggregateInputType | true
    _avg?: Comments_groupAvgAggregateInputType
    _sum?: Comments_groupSumAggregateInputType
    _min?: Comments_groupMinAggregateInputType
    _max?: Comments_groupMaxAggregateInputType
  }

  export type Comments_groupGroupByOutputType = {
    id: string
    group_id: string
    post_id: string
    user_id: string
    react_count: number | null
    content: string | null
    created_date: Date | null
    parent_comments: string | null
    _count: Comments_groupCountAggregateOutputType | null
    _avg: Comments_groupAvgAggregateOutputType | null
    _sum: Comments_groupSumAggregateOutputType | null
    _min: Comments_groupMinAggregateOutputType | null
    _max: Comments_groupMaxAggregateOutputType | null
  }

  type GetComments_groupGroupByPayload<T extends comments_groupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Comments_groupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Comments_groupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Comments_groupGroupByOutputType[P]>
            : GetScalarType<T[P], Comments_groupGroupByOutputType[P]>
        }
      >
    >


  export type comments_groupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comments?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comments_group"]>

  export type comments_groupSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comments?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comments_group"]>

  export type comments_groupSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comments?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comments_group"]>

  export type comments_groupSelectScalar = {
    id?: boolean
    group_id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    parent_comments?: boolean
  }

  export type comments_groupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "group_id" | "post_id" | "user_id" | "react_count" | "content" | "created_date" | "parent_comments", ExtArgs["result"]["comments_group"]>
  export type comments_groupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type comments_groupIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type comments_groupIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $comments_groupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "comments_group"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs>
      posts: Prisma.$postsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      group_id: string
      post_id: string
      user_id: string
      react_count: number | null
      content: string | null
      created_date: Date | null
      parent_comments: string | null
    }, ExtArgs["result"]["comments_group"]>
    composites: {}
  }

  type comments_groupGetPayload<S extends boolean | null | undefined | comments_groupDefaultArgs> = $Result.GetResult<Prisma.$comments_groupPayload, S>

  type comments_groupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<comments_groupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Comments_groupCountAggregateInputType | true
    }

  export interface comments_groupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['comments_group'], meta: { name: 'comments_group' } }
    /**
     * Find zero or one Comments_group that matches the filter.
     * @param {comments_groupFindUniqueArgs} args - Arguments to find a Comments_group
     * @example
     * // Get one Comments_group
     * const comments_group = await prisma.comments_group.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends comments_groupFindUniqueArgs>(args: SelectSubset<T, comments_groupFindUniqueArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comments_group that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {comments_groupFindUniqueOrThrowArgs} args - Arguments to find a Comments_group
     * @example
     * // Get one Comments_group
     * const comments_group = await prisma.comments_group.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends comments_groupFindUniqueOrThrowArgs>(args: SelectSubset<T, comments_groupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comments_group that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comments_groupFindFirstArgs} args - Arguments to find a Comments_group
     * @example
     * // Get one Comments_group
     * const comments_group = await prisma.comments_group.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends comments_groupFindFirstArgs>(args?: SelectSubset<T, comments_groupFindFirstArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comments_group that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comments_groupFindFirstOrThrowArgs} args - Arguments to find a Comments_group
     * @example
     * // Get one Comments_group
     * const comments_group = await prisma.comments_group.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends comments_groupFindFirstOrThrowArgs>(args?: SelectSubset<T, comments_groupFindFirstOrThrowArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comments_groupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments_groups
     * const comments_groups = await prisma.comments_group.findMany()
     * 
     * // Get first 10 Comments_groups
     * const comments_groups = await prisma.comments_group.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comments_groupWithIdOnly = await prisma.comments_group.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends comments_groupFindManyArgs>(args?: SelectSubset<T, comments_groupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comments_group.
     * @param {comments_groupCreateArgs} args - Arguments to create a Comments_group.
     * @example
     * // Create one Comments_group
     * const Comments_group = await prisma.comments_group.create({
     *   data: {
     *     // ... data to create a Comments_group
     *   }
     * })
     * 
     */
    create<T extends comments_groupCreateArgs>(args: SelectSubset<T, comments_groupCreateArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments_groups.
     * @param {comments_groupCreateManyArgs} args - Arguments to create many Comments_groups.
     * @example
     * // Create many Comments_groups
     * const comments_group = await prisma.comments_group.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends comments_groupCreateManyArgs>(args?: SelectSubset<T, comments_groupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments_groups and returns the data saved in the database.
     * @param {comments_groupCreateManyAndReturnArgs} args - Arguments to create many Comments_groups.
     * @example
     * // Create many Comments_groups
     * const comments_group = await prisma.comments_group.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments_groups and only return the `id`
     * const comments_groupWithIdOnly = await prisma.comments_group.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends comments_groupCreateManyAndReturnArgs>(args?: SelectSubset<T, comments_groupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comments_group.
     * @param {comments_groupDeleteArgs} args - Arguments to delete one Comments_group.
     * @example
     * // Delete one Comments_group
     * const Comments_group = await prisma.comments_group.delete({
     *   where: {
     *     // ... filter to delete one Comments_group
     *   }
     * })
     * 
     */
    delete<T extends comments_groupDeleteArgs>(args: SelectSubset<T, comments_groupDeleteArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comments_group.
     * @param {comments_groupUpdateArgs} args - Arguments to update one Comments_group.
     * @example
     * // Update one Comments_group
     * const comments_group = await prisma.comments_group.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends comments_groupUpdateArgs>(args: SelectSubset<T, comments_groupUpdateArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments_groups.
     * @param {comments_groupDeleteManyArgs} args - Arguments to filter Comments_groups to delete.
     * @example
     * // Delete a few Comments_groups
     * const { count } = await prisma.comments_group.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends comments_groupDeleteManyArgs>(args?: SelectSubset<T, comments_groupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comments_groupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments_groups
     * const comments_group = await prisma.comments_group.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends comments_groupUpdateManyArgs>(args: SelectSubset<T, comments_groupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments_groups and returns the data updated in the database.
     * @param {comments_groupUpdateManyAndReturnArgs} args - Arguments to update many Comments_groups.
     * @example
     * // Update many Comments_groups
     * const comments_group = await prisma.comments_group.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comments_groups and only return the `id`
     * const comments_groupWithIdOnly = await prisma.comments_group.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends comments_groupUpdateManyAndReturnArgs>(args: SelectSubset<T, comments_groupUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comments_group.
     * @param {comments_groupUpsertArgs} args - Arguments to update or create a Comments_group.
     * @example
     * // Update or create a Comments_group
     * const comments_group = await prisma.comments_group.upsert({
     *   create: {
     *     // ... data to create a Comments_group
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comments_group we want to update
     *   }
     * })
     */
    upsert<T extends comments_groupUpsertArgs>(args: SelectSubset<T, comments_groupUpsertArgs<ExtArgs>>): Prisma__comments_groupClient<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comments_groupCountArgs} args - Arguments to filter Comments_groups to count.
     * @example
     * // Count the number of Comments_groups
     * const count = await prisma.comments_group.count({
     *   where: {
     *     // ... the filter for the Comments_groups we want to count
     *   }
     * })
    **/
    count<T extends comments_groupCountArgs>(
      args?: Subset<T, comments_groupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Comments_groupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comments_group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Comments_groupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Comments_groupAggregateArgs>(args: Subset<T, Comments_groupAggregateArgs>): Prisma.PrismaPromise<GetComments_groupAggregateType<T>>

    /**
     * Group by Comments_group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comments_groupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends comments_groupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: comments_groupGroupByArgs['orderBy'] }
        : { orderBy?: comments_groupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, comments_groupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComments_groupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the comments_group model
   */
  readonly fields: comments_groupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for comments_group.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__comments_groupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groups<T extends groupsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, groupsDefaultArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    posts<T extends postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postsDefaultArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the comments_group model
   */
  interface comments_groupFieldRefs {
    readonly id: FieldRef<"comments_group", 'String'>
    readonly group_id: FieldRef<"comments_group", 'String'>
    readonly post_id: FieldRef<"comments_group", 'String'>
    readonly user_id: FieldRef<"comments_group", 'String'>
    readonly react_count: FieldRef<"comments_group", 'Int'>
    readonly content: FieldRef<"comments_group", 'String'>
    readonly created_date: FieldRef<"comments_group", 'DateTime'>
    readonly parent_comments: FieldRef<"comments_group", 'String'>
  }
    

  // Custom InputTypes
  /**
   * comments_group findUnique
   */
  export type comments_groupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * Filter, which comments_group to fetch.
     */
    where: comments_groupWhereUniqueInput
  }

  /**
   * comments_group findUniqueOrThrow
   */
  export type comments_groupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * Filter, which comments_group to fetch.
     */
    where: comments_groupWhereUniqueInput
  }

  /**
   * comments_group findFirst
   */
  export type comments_groupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * Filter, which comments_group to fetch.
     */
    where?: comments_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments_groups to fetch.
     */
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comments_groups.
     */
    cursor?: comments_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comments_groups.
     */
    distinct?: Comments_groupScalarFieldEnum | Comments_groupScalarFieldEnum[]
  }

  /**
   * comments_group findFirstOrThrow
   */
  export type comments_groupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * Filter, which comments_group to fetch.
     */
    where?: comments_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments_groups to fetch.
     */
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comments_groups.
     */
    cursor?: comments_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comments_groups.
     */
    distinct?: Comments_groupScalarFieldEnum | Comments_groupScalarFieldEnum[]
  }

  /**
   * comments_group findMany
   */
  export type comments_groupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * Filter, which comments_groups to fetch.
     */
    where?: comments_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments_groups to fetch.
     */
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing comments_groups.
     */
    cursor?: comments_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments_groups.
     */
    skip?: number
    distinct?: Comments_groupScalarFieldEnum | Comments_groupScalarFieldEnum[]
  }

  /**
   * comments_group create
   */
  export type comments_groupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * The data needed to create a comments_group.
     */
    data: XOR<comments_groupCreateInput, comments_groupUncheckedCreateInput>
  }

  /**
   * comments_group createMany
   */
  export type comments_groupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many comments_groups.
     */
    data: comments_groupCreateManyInput | comments_groupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * comments_group createManyAndReturn
   */
  export type comments_groupCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * The data used to create many comments_groups.
     */
    data: comments_groupCreateManyInput | comments_groupCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * comments_group update
   */
  export type comments_groupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * The data needed to update a comments_group.
     */
    data: XOR<comments_groupUpdateInput, comments_groupUncheckedUpdateInput>
    /**
     * Choose, which comments_group to update.
     */
    where: comments_groupWhereUniqueInput
  }

  /**
   * comments_group updateMany
   */
  export type comments_groupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update comments_groups.
     */
    data: XOR<comments_groupUpdateManyMutationInput, comments_groupUncheckedUpdateManyInput>
    /**
     * Filter which comments_groups to update
     */
    where?: comments_groupWhereInput
    /**
     * Limit how many comments_groups to update.
     */
    limit?: number
  }

  /**
   * comments_group updateManyAndReturn
   */
  export type comments_groupUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * The data used to update comments_groups.
     */
    data: XOR<comments_groupUpdateManyMutationInput, comments_groupUncheckedUpdateManyInput>
    /**
     * Filter which comments_groups to update
     */
    where?: comments_groupWhereInput
    /**
     * Limit how many comments_groups to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * comments_group upsert
   */
  export type comments_groupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * The filter to search for the comments_group to update in case it exists.
     */
    where: comments_groupWhereUniqueInput
    /**
     * In case the comments_group found by the `where` argument doesn't exist, create a new comments_group with this data.
     */
    create: XOR<comments_groupCreateInput, comments_groupUncheckedCreateInput>
    /**
     * In case the comments_group was found with the provided `where` argument, update it with this data.
     */
    update: XOR<comments_groupUpdateInput, comments_groupUncheckedUpdateInput>
  }

  /**
   * comments_group delete
   */
  export type comments_groupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    /**
     * Filter which comments_group to delete.
     */
    where: comments_groupWhereUniqueInput
  }

  /**
   * comments_group deleteMany
   */
  export type comments_groupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comments_groups to delete
     */
    where?: comments_groupWhereInput
    /**
     * Limit how many comments_groups to delete.
     */
    limit?: number
  }

  /**
   * comments_group without action
   */
  export type comments_groupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
  }


  /**
   * Model courses
   */

  export type AggregateCourses = {
    _count: CoursesCountAggregateOutputType | null
    _avg: CoursesAvgAggregateOutputType | null
    _sum: CoursesSumAggregateOutputType | null
    _min: CoursesMinAggregateOutputType | null
    _max: CoursesMaxAggregateOutputType | null
  }

  export type CoursesAvgAggregateOutputType = {
    price: number | null
  }

  export type CoursesSumAggregateOutputType = {
    price: number | null
  }

  export type CoursesMinAggregateOutputType = {
    id: string | null
    title: string | null
    topic_id: string | null
    level: string | null
    description: string | null
    image_url: string | null
    price: number | null
    created_date: Date | null
  }

  export type CoursesMaxAggregateOutputType = {
    id: string | null
    title: string | null
    topic_id: string | null
    level: string | null
    description: string | null
    image_url: string | null
    price: number | null
    created_date: Date | null
  }

  export type CoursesCountAggregateOutputType = {
    id: number
    title: number
    topic_id: number
    level: number
    description: number
    image_url: number
    price: number
    created_date: number
    _all: number
  }


  export type CoursesAvgAggregateInputType = {
    price?: true
  }

  export type CoursesSumAggregateInputType = {
    price?: true
  }

  export type CoursesMinAggregateInputType = {
    id?: true
    title?: true
    topic_id?: true
    level?: true
    description?: true
    image_url?: true
    price?: true
    created_date?: true
  }

  export type CoursesMaxAggregateInputType = {
    id?: true
    title?: true
    topic_id?: true
    level?: true
    description?: true
    image_url?: true
    price?: true
    created_date?: true
  }

  export type CoursesCountAggregateInputType = {
    id?: true
    title?: true
    topic_id?: true
    level?: true
    description?: true
    image_url?: true
    price?: true
    created_date?: true
    _all?: true
  }

  export type CoursesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courses to aggregate.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned courses
    **/
    _count?: true | CoursesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CoursesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CoursesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CoursesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CoursesMaxAggregateInputType
  }

  export type GetCoursesAggregateType<T extends CoursesAggregateArgs> = {
        [P in keyof T & keyof AggregateCourses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourses[P]>
      : GetScalarType<T[P], AggregateCourses[P]>
  }




  export type coursesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coursesWhereInput
    orderBy?: coursesOrderByWithAggregationInput | coursesOrderByWithAggregationInput[]
    by: CoursesScalarFieldEnum[] | CoursesScalarFieldEnum
    having?: coursesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CoursesCountAggregateInputType | true
    _avg?: CoursesAvgAggregateInputType
    _sum?: CoursesSumAggregateInputType
    _min?: CoursesMinAggregateInputType
    _max?: CoursesMaxAggregateInputType
  }

  export type CoursesGroupByOutputType = {
    id: string
    title: string
    topic_id: string | null
    level: string | null
    description: string | null
    image_url: string | null
    price: number
    created_date: Date
    _count: CoursesCountAggregateOutputType | null
    _avg: CoursesAvgAggregateOutputType | null
    _sum: CoursesSumAggregateOutputType | null
    _min: CoursesMinAggregateOutputType | null
    _max: CoursesMaxAggregateOutputType | null
  }

  type GetCoursesGroupByPayload<T extends coursesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CoursesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CoursesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CoursesGroupByOutputType[P]>
            : GetScalarType<T[P], CoursesGroupByOutputType[P]>
        }
      >
    >


  export type coursesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    topic_id?: boolean
    level?: boolean
    description?: boolean
    image_url?: boolean
    price?: boolean
    created_date?: boolean
    topics?: boolean | courses$topicsArgs<ExtArgs>
    user_courses?: boolean | courses$user_coursesArgs<ExtArgs>
    words?: boolean | courses$wordsArgs<ExtArgs>
    _count?: boolean | CoursesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["courses"]>

  export type coursesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    topic_id?: boolean
    level?: boolean
    description?: boolean
    image_url?: boolean
    price?: boolean
    created_date?: boolean
    topics?: boolean | courses$topicsArgs<ExtArgs>
  }, ExtArgs["result"]["courses"]>

  export type coursesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    topic_id?: boolean
    level?: boolean
    description?: boolean
    image_url?: boolean
    price?: boolean
    created_date?: boolean
    topics?: boolean | courses$topicsArgs<ExtArgs>
  }, ExtArgs["result"]["courses"]>

  export type coursesSelectScalar = {
    id?: boolean
    title?: boolean
    topic_id?: boolean
    level?: boolean
    description?: boolean
    image_url?: boolean
    price?: boolean
    created_date?: boolean
  }

  export type coursesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "topic_id" | "level" | "description" | "image_url" | "price" | "created_date", ExtArgs["result"]["courses"]>
  export type coursesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    topics?: boolean | courses$topicsArgs<ExtArgs>
    user_courses?: boolean | courses$user_coursesArgs<ExtArgs>
    words?: boolean | courses$wordsArgs<ExtArgs>
    _count?: boolean | CoursesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type coursesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    topics?: boolean | courses$topicsArgs<ExtArgs>
  }
  export type coursesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    topics?: boolean | courses$topicsArgs<ExtArgs>
  }

  export type $coursesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "courses"
    objects: {
      topics: Prisma.$topicsPayload<ExtArgs> | null
      user_courses: Prisma.$user_coursesPayload<ExtArgs>[]
      words: Prisma.$wordsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      topic_id: string | null
      level: string | null
      description: string | null
      image_url: string | null
      price: number
      created_date: Date
    }, ExtArgs["result"]["courses"]>
    composites: {}
  }

  type coursesGetPayload<S extends boolean | null | undefined | coursesDefaultArgs> = $Result.GetResult<Prisma.$coursesPayload, S>

  type coursesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<coursesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CoursesCountAggregateInputType | true
    }

  export interface coursesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['courses'], meta: { name: 'courses' } }
    /**
     * Find zero or one Courses that matches the filter.
     * @param {coursesFindUniqueArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends coursesFindUniqueArgs>(args: SelectSubset<T, coursesFindUniqueArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Courses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {coursesFindUniqueOrThrowArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends coursesFindUniqueOrThrowArgs>(args: SelectSubset<T, coursesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesFindFirstArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends coursesFindFirstArgs>(args?: SelectSubset<T, coursesFindFirstArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Courses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesFindFirstOrThrowArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends coursesFindFirstOrThrowArgs>(args?: SelectSubset<T, coursesFindFirstOrThrowArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Courses
     * const courses = await prisma.courses.findMany()
     * 
     * // Get first 10 Courses
     * const courses = await prisma.courses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const coursesWithIdOnly = await prisma.courses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends coursesFindManyArgs>(args?: SelectSubset<T, coursesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Courses.
     * @param {coursesCreateArgs} args - Arguments to create a Courses.
     * @example
     * // Create one Courses
     * const Courses = await prisma.courses.create({
     *   data: {
     *     // ... data to create a Courses
     *   }
     * })
     * 
     */
    create<T extends coursesCreateArgs>(args: SelectSubset<T, coursesCreateArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Courses.
     * @param {coursesCreateManyArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const courses = await prisma.courses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends coursesCreateManyArgs>(args?: SelectSubset<T, coursesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Courses and returns the data saved in the database.
     * @param {coursesCreateManyAndReturnArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const courses = await prisma.courses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Courses and only return the `id`
     * const coursesWithIdOnly = await prisma.courses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends coursesCreateManyAndReturnArgs>(args?: SelectSubset<T, coursesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Courses.
     * @param {coursesDeleteArgs} args - Arguments to delete one Courses.
     * @example
     * // Delete one Courses
     * const Courses = await prisma.courses.delete({
     *   where: {
     *     // ... filter to delete one Courses
     *   }
     * })
     * 
     */
    delete<T extends coursesDeleteArgs>(args: SelectSubset<T, coursesDeleteArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Courses.
     * @param {coursesUpdateArgs} args - Arguments to update one Courses.
     * @example
     * // Update one Courses
     * const courses = await prisma.courses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends coursesUpdateArgs>(args: SelectSubset<T, coursesUpdateArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Courses.
     * @param {coursesDeleteManyArgs} args - Arguments to filter Courses to delete.
     * @example
     * // Delete a few Courses
     * const { count } = await prisma.courses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends coursesDeleteManyArgs>(args?: SelectSubset<T, coursesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Courses
     * const courses = await prisma.courses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends coursesUpdateManyArgs>(args: SelectSubset<T, coursesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses and returns the data updated in the database.
     * @param {coursesUpdateManyAndReturnArgs} args - Arguments to update many Courses.
     * @example
     * // Update many Courses
     * const courses = await prisma.courses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Courses and only return the `id`
     * const coursesWithIdOnly = await prisma.courses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends coursesUpdateManyAndReturnArgs>(args: SelectSubset<T, coursesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Courses.
     * @param {coursesUpsertArgs} args - Arguments to update or create a Courses.
     * @example
     * // Update or create a Courses
     * const courses = await prisma.courses.upsert({
     *   create: {
     *     // ... data to create a Courses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Courses we want to update
     *   }
     * })
     */
    upsert<T extends coursesUpsertArgs>(args: SelectSubset<T, coursesUpsertArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesCountArgs} args - Arguments to filter Courses to count.
     * @example
     * // Count the number of Courses
     * const count = await prisma.courses.count({
     *   where: {
     *     // ... the filter for the Courses we want to count
     *   }
     * })
    **/
    count<T extends coursesCountArgs>(
      args?: Subset<T, coursesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CoursesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoursesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CoursesAggregateArgs>(args: Subset<T, CoursesAggregateArgs>): Prisma.PrismaPromise<GetCoursesAggregateType<T>>

    /**
     * Group by Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends coursesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: coursesGroupByArgs['orderBy'] }
        : { orderBy?: coursesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, coursesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCoursesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the courses model
   */
  readonly fields: coursesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for courses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__coursesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    topics<T extends courses$topicsArgs<ExtArgs> = {}>(args?: Subset<T, courses$topicsArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_courses<T extends courses$user_coursesArgs<ExtArgs> = {}>(args?: Subset<T, courses$user_coursesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    words<T extends courses$wordsArgs<ExtArgs> = {}>(args?: Subset<T, courses$wordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the courses model
   */
  interface coursesFieldRefs {
    readonly id: FieldRef<"courses", 'String'>
    readonly title: FieldRef<"courses", 'String'>
    readonly topic_id: FieldRef<"courses", 'String'>
    readonly level: FieldRef<"courses", 'String'>
    readonly description: FieldRef<"courses", 'String'>
    readonly image_url: FieldRef<"courses", 'String'>
    readonly price: FieldRef<"courses", 'Int'>
    readonly created_date: FieldRef<"courses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * courses findUnique
   */
  export type coursesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses findUniqueOrThrow
   */
  export type coursesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses findFirst
   */
  export type coursesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courses.
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courses.
     */
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * courses findFirstOrThrow
   */
  export type coursesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courses.
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courses.
     */
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * courses findMany
   */
  export type coursesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing courses.
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * courses create
   */
  export type coursesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * The data needed to create a courses.
     */
    data: XOR<coursesCreateInput, coursesUncheckedCreateInput>
  }

  /**
   * courses createMany
   */
  export type coursesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many courses.
     */
    data: coursesCreateManyInput | coursesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * courses createManyAndReturn
   */
  export type coursesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * The data used to create many courses.
     */
    data: coursesCreateManyInput | coursesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * courses update
   */
  export type coursesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * The data needed to update a courses.
     */
    data: XOR<coursesUpdateInput, coursesUncheckedUpdateInput>
    /**
     * Choose, which courses to update.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses updateMany
   */
  export type coursesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update courses.
     */
    data: XOR<coursesUpdateManyMutationInput, coursesUncheckedUpdateManyInput>
    /**
     * Filter which courses to update
     */
    where?: coursesWhereInput
    /**
     * Limit how many courses to update.
     */
    limit?: number
  }

  /**
   * courses updateManyAndReturn
   */
  export type coursesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * The data used to update courses.
     */
    data: XOR<coursesUpdateManyMutationInput, coursesUncheckedUpdateManyInput>
    /**
     * Filter which courses to update
     */
    where?: coursesWhereInput
    /**
     * Limit how many courses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * courses upsert
   */
  export type coursesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * The filter to search for the courses to update in case it exists.
     */
    where: coursesWhereUniqueInput
    /**
     * In case the courses found by the `where` argument doesn't exist, create a new courses with this data.
     */
    create: XOR<coursesCreateInput, coursesUncheckedCreateInput>
    /**
     * In case the courses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<coursesUpdateInput, coursesUncheckedUpdateInput>
  }

  /**
   * courses delete
   */
  export type coursesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter which courses to delete.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses deleteMany
   */
  export type coursesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courses to delete
     */
    where?: coursesWhereInput
    /**
     * Limit how many courses to delete.
     */
    limit?: number
  }

  /**
   * courses.topics
   */
  export type courses$topicsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    where?: topicsWhereInput
  }

  /**
   * courses.user_courses
   */
  export type courses$user_coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    where?: user_coursesWhereInput
    orderBy?: user_coursesOrderByWithRelationInput | user_coursesOrderByWithRelationInput[]
    cursor?: user_coursesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_coursesScalarFieldEnum | User_coursesScalarFieldEnum[]
  }

  /**
   * courses.words
   */
  export type courses$wordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    where?: wordsWhereInput
    orderBy?: wordsOrderByWithRelationInput | wordsOrderByWithRelationInput[]
    cursor?: wordsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WordsScalarFieldEnum | WordsScalarFieldEnum[]
  }

  /**
   * courses without action
   */
  export type coursesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
  }


  /**
   * Model error_report_feedbacks
   */

  export type AggregateError_report_feedbacks = {
    _count: Error_report_feedbacksCountAggregateOutputType | null
    _min: Error_report_feedbacksMinAggregateOutputType | null
    _max: Error_report_feedbacksMaxAggregateOutputType | null
  }

  export type Error_report_feedbacksMinAggregateOutputType = {
    id: string | null
    report_id: string | null
    admin_id: string | null
    feedback: string | null
    responded_at: Date | null
  }

  export type Error_report_feedbacksMaxAggregateOutputType = {
    id: string | null
    report_id: string | null
    admin_id: string | null
    feedback: string | null
    responded_at: Date | null
  }

  export type Error_report_feedbacksCountAggregateOutputType = {
    id: number
    report_id: number
    admin_id: number
    feedback: number
    responded_at: number
    _all: number
  }


  export type Error_report_feedbacksMinAggregateInputType = {
    id?: true
    report_id?: true
    admin_id?: true
    feedback?: true
    responded_at?: true
  }

  export type Error_report_feedbacksMaxAggregateInputType = {
    id?: true
    report_id?: true
    admin_id?: true
    feedback?: true
    responded_at?: true
  }

  export type Error_report_feedbacksCountAggregateInputType = {
    id?: true
    report_id?: true
    admin_id?: true
    feedback?: true
    responded_at?: true
    _all?: true
  }

  export type Error_report_feedbacksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which error_report_feedbacks to aggregate.
     */
    where?: error_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of error_report_feedbacks to fetch.
     */
    orderBy?: error_report_feedbacksOrderByWithRelationInput | error_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: error_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` error_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` error_report_feedbacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned error_report_feedbacks
    **/
    _count?: true | Error_report_feedbacksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Error_report_feedbacksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Error_report_feedbacksMaxAggregateInputType
  }

  export type GetError_report_feedbacksAggregateType<T extends Error_report_feedbacksAggregateArgs> = {
        [P in keyof T & keyof AggregateError_report_feedbacks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateError_report_feedbacks[P]>
      : GetScalarType<T[P], AggregateError_report_feedbacks[P]>
  }




  export type error_report_feedbacksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: error_report_feedbacksWhereInput
    orderBy?: error_report_feedbacksOrderByWithAggregationInput | error_report_feedbacksOrderByWithAggregationInput[]
    by: Error_report_feedbacksScalarFieldEnum[] | Error_report_feedbacksScalarFieldEnum
    having?: error_report_feedbacksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Error_report_feedbacksCountAggregateInputType | true
    _min?: Error_report_feedbacksMinAggregateInputType
    _max?: Error_report_feedbacksMaxAggregateInputType
  }

  export type Error_report_feedbacksGroupByOutputType = {
    id: string
    report_id: string
    admin_id: string | null
    feedback: string | null
    responded_at: Date | null
    _count: Error_report_feedbacksCountAggregateOutputType | null
    _min: Error_report_feedbacksMinAggregateOutputType | null
    _max: Error_report_feedbacksMaxAggregateOutputType | null
  }

  type GetError_report_feedbacksGroupByPayload<T extends error_report_feedbacksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Error_report_feedbacksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Error_report_feedbacksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Error_report_feedbacksGroupByOutputType[P]>
            : GetScalarType<T[P], Error_report_feedbacksGroupByOutputType[P]>
        }
      >
    >


  export type error_report_feedbacksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
    users?: boolean | error_report_feedbacks$usersArgs<ExtArgs>
    user_error_reports?: boolean | user_error_reportsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["error_report_feedbacks"]>

  export type error_report_feedbacksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
    users?: boolean | error_report_feedbacks$usersArgs<ExtArgs>
    user_error_reports?: boolean | user_error_reportsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["error_report_feedbacks"]>

  export type error_report_feedbacksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
    users?: boolean | error_report_feedbacks$usersArgs<ExtArgs>
    user_error_reports?: boolean | user_error_reportsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["error_report_feedbacks"]>

  export type error_report_feedbacksSelectScalar = {
    id?: boolean
    report_id?: boolean
    admin_id?: boolean
    feedback?: boolean
    responded_at?: boolean
  }

  export type error_report_feedbacksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "report_id" | "admin_id" | "feedback" | "responded_at", ExtArgs["result"]["error_report_feedbacks"]>
  export type error_report_feedbacksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | error_report_feedbacks$usersArgs<ExtArgs>
    user_error_reports?: boolean | user_error_reportsDefaultArgs<ExtArgs>
  }
  export type error_report_feedbacksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | error_report_feedbacks$usersArgs<ExtArgs>
    user_error_reports?: boolean | user_error_reportsDefaultArgs<ExtArgs>
  }
  export type error_report_feedbacksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | error_report_feedbacks$usersArgs<ExtArgs>
    user_error_reports?: boolean | user_error_reportsDefaultArgs<ExtArgs>
  }

  export type $error_report_feedbacksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "error_report_feedbacks"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      user_error_reports: Prisma.$user_error_reportsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      report_id: string
      admin_id: string | null
      feedback: string | null
      responded_at: Date | null
    }, ExtArgs["result"]["error_report_feedbacks"]>
    composites: {}
  }

  type error_report_feedbacksGetPayload<S extends boolean | null | undefined | error_report_feedbacksDefaultArgs> = $Result.GetResult<Prisma.$error_report_feedbacksPayload, S>

  type error_report_feedbacksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<error_report_feedbacksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Error_report_feedbacksCountAggregateInputType | true
    }

  export interface error_report_feedbacksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['error_report_feedbacks'], meta: { name: 'error_report_feedbacks' } }
    /**
     * Find zero or one Error_report_feedbacks that matches the filter.
     * @param {error_report_feedbacksFindUniqueArgs} args - Arguments to find a Error_report_feedbacks
     * @example
     * // Get one Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends error_report_feedbacksFindUniqueArgs>(args: SelectSubset<T, error_report_feedbacksFindUniqueArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Error_report_feedbacks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {error_report_feedbacksFindUniqueOrThrowArgs} args - Arguments to find a Error_report_feedbacks
     * @example
     * // Get one Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends error_report_feedbacksFindUniqueOrThrowArgs>(args: SelectSubset<T, error_report_feedbacksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Error_report_feedbacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {error_report_feedbacksFindFirstArgs} args - Arguments to find a Error_report_feedbacks
     * @example
     * // Get one Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends error_report_feedbacksFindFirstArgs>(args?: SelectSubset<T, error_report_feedbacksFindFirstArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Error_report_feedbacks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {error_report_feedbacksFindFirstOrThrowArgs} args - Arguments to find a Error_report_feedbacks
     * @example
     * // Get one Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends error_report_feedbacksFindFirstOrThrowArgs>(args?: SelectSubset<T, error_report_feedbacksFindFirstOrThrowArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Error_report_feedbacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {error_report_feedbacksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.findMany()
     * 
     * // Get first 10 Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const error_report_feedbacksWithIdOnly = await prisma.error_report_feedbacks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends error_report_feedbacksFindManyArgs>(args?: SelectSubset<T, error_report_feedbacksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Error_report_feedbacks.
     * @param {error_report_feedbacksCreateArgs} args - Arguments to create a Error_report_feedbacks.
     * @example
     * // Create one Error_report_feedbacks
     * const Error_report_feedbacks = await prisma.error_report_feedbacks.create({
     *   data: {
     *     // ... data to create a Error_report_feedbacks
     *   }
     * })
     * 
     */
    create<T extends error_report_feedbacksCreateArgs>(args: SelectSubset<T, error_report_feedbacksCreateArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Error_report_feedbacks.
     * @param {error_report_feedbacksCreateManyArgs} args - Arguments to create many Error_report_feedbacks.
     * @example
     * // Create many Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends error_report_feedbacksCreateManyArgs>(args?: SelectSubset<T, error_report_feedbacksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Error_report_feedbacks and returns the data saved in the database.
     * @param {error_report_feedbacksCreateManyAndReturnArgs} args - Arguments to create many Error_report_feedbacks.
     * @example
     * // Create many Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Error_report_feedbacks and only return the `id`
     * const error_report_feedbacksWithIdOnly = await prisma.error_report_feedbacks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends error_report_feedbacksCreateManyAndReturnArgs>(args?: SelectSubset<T, error_report_feedbacksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Error_report_feedbacks.
     * @param {error_report_feedbacksDeleteArgs} args - Arguments to delete one Error_report_feedbacks.
     * @example
     * // Delete one Error_report_feedbacks
     * const Error_report_feedbacks = await prisma.error_report_feedbacks.delete({
     *   where: {
     *     // ... filter to delete one Error_report_feedbacks
     *   }
     * })
     * 
     */
    delete<T extends error_report_feedbacksDeleteArgs>(args: SelectSubset<T, error_report_feedbacksDeleteArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Error_report_feedbacks.
     * @param {error_report_feedbacksUpdateArgs} args - Arguments to update one Error_report_feedbacks.
     * @example
     * // Update one Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends error_report_feedbacksUpdateArgs>(args: SelectSubset<T, error_report_feedbacksUpdateArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Error_report_feedbacks.
     * @param {error_report_feedbacksDeleteManyArgs} args - Arguments to filter Error_report_feedbacks to delete.
     * @example
     * // Delete a few Error_report_feedbacks
     * const { count } = await prisma.error_report_feedbacks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends error_report_feedbacksDeleteManyArgs>(args?: SelectSubset<T, error_report_feedbacksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Error_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {error_report_feedbacksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends error_report_feedbacksUpdateManyArgs>(args: SelectSubset<T, error_report_feedbacksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Error_report_feedbacks and returns the data updated in the database.
     * @param {error_report_feedbacksUpdateManyAndReturnArgs} args - Arguments to update many Error_report_feedbacks.
     * @example
     * // Update many Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Error_report_feedbacks and only return the `id`
     * const error_report_feedbacksWithIdOnly = await prisma.error_report_feedbacks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends error_report_feedbacksUpdateManyAndReturnArgs>(args: SelectSubset<T, error_report_feedbacksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Error_report_feedbacks.
     * @param {error_report_feedbacksUpsertArgs} args - Arguments to update or create a Error_report_feedbacks.
     * @example
     * // Update or create a Error_report_feedbacks
     * const error_report_feedbacks = await prisma.error_report_feedbacks.upsert({
     *   create: {
     *     // ... data to create a Error_report_feedbacks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Error_report_feedbacks we want to update
     *   }
     * })
     */
    upsert<T extends error_report_feedbacksUpsertArgs>(args: SelectSubset<T, error_report_feedbacksUpsertArgs<ExtArgs>>): Prisma__error_report_feedbacksClient<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Error_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {error_report_feedbacksCountArgs} args - Arguments to filter Error_report_feedbacks to count.
     * @example
     * // Count the number of Error_report_feedbacks
     * const count = await prisma.error_report_feedbacks.count({
     *   where: {
     *     // ... the filter for the Error_report_feedbacks we want to count
     *   }
     * })
    **/
    count<T extends error_report_feedbacksCountArgs>(
      args?: Subset<T, error_report_feedbacksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Error_report_feedbacksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Error_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Error_report_feedbacksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Error_report_feedbacksAggregateArgs>(args: Subset<T, Error_report_feedbacksAggregateArgs>): Prisma.PrismaPromise<GetError_report_feedbacksAggregateType<T>>

    /**
     * Group by Error_report_feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {error_report_feedbacksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends error_report_feedbacksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: error_report_feedbacksGroupByArgs['orderBy'] }
        : { orderBy?: error_report_feedbacksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, error_report_feedbacksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetError_report_feedbacksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the error_report_feedbacks model
   */
  readonly fields: error_report_feedbacksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for error_report_feedbacks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__error_report_feedbacksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends error_report_feedbacks$usersArgs<ExtArgs> = {}>(args?: Subset<T, error_report_feedbacks$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_error_reports<T extends user_error_reportsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, user_error_reportsDefaultArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the error_report_feedbacks model
   */
  interface error_report_feedbacksFieldRefs {
    readonly id: FieldRef<"error_report_feedbacks", 'String'>
    readonly report_id: FieldRef<"error_report_feedbacks", 'String'>
    readonly admin_id: FieldRef<"error_report_feedbacks", 'String'>
    readonly feedback: FieldRef<"error_report_feedbacks", 'String'>
    readonly responded_at: FieldRef<"error_report_feedbacks", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * error_report_feedbacks findUnique
   */
  export type error_report_feedbacksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which error_report_feedbacks to fetch.
     */
    where: error_report_feedbacksWhereUniqueInput
  }

  /**
   * error_report_feedbacks findUniqueOrThrow
   */
  export type error_report_feedbacksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which error_report_feedbacks to fetch.
     */
    where: error_report_feedbacksWhereUniqueInput
  }

  /**
   * error_report_feedbacks findFirst
   */
  export type error_report_feedbacksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which error_report_feedbacks to fetch.
     */
    where?: error_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of error_report_feedbacks to fetch.
     */
    orderBy?: error_report_feedbacksOrderByWithRelationInput | error_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for error_report_feedbacks.
     */
    cursor?: error_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` error_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` error_report_feedbacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of error_report_feedbacks.
     */
    distinct?: Error_report_feedbacksScalarFieldEnum | Error_report_feedbacksScalarFieldEnum[]
  }

  /**
   * error_report_feedbacks findFirstOrThrow
   */
  export type error_report_feedbacksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which error_report_feedbacks to fetch.
     */
    where?: error_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of error_report_feedbacks to fetch.
     */
    orderBy?: error_report_feedbacksOrderByWithRelationInput | error_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for error_report_feedbacks.
     */
    cursor?: error_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` error_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` error_report_feedbacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of error_report_feedbacks.
     */
    distinct?: Error_report_feedbacksScalarFieldEnum | Error_report_feedbacksScalarFieldEnum[]
  }

  /**
   * error_report_feedbacks findMany
   */
  export type error_report_feedbacksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter, which error_report_feedbacks to fetch.
     */
    where?: error_report_feedbacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of error_report_feedbacks to fetch.
     */
    orderBy?: error_report_feedbacksOrderByWithRelationInput | error_report_feedbacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing error_report_feedbacks.
     */
    cursor?: error_report_feedbacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` error_report_feedbacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` error_report_feedbacks.
     */
    skip?: number
    distinct?: Error_report_feedbacksScalarFieldEnum | Error_report_feedbacksScalarFieldEnum[]
  }

  /**
   * error_report_feedbacks create
   */
  export type error_report_feedbacksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * The data needed to create a error_report_feedbacks.
     */
    data: XOR<error_report_feedbacksCreateInput, error_report_feedbacksUncheckedCreateInput>
  }

  /**
   * error_report_feedbacks createMany
   */
  export type error_report_feedbacksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many error_report_feedbacks.
     */
    data: error_report_feedbacksCreateManyInput | error_report_feedbacksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * error_report_feedbacks createManyAndReturn
   */
  export type error_report_feedbacksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * The data used to create many error_report_feedbacks.
     */
    data: error_report_feedbacksCreateManyInput | error_report_feedbacksCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * error_report_feedbacks update
   */
  export type error_report_feedbacksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * The data needed to update a error_report_feedbacks.
     */
    data: XOR<error_report_feedbacksUpdateInput, error_report_feedbacksUncheckedUpdateInput>
    /**
     * Choose, which error_report_feedbacks to update.
     */
    where: error_report_feedbacksWhereUniqueInput
  }

  /**
   * error_report_feedbacks updateMany
   */
  export type error_report_feedbacksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update error_report_feedbacks.
     */
    data: XOR<error_report_feedbacksUpdateManyMutationInput, error_report_feedbacksUncheckedUpdateManyInput>
    /**
     * Filter which error_report_feedbacks to update
     */
    where?: error_report_feedbacksWhereInput
    /**
     * Limit how many error_report_feedbacks to update.
     */
    limit?: number
  }

  /**
   * error_report_feedbacks updateManyAndReturn
   */
  export type error_report_feedbacksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * The data used to update error_report_feedbacks.
     */
    data: XOR<error_report_feedbacksUpdateManyMutationInput, error_report_feedbacksUncheckedUpdateManyInput>
    /**
     * Filter which error_report_feedbacks to update
     */
    where?: error_report_feedbacksWhereInput
    /**
     * Limit how many error_report_feedbacks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * error_report_feedbacks upsert
   */
  export type error_report_feedbacksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * The filter to search for the error_report_feedbacks to update in case it exists.
     */
    where: error_report_feedbacksWhereUniqueInput
    /**
     * In case the error_report_feedbacks found by the `where` argument doesn't exist, create a new error_report_feedbacks with this data.
     */
    create: XOR<error_report_feedbacksCreateInput, error_report_feedbacksUncheckedCreateInput>
    /**
     * In case the error_report_feedbacks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<error_report_feedbacksUpdateInput, error_report_feedbacksUncheckedUpdateInput>
  }

  /**
   * error_report_feedbacks delete
   */
  export type error_report_feedbacksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    /**
     * Filter which error_report_feedbacks to delete.
     */
    where: error_report_feedbacksWhereUniqueInput
  }

  /**
   * error_report_feedbacks deleteMany
   */
  export type error_report_feedbacksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which error_report_feedbacks to delete
     */
    where?: error_report_feedbacksWhereInput
    /**
     * Limit how many error_report_feedbacks to delete.
     */
    limit?: number
  }

  /**
   * error_report_feedbacks.users
   */
  export type error_report_feedbacks$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * error_report_feedbacks without action
   */
  export type error_report_feedbacksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
  }


  /**
   * Model group_members
   */

  export type AggregateGroup_members = {
    _count: Group_membersCountAggregateOutputType | null
    _min: Group_membersMinAggregateOutputType | null
    _max: Group_membersMaxAggregateOutputType | null
  }

  export type Group_membersMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    is_admin: boolean | null
    joined_date: Date | null
  }

  export type Group_membersMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    is_admin: boolean | null
    joined_date: Date | null
  }

  export type Group_membersCountAggregateOutputType = {
    id: number
    user_id: number
    group_id: number
    is_admin: number
    joined_date: number
    _all: number
  }


  export type Group_membersMinAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    is_admin?: true
    joined_date?: true
  }

  export type Group_membersMaxAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    is_admin?: true
    joined_date?: true
  }

  export type Group_membersCountAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    is_admin?: true
    joined_date?: true
    _all?: true
  }

  export type Group_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which group_members to aggregate.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned group_members
    **/
    _count?: true | Group_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Group_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Group_membersMaxAggregateInputType
  }

  export type GetGroup_membersAggregateType<T extends Group_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateGroup_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroup_members[P]>
      : GetScalarType<T[P], AggregateGroup_members[P]>
  }




  export type group_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_membersWhereInput
    orderBy?: group_membersOrderByWithAggregationInput | group_membersOrderByWithAggregationInput[]
    by: Group_membersScalarFieldEnum[] | Group_membersScalarFieldEnum
    having?: group_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Group_membersCountAggregateInputType | true
    _min?: Group_membersMinAggregateInputType
    _max?: Group_membersMaxAggregateInputType
  }

  export type Group_membersGroupByOutputType = {
    id: string
    user_id: string
    group_id: string
    is_admin: boolean
    joined_date: Date | null
    _count: Group_membersCountAggregateOutputType | null
    _min: Group_membersMinAggregateOutputType | null
    _max: Group_membersMaxAggregateOutputType | null
  }

  type GetGroup_membersGroupByPayload<T extends group_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Group_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Group_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Group_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Group_membersGroupByOutputType[P]>
        }
      >
    >


  export type group_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    is_admin?: boolean
    joined_date?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_members"]>

  export type group_membersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    is_admin?: boolean
    joined_date?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_members"]>

  export type group_membersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    is_admin?: boolean
    joined_date?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_members"]>

  export type group_membersSelectScalar = {
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    is_admin?: boolean
    joined_date?: boolean
  }

  export type group_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "group_id" | "is_admin" | "joined_date", ExtArgs["result"]["group_members"]>
  export type group_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type group_membersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type group_membersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $group_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "group_members"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      group_id: string
      is_admin: boolean
      joined_date: Date | null
    }, ExtArgs["result"]["group_members"]>
    composites: {}
  }

  type group_membersGetPayload<S extends boolean | null | undefined | group_membersDefaultArgs> = $Result.GetResult<Prisma.$group_membersPayload, S>

  type group_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<group_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Group_membersCountAggregateInputType | true
    }

  export interface group_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['group_members'], meta: { name: 'group_members' } }
    /**
     * Find zero or one Group_members that matches the filter.
     * @param {group_membersFindUniqueArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends group_membersFindUniqueArgs>(args: SelectSubset<T, group_membersFindUniqueArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Group_members that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {group_membersFindUniqueOrThrowArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends group_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, group_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersFindFirstArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends group_membersFindFirstArgs>(args?: SelectSubset<T, group_membersFindFirstArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersFindFirstOrThrowArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends group_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, group_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Group_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Group_members
     * const group_members = await prisma.group_members.findMany()
     * 
     * // Get first 10 Group_members
     * const group_members = await prisma.group_members.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const group_membersWithIdOnly = await prisma.group_members.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends group_membersFindManyArgs>(args?: SelectSubset<T, group_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Group_members.
     * @param {group_membersCreateArgs} args - Arguments to create a Group_members.
     * @example
     * // Create one Group_members
     * const Group_members = await prisma.group_members.create({
     *   data: {
     *     // ... data to create a Group_members
     *   }
     * })
     * 
     */
    create<T extends group_membersCreateArgs>(args: SelectSubset<T, group_membersCreateArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Group_members.
     * @param {group_membersCreateManyArgs} args - Arguments to create many Group_members.
     * @example
     * // Create many Group_members
     * const group_members = await prisma.group_members.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends group_membersCreateManyArgs>(args?: SelectSubset<T, group_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Group_members and returns the data saved in the database.
     * @param {group_membersCreateManyAndReturnArgs} args - Arguments to create many Group_members.
     * @example
     * // Create many Group_members
     * const group_members = await prisma.group_members.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Group_members and only return the `id`
     * const group_membersWithIdOnly = await prisma.group_members.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends group_membersCreateManyAndReturnArgs>(args?: SelectSubset<T, group_membersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Group_members.
     * @param {group_membersDeleteArgs} args - Arguments to delete one Group_members.
     * @example
     * // Delete one Group_members
     * const Group_members = await prisma.group_members.delete({
     *   where: {
     *     // ... filter to delete one Group_members
     *   }
     * })
     * 
     */
    delete<T extends group_membersDeleteArgs>(args: SelectSubset<T, group_membersDeleteArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Group_members.
     * @param {group_membersUpdateArgs} args - Arguments to update one Group_members.
     * @example
     * // Update one Group_members
     * const group_members = await prisma.group_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends group_membersUpdateArgs>(args: SelectSubset<T, group_membersUpdateArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Group_members.
     * @param {group_membersDeleteManyArgs} args - Arguments to filter Group_members to delete.
     * @example
     * // Delete a few Group_members
     * const { count } = await prisma.group_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends group_membersDeleteManyArgs>(args?: SelectSubset<T, group_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Group_members
     * const group_members = await prisma.group_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends group_membersUpdateManyArgs>(args: SelectSubset<T, group_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_members and returns the data updated in the database.
     * @param {group_membersUpdateManyAndReturnArgs} args - Arguments to update many Group_members.
     * @example
     * // Update many Group_members
     * const group_members = await prisma.group_members.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Group_members and only return the `id`
     * const group_membersWithIdOnly = await prisma.group_members.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends group_membersUpdateManyAndReturnArgs>(args: SelectSubset<T, group_membersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Group_members.
     * @param {group_membersUpsertArgs} args - Arguments to update or create a Group_members.
     * @example
     * // Update or create a Group_members
     * const group_members = await prisma.group_members.upsert({
     *   create: {
     *     // ... data to create a Group_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Group_members we want to update
     *   }
     * })
     */
    upsert<T extends group_membersUpsertArgs>(args: SelectSubset<T, group_membersUpsertArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersCountArgs} args - Arguments to filter Group_members to count.
     * @example
     * // Count the number of Group_members
     * const count = await prisma.group_members.count({
     *   where: {
     *     // ... the filter for the Group_members we want to count
     *   }
     * })
    **/
    count<T extends group_membersCountArgs>(
      args?: Subset<T, group_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Group_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Group_membersAggregateArgs>(args: Subset<T, Group_membersAggregateArgs>): Prisma.PrismaPromise<GetGroup_membersAggregateType<T>>

    /**
     * Group by Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends group_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: group_membersGroupByArgs['orderBy'] }
        : { orderBy?: group_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, group_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroup_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the group_members model
   */
  readonly fields: group_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for group_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__group_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groups<T extends groupsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, groupsDefaultArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the group_members model
   */
  interface group_membersFieldRefs {
    readonly id: FieldRef<"group_members", 'String'>
    readonly user_id: FieldRef<"group_members", 'String'>
    readonly group_id: FieldRef<"group_members", 'String'>
    readonly is_admin: FieldRef<"group_members", 'Boolean'>
    readonly joined_date: FieldRef<"group_members", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * group_members findUnique
   */
  export type group_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members findUniqueOrThrow
   */
  export type group_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members findFirst
   */
  export type group_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_members.
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_members.
     */
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * group_members findFirstOrThrow
   */
  export type group_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_members.
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_members.
     */
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * group_members findMany
   */
  export type group_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing group_members.
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * group_members create
   */
  export type group_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a group_members.
     */
    data: XOR<group_membersCreateInput, group_membersUncheckedCreateInput>
  }

  /**
   * group_members createMany
   */
  export type group_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many group_members.
     */
    data: group_membersCreateManyInput | group_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * group_members createManyAndReturn
   */
  export type group_membersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * The data used to create many group_members.
     */
    data: group_membersCreateManyInput | group_membersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * group_members update
   */
  export type group_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a group_members.
     */
    data: XOR<group_membersUpdateInput, group_membersUncheckedUpdateInput>
    /**
     * Choose, which group_members to update.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members updateMany
   */
  export type group_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update group_members.
     */
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyInput>
    /**
     * Filter which group_members to update
     */
    where?: group_membersWhereInput
    /**
     * Limit how many group_members to update.
     */
    limit?: number
  }

  /**
   * group_members updateManyAndReturn
   */
  export type group_membersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * The data used to update group_members.
     */
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyInput>
    /**
     * Filter which group_members to update
     */
    where?: group_membersWhereInput
    /**
     * Limit how many group_members to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * group_members upsert
   */
  export type group_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the group_members to update in case it exists.
     */
    where: group_membersWhereUniqueInput
    /**
     * In case the group_members found by the `where` argument doesn't exist, create a new group_members with this data.
     */
    create: XOR<group_membersCreateInput, group_membersUncheckedCreateInput>
    /**
     * In case the group_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<group_membersUpdateInput, group_membersUncheckedUpdateInput>
  }

  /**
   * group_members delete
   */
  export type group_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter which group_members to delete.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members deleteMany
   */
  export type group_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which group_members to delete
     */
    where?: group_membersWhereInput
    /**
     * Limit how many group_members to delete.
     */
    limit?: number
  }

  /**
   * group_members without action
   */
  export type group_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
  }


  /**
   * Model group_posts
   */

  export type AggregateGroup_posts = {
    _count: Group_postsCountAggregateOutputType | null
    _avg: Group_postsAvgAggregateOutputType | null
    _sum: Group_postsSumAggregateOutputType | null
    _min: Group_postsMinAggregateOutputType | null
    _max: Group_postsMaxAggregateOutputType | null
  }

  export type Group_postsAvgAggregateOutputType = {
    react_count: number | null
  }

  export type Group_postsSumAggregateOutputType = {
    react_count: number | null
  }

  export type Group_postsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    content: string | null
    image_url: string | null
    react_count: number | null
    created_date: Date | null
    updated_date: Date | null
  }

  export type Group_postsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    content: string | null
    image_url: string | null
    react_count: number | null
    created_date: Date | null
    updated_date: Date | null
  }

  export type Group_postsCountAggregateOutputType = {
    id: number
    user_id: number
    group_id: number
    content: number
    image_url: number
    react_count: number
    created_date: number
    updated_date: number
    _all: number
  }


  export type Group_postsAvgAggregateInputType = {
    react_count?: true
  }

  export type Group_postsSumAggregateInputType = {
    react_count?: true
  }

  export type Group_postsMinAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    content?: true
    image_url?: true
    react_count?: true
    created_date?: true
    updated_date?: true
  }

  export type Group_postsMaxAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    content?: true
    image_url?: true
    react_count?: true
    created_date?: true
    updated_date?: true
  }

  export type Group_postsCountAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    content?: true
    image_url?: true
    react_count?: true
    created_date?: true
    updated_date?: true
    _all?: true
  }

  export type Group_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which group_posts to aggregate.
     */
    where?: group_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_posts to fetch.
     */
    orderBy?: group_postsOrderByWithRelationInput | group_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: group_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned group_posts
    **/
    _count?: true | Group_postsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Group_postsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Group_postsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Group_postsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Group_postsMaxAggregateInputType
  }

  export type GetGroup_postsAggregateType<T extends Group_postsAggregateArgs> = {
        [P in keyof T & keyof AggregateGroup_posts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroup_posts[P]>
      : GetScalarType<T[P], AggregateGroup_posts[P]>
  }




  export type group_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_postsWhereInput
    orderBy?: group_postsOrderByWithAggregationInput | group_postsOrderByWithAggregationInput[]
    by: Group_postsScalarFieldEnum[] | Group_postsScalarFieldEnum
    having?: group_postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Group_postsCountAggregateInputType | true
    _avg?: Group_postsAvgAggregateInputType
    _sum?: Group_postsSumAggregateInputType
    _min?: Group_postsMinAggregateInputType
    _max?: Group_postsMaxAggregateInputType
  }

  export type Group_postsGroupByOutputType = {
    id: string
    user_id: string
    group_id: string
    content: string | null
    image_url: string | null
    react_count: number | null
    created_date: Date | null
    updated_date: Date | null
    _count: Group_postsCountAggregateOutputType | null
    _avg: Group_postsAvgAggregateOutputType | null
    _sum: Group_postsSumAggregateOutputType | null
    _min: Group_postsMinAggregateOutputType | null
    _max: Group_postsMaxAggregateOutputType | null
  }

  type GetGroup_postsGroupByPayload<T extends group_postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Group_postsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Group_postsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Group_postsGroupByOutputType[P]>
            : GetScalarType<T[P], Group_postsGroupByOutputType[P]>
        }
      >
    >


  export type group_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    content?: boolean
    image_url?: boolean
    react_count?: boolean
    created_date?: boolean
    updated_date?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_posts"]>

  export type group_postsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    content?: boolean
    image_url?: boolean
    react_count?: boolean
    created_date?: boolean
    updated_date?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_posts"]>

  export type group_postsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    content?: boolean
    image_url?: boolean
    react_count?: boolean
    created_date?: boolean
    updated_date?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_posts"]>

  export type group_postsSelectScalar = {
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    content?: boolean
    image_url?: boolean
    react_count?: boolean
    created_date?: boolean
    updated_date?: boolean
  }

  export type group_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "group_id" | "content" | "image_url" | "react_count" | "created_date" | "updated_date", ExtArgs["result"]["group_posts"]>
  export type group_postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type group_postsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type group_postsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $group_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "group_posts"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      group_id: string
      content: string | null
      image_url: string | null
      react_count: number | null
      created_date: Date | null
      updated_date: Date | null
    }, ExtArgs["result"]["group_posts"]>
    composites: {}
  }

  type group_postsGetPayload<S extends boolean | null | undefined | group_postsDefaultArgs> = $Result.GetResult<Prisma.$group_postsPayload, S>

  type group_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<group_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Group_postsCountAggregateInputType | true
    }

  export interface group_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['group_posts'], meta: { name: 'group_posts' } }
    /**
     * Find zero or one Group_posts that matches the filter.
     * @param {group_postsFindUniqueArgs} args - Arguments to find a Group_posts
     * @example
     * // Get one Group_posts
     * const group_posts = await prisma.group_posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends group_postsFindUniqueArgs>(args: SelectSubset<T, group_postsFindUniqueArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Group_posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {group_postsFindUniqueOrThrowArgs} args - Arguments to find a Group_posts
     * @example
     * // Get one Group_posts
     * const group_posts = await prisma.group_posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends group_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, group_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_postsFindFirstArgs} args - Arguments to find a Group_posts
     * @example
     * // Get one Group_posts
     * const group_posts = await prisma.group_posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends group_postsFindFirstArgs>(args?: SelectSubset<T, group_postsFindFirstArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group_posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_postsFindFirstOrThrowArgs} args - Arguments to find a Group_posts
     * @example
     * // Get one Group_posts
     * const group_posts = await prisma.group_posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends group_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, group_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Group_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Group_posts
     * const group_posts = await prisma.group_posts.findMany()
     * 
     * // Get first 10 Group_posts
     * const group_posts = await prisma.group_posts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const group_postsWithIdOnly = await prisma.group_posts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends group_postsFindManyArgs>(args?: SelectSubset<T, group_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Group_posts.
     * @param {group_postsCreateArgs} args - Arguments to create a Group_posts.
     * @example
     * // Create one Group_posts
     * const Group_posts = await prisma.group_posts.create({
     *   data: {
     *     // ... data to create a Group_posts
     *   }
     * })
     * 
     */
    create<T extends group_postsCreateArgs>(args: SelectSubset<T, group_postsCreateArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Group_posts.
     * @param {group_postsCreateManyArgs} args - Arguments to create many Group_posts.
     * @example
     * // Create many Group_posts
     * const group_posts = await prisma.group_posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends group_postsCreateManyArgs>(args?: SelectSubset<T, group_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Group_posts and returns the data saved in the database.
     * @param {group_postsCreateManyAndReturnArgs} args - Arguments to create many Group_posts.
     * @example
     * // Create many Group_posts
     * const group_posts = await prisma.group_posts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Group_posts and only return the `id`
     * const group_postsWithIdOnly = await prisma.group_posts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends group_postsCreateManyAndReturnArgs>(args?: SelectSubset<T, group_postsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Group_posts.
     * @param {group_postsDeleteArgs} args - Arguments to delete one Group_posts.
     * @example
     * // Delete one Group_posts
     * const Group_posts = await prisma.group_posts.delete({
     *   where: {
     *     // ... filter to delete one Group_posts
     *   }
     * })
     * 
     */
    delete<T extends group_postsDeleteArgs>(args: SelectSubset<T, group_postsDeleteArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Group_posts.
     * @param {group_postsUpdateArgs} args - Arguments to update one Group_posts.
     * @example
     * // Update one Group_posts
     * const group_posts = await prisma.group_posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends group_postsUpdateArgs>(args: SelectSubset<T, group_postsUpdateArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Group_posts.
     * @param {group_postsDeleteManyArgs} args - Arguments to filter Group_posts to delete.
     * @example
     * // Delete a few Group_posts
     * const { count } = await prisma.group_posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends group_postsDeleteManyArgs>(args?: SelectSubset<T, group_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Group_posts
     * const group_posts = await prisma.group_posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends group_postsUpdateManyArgs>(args: SelectSubset<T, group_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_posts and returns the data updated in the database.
     * @param {group_postsUpdateManyAndReturnArgs} args - Arguments to update many Group_posts.
     * @example
     * // Update many Group_posts
     * const group_posts = await prisma.group_posts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Group_posts and only return the `id`
     * const group_postsWithIdOnly = await prisma.group_posts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends group_postsUpdateManyAndReturnArgs>(args: SelectSubset<T, group_postsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Group_posts.
     * @param {group_postsUpsertArgs} args - Arguments to update or create a Group_posts.
     * @example
     * // Update or create a Group_posts
     * const group_posts = await prisma.group_posts.upsert({
     *   create: {
     *     // ... data to create a Group_posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Group_posts we want to update
     *   }
     * })
     */
    upsert<T extends group_postsUpsertArgs>(args: SelectSubset<T, group_postsUpsertArgs<ExtArgs>>): Prisma__group_postsClient<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Group_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_postsCountArgs} args - Arguments to filter Group_posts to count.
     * @example
     * // Count the number of Group_posts
     * const count = await prisma.group_posts.count({
     *   where: {
     *     // ... the filter for the Group_posts we want to count
     *   }
     * })
    **/
    count<T extends group_postsCountArgs>(
      args?: Subset<T, group_postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Group_postsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Group_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Group_postsAggregateArgs>(args: Subset<T, Group_postsAggregateArgs>): Prisma.PrismaPromise<GetGroup_postsAggregateType<T>>

    /**
     * Group by Group_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends group_postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: group_postsGroupByArgs['orderBy'] }
        : { orderBy?: group_postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, group_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroup_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the group_posts model
   */
  readonly fields: group_postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for group_posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__group_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groups<T extends groupsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, groupsDefaultArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the group_posts model
   */
  interface group_postsFieldRefs {
    readonly id: FieldRef<"group_posts", 'String'>
    readonly user_id: FieldRef<"group_posts", 'String'>
    readonly group_id: FieldRef<"group_posts", 'String'>
    readonly content: FieldRef<"group_posts", 'String'>
    readonly image_url: FieldRef<"group_posts", 'String'>
    readonly react_count: FieldRef<"group_posts", 'Int'>
    readonly created_date: FieldRef<"group_posts", 'DateTime'>
    readonly updated_date: FieldRef<"group_posts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * group_posts findUnique
   */
  export type group_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * Filter, which group_posts to fetch.
     */
    where: group_postsWhereUniqueInput
  }

  /**
   * group_posts findUniqueOrThrow
   */
  export type group_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * Filter, which group_posts to fetch.
     */
    where: group_postsWhereUniqueInput
  }

  /**
   * group_posts findFirst
   */
  export type group_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * Filter, which group_posts to fetch.
     */
    where?: group_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_posts to fetch.
     */
    orderBy?: group_postsOrderByWithRelationInput | group_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_posts.
     */
    cursor?: group_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_posts.
     */
    distinct?: Group_postsScalarFieldEnum | Group_postsScalarFieldEnum[]
  }

  /**
   * group_posts findFirstOrThrow
   */
  export type group_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * Filter, which group_posts to fetch.
     */
    where?: group_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_posts to fetch.
     */
    orderBy?: group_postsOrderByWithRelationInput | group_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_posts.
     */
    cursor?: group_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_posts.
     */
    distinct?: Group_postsScalarFieldEnum | Group_postsScalarFieldEnum[]
  }

  /**
   * group_posts findMany
   */
  export type group_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * Filter, which group_posts to fetch.
     */
    where?: group_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_posts to fetch.
     */
    orderBy?: group_postsOrderByWithRelationInput | group_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing group_posts.
     */
    cursor?: group_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_posts.
     */
    skip?: number
    distinct?: Group_postsScalarFieldEnum | Group_postsScalarFieldEnum[]
  }

  /**
   * group_posts create
   */
  export type group_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * The data needed to create a group_posts.
     */
    data: XOR<group_postsCreateInput, group_postsUncheckedCreateInput>
  }

  /**
   * group_posts createMany
   */
  export type group_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many group_posts.
     */
    data: group_postsCreateManyInput | group_postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * group_posts createManyAndReturn
   */
  export type group_postsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * The data used to create many group_posts.
     */
    data: group_postsCreateManyInput | group_postsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * group_posts update
   */
  export type group_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * The data needed to update a group_posts.
     */
    data: XOR<group_postsUpdateInput, group_postsUncheckedUpdateInput>
    /**
     * Choose, which group_posts to update.
     */
    where: group_postsWhereUniqueInput
  }

  /**
   * group_posts updateMany
   */
  export type group_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update group_posts.
     */
    data: XOR<group_postsUpdateManyMutationInput, group_postsUncheckedUpdateManyInput>
    /**
     * Filter which group_posts to update
     */
    where?: group_postsWhereInput
    /**
     * Limit how many group_posts to update.
     */
    limit?: number
  }

  /**
   * group_posts updateManyAndReturn
   */
  export type group_postsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * The data used to update group_posts.
     */
    data: XOR<group_postsUpdateManyMutationInput, group_postsUncheckedUpdateManyInput>
    /**
     * Filter which group_posts to update
     */
    where?: group_postsWhereInput
    /**
     * Limit how many group_posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * group_posts upsert
   */
  export type group_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * The filter to search for the group_posts to update in case it exists.
     */
    where: group_postsWhereUniqueInput
    /**
     * In case the group_posts found by the `where` argument doesn't exist, create a new group_posts with this data.
     */
    create: XOR<group_postsCreateInput, group_postsUncheckedCreateInput>
    /**
     * In case the group_posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<group_postsUpdateInput, group_postsUncheckedUpdateInput>
  }

  /**
   * group_posts delete
   */
  export type group_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    /**
     * Filter which group_posts to delete.
     */
    where: group_postsWhereUniqueInput
  }

  /**
   * group_posts deleteMany
   */
  export type group_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which group_posts to delete
     */
    where?: group_postsWhereInput
    /**
     * Limit how many group_posts to delete.
     */
    limit?: number
  }

  /**
   * group_posts without action
   */
  export type group_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
  }


  /**
   * Model groups
   */

  export type AggregateGroups = {
    _count: GroupsCountAggregateOutputType | null
    _avg: GroupsAvgAggregateOutputType | null
    _sum: GroupsSumAggregateOutputType | null
    _min: GroupsMinAggregateOutputType | null
    _max: GroupsMaxAggregateOutputType | null
  }

  export type GroupsAvgAggregateOutputType = {
    count_member: number | null
  }

  export type GroupsSumAggregateOutputType = {
    count_member: number | null
  }

  export type GroupsMinAggregateOutputType = {
    id: string | null
    name: string | null
    image_url: string | null
    created_by: string | null
    created_date: Date | null
    count_member: number | null
  }

  export type GroupsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    image_url: string | null
    created_by: string | null
    created_date: Date | null
    count_member: number | null
  }

  export type GroupsCountAggregateOutputType = {
    id: number
    name: number
    image_url: number
    created_by: number
    created_date: number
    count_member: number
    _all: number
  }


  export type GroupsAvgAggregateInputType = {
    count_member?: true
  }

  export type GroupsSumAggregateInputType = {
    count_member?: true
  }

  export type GroupsMinAggregateInputType = {
    id?: true
    name?: true
    image_url?: true
    created_by?: true
    created_date?: true
    count_member?: true
  }

  export type GroupsMaxAggregateInputType = {
    id?: true
    name?: true
    image_url?: true
    created_by?: true
    created_date?: true
    count_member?: true
  }

  export type GroupsCountAggregateInputType = {
    id?: true
    name?: true
    image_url?: true
    created_by?: true
    created_date?: true
    count_member?: true
    _all?: true
  }

  export type GroupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups to aggregate.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned groups
    **/
    _count?: true | GroupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GroupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GroupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroupsMaxAggregateInputType
  }

  export type GetGroupsAggregateType<T extends GroupsAggregateArgs> = {
        [P in keyof T & keyof AggregateGroups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroups[P]>
      : GetScalarType<T[P], AggregateGroups[P]>
  }




  export type groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groupsWhereInput
    orderBy?: groupsOrderByWithAggregationInput | groupsOrderByWithAggregationInput[]
    by: GroupsScalarFieldEnum[] | GroupsScalarFieldEnum
    having?: groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroupsCountAggregateInputType | true
    _avg?: GroupsAvgAggregateInputType
    _sum?: GroupsSumAggregateInputType
    _min?: GroupsMinAggregateInputType
    _max?: GroupsMaxAggregateInputType
  }

  export type GroupsGroupByOutputType = {
    id: string
    name: string
    image_url: string | null
    created_by: string
    created_date: Date | null
    count_member: number | null
    _count: GroupsCountAggregateOutputType | null
    _avg: GroupsAvgAggregateOutputType | null
    _sum: GroupsSumAggregateOutputType | null
    _min: GroupsMinAggregateOutputType | null
    _max: GroupsMaxAggregateOutputType | null
  }

  type GetGroupsGroupByPayload<T extends groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroupsGroupByOutputType[P]>
            : GetScalarType<T[P], GroupsGroupByOutputType[P]>
        }
      >
    >


  export type groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    image_url?: boolean
    created_by?: boolean
    created_date?: boolean
    count_member?: boolean
    comments_group?: boolean | groups$comments_groupArgs<ExtArgs>
    group_members?: boolean | groups$group_membersArgs<ExtArgs>
    group_posts?: boolean | groups$group_postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    messages?: boolean | groups$messagesArgs<ExtArgs>
    _count?: boolean | GroupsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groups"]>

  export type groupsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    image_url?: boolean
    created_by?: boolean
    created_date?: boolean
    count_member?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groups"]>

  export type groupsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    image_url?: boolean
    created_by?: boolean
    created_date?: boolean
    count_member?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groups"]>

  export type groupsSelectScalar = {
    id?: boolean
    name?: boolean
    image_url?: boolean
    created_by?: boolean
    created_date?: boolean
    count_member?: boolean
  }

  export type groupsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "image_url" | "created_by" | "created_date" | "count_member", ExtArgs["result"]["groups"]>
  export type groupsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments_group?: boolean | groups$comments_groupArgs<ExtArgs>
    group_members?: boolean | groups$group_membersArgs<ExtArgs>
    group_posts?: boolean | groups$group_postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    messages?: boolean | groups$messagesArgs<ExtArgs>
    _count?: boolean | GroupsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type groupsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type groupsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "groups"
    objects: {
      comments_group: Prisma.$comments_groupPayload<ExtArgs>[]
      group_members: Prisma.$group_membersPayload<ExtArgs>[]
      group_posts: Prisma.$group_postsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
      messages: Prisma.$messagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      image_url: string | null
      created_by: string
      created_date: Date | null
      count_member: number | null
    }, ExtArgs["result"]["groups"]>
    composites: {}
  }

  type groupsGetPayload<S extends boolean | null | undefined | groupsDefaultArgs> = $Result.GetResult<Prisma.$groupsPayload, S>

  type groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GroupsCountAggregateInputType | true
    }

  export interface groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['groups'], meta: { name: 'groups' } }
    /**
     * Find zero or one Groups that matches the filter.
     * @param {groupsFindUniqueArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends groupsFindUniqueArgs>(args: SelectSubset<T, groupsFindUniqueArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Groups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {groupsFindUniqueOrThrowArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindFirstArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends groupsFindFirstArgs>(args?: SelectSubset<T, groupsFindFirstArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindFirstOrThrowArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Groups
     * const groups = await prisma.groups.findMany()
     * 
     * // Get first 10 Groups
     * const groups = await prisma.groups.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const groupsWithIdOnly = await prisma.groups.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends groupsFindManyArgs>(args?: SelectSubset<T, groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Groups.
     * @param {groupsCreateArgs} args - Arguments to create a Groups.
     * @example
     * // Create one Groups
     * const Groups = await prisma.groups.create({
     *   data: {
     *     // ... data to create a Groups
     *   }
     * })
     * 
     */
    create<T extends groupsCreateArgs>(args: SelectSubset<T, groupsCreateArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Groups.
     * @param {groupsCreateManyArgs} args - Arguments to create many Groups.
     * @example
     * // Create many Groups
     * const groups = await prisma.groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends groupsCreateManyArgs>(args?: SelectSubset<T, groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Groups and returns the data saved in the database.
     * @param {groupsCreateManyAndReturnArgs} args - Arguments to create many Groups.
     * @example
     * // Create many Groups
     * const groups = await prisma.groups.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Groups and only return the `id`
     * const groupsWithIdOnly = await prisma.groups.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends groupsCreateManyAndReturnArgs>(args?: SelectSubset<T, groupsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Groups.
     * @param {groupsDeleteArgs} args - Arguments to delete one Groups.
     * @example
     * // Delete one Groups
     * const Groups = await prisma.groups.delete({
     *   where: {
     *     // ... filter to delete one Groups
     *   }
     * })
     * 
     */
    delete<T extends groupsDeleteArgs>(args: SelectSubset<T, groupsDeleteArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Groups.
     * @param {groupsUpdateArgs} args - Arguments to update one Groups.
     * @example
     * // Update one Groups
     * const groups = await prisma.groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends groupsUpdateArgs>(args: SelectSubset<T, groupsUpdateArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Groups.
     * @param {groupsDeleteManyArgs} args - Arguments to filter Groups to delete.
     * @example
     * // Delete a few Groups
     * const { count } = await prisma.groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends groupsDeleteManyArgs>(args?: SelectSubset<T, groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Groups
     * const groups = await prisma.groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends groupsUpdateManyArgs>(args: SelectSubset<T, groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups and returns the data updated in the database.
     * @param {groupsUpdateManyAndReturnArgs} args - Arguments to update many Groups.
     * @example
     * // Update many Groups
     * const groups = await prisma.groups.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Groups and only return the `id`
     * const groupsWithIdOnly = await prisma.groups.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends groupsUpdateManyAndReturnArgs>(args: SelectSubset<T, groupsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Groups.
     * @param {groupsUpsertArgs} args - Arguments to update or create a Groups.
     * @example
     * // Update or create a Groups
     * const groups = await prisma.groups.upsert({
     *   create: {
     *     // ... data to create a Groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Groups we want to update
     *   }
     * })
     */
    upsert<T extends groupsUpsertArgs>(args: SelectSubset<T, groupsUpsertArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsCountArgs} args - Arguments to filter Groups to count.
     * @example
     * // Count the number of Groups
     * const count = await prisma.groups.count({
     *   where: {
     *     // ... the filter for the Groups we want to count
     *   }
     * })
    **/
    count<T extends groupsCountArgs>(
      args?: Subset<T, groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroupsAggregateArgs>(args: Subset<T, GroupsAggregateArgs>): Prisma.PrismaPromise<GetGroupsAggregateType<T>>

    /**
     * Group by Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: groupsGroupByArgs['orderBy'] }
        : { orderBy?: groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the groups model
   */
  readonly fields: groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comments_group<T extends groups$comments_groupArgs<ExtArgs> = {}>(args?: Subset<T, groups$comments_groupArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    group_members<T extends groups$group_membersArgs<ExtArgs> = {}>(args?: Subset<T, groups$group_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    group_posts<T extends groups$group_postsArgs<ExtArgs> = {}>(args?: Subset<T, groups$group_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    messages<T extends groups$messagesArgs<ExtArgs> = {}>(args?: Subset<T, groups$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the groups model
   */
  interface groupsFieldRefs {
    readonly id: FieldRef<"groups", 'String'>
    readonly name: FieldRef<"groups", 'String'>
    readonly image_url: FieldRef<"groups", 'String'>
    readonly created_by: FieldRef<"groups", 'String'>
    readonly created_date: FieldRef<"groups", 'DateTime'>
    readonly count_member: FieldRef<"groups", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * groups findUnique
   */
  export type groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups findUniqueOrThrow
   */
  export type groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups findFirst
   */
  export type groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups.
     */
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * groups findFirstOrThrow
   */
  export type groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups.
     */
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * groups findMany
   */
  export type groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * groups create
   */
  export type groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The data needed to create a groups.
     */
    data: XOR<groupsCreateInput, groupsUncheckedCreateInput>
  }

  /**
   * groups createMany
   */
  export type groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many groups.
     */
    data: groupsCreateManyInput | groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * groups createManyAndReturn
   */
  export type groupsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * The data used to create many groups.
     */
    data: groupsCreateManyInput | groupsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * groups update
   */
  export type groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The data needed to update a groups.
     */
    data: XOR<groupsUpdateInput, groupsUncheckedUpdateInput>
    /**
     * Choose, which groups to update.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups updateMany
   */
  export type groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update groups.
     */
    data: XOR<groupsUpdateManyMutationInput, groupsUncheckedUpdateManyInput>
    /**
     * Filter which groups to update
     */
    where?: groupsWhereInput
    /**
     * Limit how many groups to update.
     */
    limit?: number
  }

  /**
   * groups updateManyAndReturn
   */
  export type groupsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * The data used to update groups.
     */
    data: XOR<groupsUpdateManyMutationInput, groupsUncheckedUpdateManyInput>
    /**
     * Filter which groups to update
     */
    where?: groupsWhereInput
    /**
     * Limit how many groups to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * groups upsert
   */
  export type groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The filter to search for the groups to update in case it exists.
     */
    where: groupsWhereUniqueInput
    /**
     * In case the groups found by the `where` argument doesn't exist, create a new groups with this data.
     */
    create: XOR<groupsCreateInput, groupsUncheckedCreateInput>
    /**
     * In case the groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<groupsUpdateInput, groupsUncheckedUpdateInput>
  }

  /**
   * groups delete
   */
  export type groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter which groups to delete.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups deleteMany
   */
  export type groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups to delete
     */
    where?: groupsWhereInput
    /**
     * Limit how many groups to delete.
     */
    limit?: number
  }

  /**
   * groups.comments_group
   */
  export type groups$comments_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    where?: comments_groupWhereInput
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    cursor?: comments_groupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Comments_groupScalarFieldEnum | Comments_groupScalarFieldEnum[]
  }

  /**
   * groups.group_members
   */
  export type groups$group_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    where?: group_membersWhereInput
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    cursor?: group_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * groups.group_posts
   */
  export type groups$group_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    where?: group_postsWhereInput
    orderBy?: group_postsOrderByWithRelationInput | group_postsOrderByWithRelationInput[]
    cursor?: group_postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Group_postsScalarFieldEnum | Group_postsScalarFieldEnum[]
  }

  /**
   * groups.messages
   */
  export type groups$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * groups without action
   */
  export type groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
  }


  /**
   * Model messages
   */

  export type AggregateMessages = {
    _count: MessagesCountAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  export type MessagesMinAggregateOutputType = {
    id: string | null
    sender_id: string | null
    group_id: string | null
    created_date: Date | null
    content: string | null
  }

  export type MessagesMaxAggregateOutputType = {
    id: string | null
    sender_id: string | null
    group_id: string | null
    created_date: Date | null
    content: string | null
  }

  export type MessagesCountAggregateOutputType = {
    id: number
    sender_id: number
    group_id: number
    created_date: number
    content: number
    _all: number
  }


  export type MessagesMinAggregateInputType = {
    id?: true
    sender_id?: true
    group_id?: true
    created_date?: true
    content?: true
  }

  export type MessagesMaxAggregateInputType = {
    id?: true
    sender_id?: true
    group_id?: true
    created_date?: true
    content?: true
  }

  export type MessagesCountAggregateInputType = {
    id?: true
    sender_id?: true
    group_id?: true
    created_date?: true
    content?: true
    _all?: true
  }

  export type MessagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to aggregate.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned messages
    **/
    _count?: true | MessagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagesMaxAggregateInputType
  }

  export type GetMessagesAggregateType<T extends MessagesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessages[P]>
      : GetScalarType<T[P], AggregateMessages[P]>
  }




  export type messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithAggregationInput | messagesOrderByWithAggregationInput[]
    by: MessagesScalarFieldEnum[] | MessagesScalarFieldEnum
    having?: messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagesCountAggregateInputType | true
    _min?: MessagesMinAggregateInputType
    _max?: MessagesMaxAggregateInputType
  }

  export type MessagesGroupByOutputType = {
    id: string
    sender_id: string
    group_id: string
    created_date: Date | null
    content: string | null
    _count: MessagesCountAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  type GetMessagesGroupByPayload<T extends messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagesGroupByOutputType[P]>
            : GetScalarType<T[P], MessagesGroupByOutputType[P]>
        }
      >
    >


  export type messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sender_id?: boolean
    group_id?: boolean
    created_date?: boolean
    content?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>

  export type messagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sender_id?: boolean
    group_id?: boolean
    created_date?: boolean
    content?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>

  export type messagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sender_id?: boolean
    group_id?: boolean
    created_date?: boolean
    content?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>

  export type messagesSelectScalar = {
    id?: boolean
    sender_id?: boolean
    group_id?: boolean
    created_date?: boolean
    content?: boolean
  }

  export type messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sender_id" | "group_id" | "created_date" | "content", ExtArgs["result"]["messages"]>
  export type messagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type messagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type messagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "messages"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sender_id: string
      group_id: string
      created_date: Date | null
      content: string | null
    }, ExtArgs["result"]["messages"]>
    composites: {}
  }

  type messagesGetPayload<S extends boolean | null | undefined | messagesDefaultArgs> = $Result.GetResult<Prisma.$messagesPayload, S>

  type messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessagesCountAggregateInputType | true
    }

  export interface messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['messages'], meta: { name: 'messages' } }
    /**
     * Find zero or one Messages that matches the filter.
     * @param {messagesFindUniqueArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends messagesFindUniqueArgs>(args: SelectSubset<T, messagesFindUniqueArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {messagesFindUniqueOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends messagesFindFirstArgs>(args?: SelectSubset<T, messagesFindFirstArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.messages.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messagesWithIdOnly = await prisma.messages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends messagesFindManyArgs>(args?: SelectSubset<T, messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Messages.
     * @param {messagesCreateArgs} args - Arguments to create a Messages.
     * @example
     * // Create one Messages
     * const Messages = await prisma.messages.create({
     *   data: {
     *     // ... data to create a Messages
     *   }
     * })
     * 
     */
    create<T extends messagesCreateArgs>(args: SelectSubset<T, messagesCreateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {messagesCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const messages = await prisma.messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends messagesCreateManyArgs>(args?: SelectSubset<T, messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {messagesCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const messages = await prisma.messages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messagesWithIdOnly = await prisma.messages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends messagesCreateManyAndReturnArgs>(args?: SelectSubset<T, messagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Messages.
     * @param {messagesDeleteArgs} args - Arguments to delete one Messages.
     * @example
     * // Delete one Messages
     * const Messages = await prisma.messages.delete({
     *   where: {
     *     // ... filter to delete one Messages
     *   }
     * })
     * 
     */
    delete<T extends messagesDeleteArgs>(args: SelectSubset<T, messagesDeleteArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Messages.
     * @param {messagesUpdateArgs} args - Arguments to update one Messages.
     * @example
     * // Update one Messages
     * const messages = await prisma.messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends messagesUpdateArgs>(args: SelectSubset<T, messagesUpdateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {messagesDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends messagesDeleteManyArgs>(args?: SelectSubset<T, messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends messagesUpdateManyArgs>(args: SelectSubset<T, messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {messagesUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messagesWithIdOnly = await prisma.messages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends messagesUpdateManyAndReturnArgs>(args: SelectSubset<T, messagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Messages.
     * @param {messagesUpsertArgs} args - Arguments to update or create a Messages.
     * @example
     * // Update or create a Messages
     * const messages = await prisma.messages.upsert({
     *   create: {
     *     // ... data to create a Messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Messages we want to update
     *   }
     * })
     */
    upsert<T extends messagesUpsertArgs>(args: SelectSubset<T, messagesUpsertArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.messages.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends messagesCountArgs>(
      args?: Subset<T, messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagesAggregateArgs>(args: Subset<T, MessagesAggregateArgs>): Prisma.PrismaPromise<GetMessagesAggregateType<T>>

    /**
     * Group by Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: messagesGroupByArgs['orderBy'] }
        : { orderBy?: messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the messages model
   */
  readonly fields: messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groups<T extends groupsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, groupsDefaultArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the messages model
   */
  interface messagesFieldRefs {
    readonly id: FieldRef<"messages", 'String'>
    readonly sender_id: FieldRef<"messages", 'String'>
    readonly group_id: FieldRef<"messages", 'String'>
    readonly created_date: FieldRef<"messages", 'DateTime'>
    readonly content: FieldRef<"messages", 'String'>
  }
    

  // Custom InputTypes
  /**
   * messages findUnique
   */
  export type messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findUniqueOrThrow
   */
  export type messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findFirst
   */
  export type messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findFirstOrThrow
   */
  export type messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findMany
   */
  export type messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages create
   */
  export type messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to create a messages.
     */
    data: XOR<messagesCreateInput, messagesUncheckedCreateInput>
  }

  /**
   * messages createMany
   */
  export type messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many messages.
     */
    data: messagesCreateManyInput | messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * messages createManyAndReturn
   */
  export type messagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * The data used to create many messages.
     */
    data: messagesCreateManyInput | messagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * messages update
   */
  export type messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to update a messages.
     */
    data: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
    /**
     * Choose, which messages to update.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages updateMany
   */
  export type messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update messages.
     */
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
  }

  /**
   * messages updateManyAndReturn
   */
  export type messagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * The data used to update messages.
     */
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * messages upsert
   */
  export type messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The filter to search for the messages to update in case it exists.
     */
    where: messagesWhereUniqueInput
    /**
     * In case the messages found by the `where` argument doesn't exist, create a new messages with this data.
     */
    create: XOR<messagesCreateInput, messagesUncheckedCreateInput>
    /**
     * In case the messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
  }

  /**
   * messages delete
   */
  export type messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter which messages to delete.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages deleteMany
   */
  export type messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to delete
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to delete.
     */
    limit?: number
  }

  /**
   * messages without action
   */
  export type messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
  }


  /**
   * Model packages
   */

  export type AggregatePackages = {
    _count: PackagesCountAggregateOutputType | null
    _avg: PackagesAvgAggregateOutputType | null
    _sum: PackagesSumAggregateOutputType | null
    _min: PackagesMinAggregateOutputType | null
    _max: PackagesMaxAggregateOutputType | null
  }

  export type PackagesAvgAggregateOutputType = {
    duration_days: number | null
    price: number | null
  }

  export type PackagesSumAggregateOutputType = {
    duration_days: number | null
    price: number | null
  }

  export type PackagesMinAggregateOutputType = {
    id: string | null
    name: string | null
    duration_days: number | null
    price: number | null
    is_premium: boolean | null
  }

  export type PackagesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    duration_days: number | null
    price: number | null
    is_premium: boolean | null
  }

  export type PackagesCountAggregateOutputType = {
    id: number
    name: number
    duration_days: number
    price: number
    is_premium: number
    _all: number
  }


  export type PackagesAvgAggregateInputType = {
    duration_days?: true
    price?: true
  }

  export type PackagesSumAggregateInputType = {
    duration_days?: true
    price?: true
  }

  export type PackagesMinAggregateInputType = {
    id?: true
    name?: true
    duration_days?: true
    price?: true
    is_premium?: true
  }

  export type PackagesMaxAggregateInputType = {
    id?: true
    name?: true
    duration_days?: true
    price?: true
    is_premium?: true
  }

  export type PackagesCountAggregateInputType = {
    id?: true
    name?: true
    duration_days?: true
    price?: true
    is_premium?: true
    _all?: true
  }

  export type PackagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which packages to aggregate.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned packages
    **/
    _count?: true | PackagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PackagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PackagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PackagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PackagesMaxAggregateInputType
  }

  export type GetPackagesAggregateType<T extends PackagesAggregateArgs> = {
        [P in keyof T & keyof AggregatePackages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePackages[P]>
      : GetScalarType<T[P], AggregatePackages[P]>
  }




  export type packagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: packagesWhereInput
    orderBy?: packagesOrderByWithAggregationInput | packagesOrderByWithAggregationInput[]
    by: PackagesScalarFieldEnum[] | PackagesScalarFieldEnum
    having?: packagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PackagesCountAggregateInputType | true
    _avg?: PackagesAvgAggregateInputType
    _sum?: PackagesSumAggregateInputType
    _min?: PackagesMinAggregateInputType
    _max?: PackagesMaxAggregateInputType
  }

  export type PackagesGroupByOutputType = {
    id: string
    name: string
    duration_days: number
    price: number
    is_premium: boolean | null
    _count: PackagesCountAggregateOutputType | null
    _avg: PackagesAvgAggregateOutputType | null
    _sum: PackagesSumAggregateOutputType | null
    _min: PackagesMinAggregateOutputType | null
    _max: PackagesMaxAggregateOutputType | null
  }

  type GetPackagesGroupByPayload<T extends packagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PackagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PackagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PackagesGroupByOutputType[P]>
            : GetScalarType<T[P], PackagesGroupByOutputType[P]>
        }
      >
    >


  export type packagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    duration_days?: boolean
    price?: boolean
    is_premium?: boolean
    user_packages?: boolean | packages$user_packagesArgs<ExtArgs>
    _count?: boolean | PackagesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packages"]>

  export type packagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    duration_days?: boolean
    price?: boolean
    is_premium?: boolean
  }, ExtArgs["result"]["packages"]>

  export type packagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    duration_days?: boolean
    price?: boolean
    is_premium?: boolean
  }, ExtArgs["result"]["packages"]>

  export type packagesSelectScalar = {
    id?: boolean
    name?: boolean
    duration_days?: boolean
    price?: boolean
    is_premium?: boolean
  }

  export type packagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "duration_days" | "price" | "is_premium", ExtArgs["result"]["packages"]>
  export type packagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_packages?: boolean | packages$user_packagesArgs<ExtArgs>
    _count?: boolean | PackagesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type packagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type packagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $packagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "packages"
    objects: {
      user_packages: Prisma.$user_packagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      duration_days: number
      price: number
      is_premium: boolean | null
    }, ExtArgs["result"]["packages"]>
    composites: {}
  }

  type packagesGetPayload<S extends boolean | null | undefined | packagesDefaultArgs> = $Result.GetResult<Prisma.$packagesPayload, S>

  type packagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<packagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PackagesCountAggregateInputType | true
    }

  export interface packagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['packages'], meta: { name: 'packages' } }
    /**
     * Find zero or one Packages that matches the filter.
     * @param {packagesFindUniqueArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends packagesFindUniqueArgs>(args: SelectSubset<T, packagesFindUniqueArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Packages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {packagesFindUniqueOrThrowArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends packagesFindUniqueOrThrowArgs>(args: SelectSubset<T, packagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Packages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesFindFirstArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends packagesFindFirstArgs>(args?: SelectSubset<T, packagesFindFirstArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Packages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesFindFirstOrThrowArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends packagesFindFirstOrThrowArgs>(args?: SelectSubset<T, packagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Packages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Packages
     * const packages = await prisma.packages.findMany()
     * 
     * // Get first 10 Packages
     * const packages = await prisma.packages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const packagesWithIdOnly = await prisma.packages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends packagesFindManyArgs>(args?: SelectSubset<T, packagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Packages.
     * @param {packagesCreateArgs} args - Arguments to create a Packages.
     * @example
     * // Create one Packages
     * const Packages = await prisma.packages.create({
     *   data: {
     *     // ... data to create a Packages
     *   }
     * })
     * 
     */
    create<T extends packagesCreateArgs>(args: SelectSubset<T, packagesCreateArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Packages.
     * @param {packagesCreateManyArgs} args - Arguments to create many Packages.
     * @example
     * // Create many Packages
     * const packages = await prisma.packages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends packagesCreateManyArgs>(args?: SelectSubset<T, packagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Packages and returns the data saved in the database.
     * @param {packagesCreateManyAndReturnArgs} args - Arguments to create many Packages.
     * @example
     * // Create many Packages
     * const packages = await prisma.packages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Packages and only return the `id`
     * const packagesWithIdOnly = await prisma.packages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends packagesCreateManyAndReturnArgs>(args?: SelectSubset<T, packagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Packages.
     * @param {packagesDeleteArgs} args - Arguments to delete one Packages.
     * @example
     * // Delete one Packages
     * const Packages = await prisma.packages.delete({
     *   where: {
     *     // ... filter to delete one Packages
     *   }
     * })
     * 
     */
    delete<T extends packagesDeleteArgs>(args: SelectSubset<T, packagesDeleteArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Packages.
     * @param {packagesUpdateArgs} args - Arguments to update one Packages.
     * @example
     * // Update one Packages
     * const packages = await prisma.packages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends packagesUpdateArgs>(args: SelectSubset<T, packagesUpdateArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Packages.
     * @param {packagesDeleteManyArgs} args - Arguments to filter Packages to delete.
     * @example
     * // Delete a few Packages
     * const { count } = await prisma.packages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends packagesDeleteManyArgs>(args?: SelectSubset<T, packagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Packages
     * const packages = await prisma.packages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends packagesUpdateManyArgs>(args: SelectSubset<T, packagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Packages and returns the data updated in the database.
     * @param {packagesUpdateManyAndReturnArgs} args - Arguments to update many Packages.
     * @example
     * // Update many Packages
     * const packages = await prisma.packages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Packages and only return the `id`
     * const packagesWithIdOnly = await prisma.packages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends packagesUpdateManyAndReturnArgs>(args: SelectSubset<T, packagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Packages.
     * @param {packagesUpsertArgs} args - Arguments to update or create a Packages.
     * @example
     * // Update or create a Packages
     * const packages = await prisma.packages.upsert({
     *   create: {
     *     // ... data to create a Packages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Packages we want to update
     *   }
     * })
     */
    upsert<T extends packagesUpsertArgs>(args: SelectSubset<T, packagesUpsertArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesCountArgs} args - Arguments to filter Packages to count.
     * @example
     * // Count the number of Packages
     * const count = await prisma.packages.count({
     *   where: {
     *     // ... the filter for the Packages we want to count
     *   }
     * })
    **/
    count<T extends packagesCountArgs>(
      args?: Subset<T, packagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PackagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PackagesAggregateArgs>(args: Subset<T, PackagesAggregateArgs>): Prisma.PrismaPromise<GetPackagesAggregateType<T>>

    /**
     * Group by Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends packagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: packagesGroupByArgs['orderBy'] }
        : { orderBy?: packagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, packagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPackagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the packages model
   */
  readonly fields: packagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for packages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__packagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_packages<T extends packages$user_packagesArgs<ExtArgs> = {}>(args?: Subset<T, packages$user_packagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the packages model
   */
  interface packagesFieldRefs {
    readonly id: FieldRef<"packages", 'String'>
    readonly name: FieldRef<"packages", 'String'>
    readonly duration_days: FieldRef<"packages", 'Int'>
    readonly price: FieldRef<"packages", 'Int'>
    readonly is_premium: FieldRef<"packages", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * packages findUnique
   */
  export type packagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages findUniqueOrThrow
   */
  export type packagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages findFirst
   */
  export type packagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for packages.
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of packages.
     */
    distinct?: PackagesScalarFieldEnum | PackagesScalarFieldEnum[]
  }

  /**
   * packages findFirstOrThrow
   */
  export type packagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for packages.
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of packages.
     */
    distinct?: PackagesScalarFieldEnum | PackagesScalarFieldEnum[]
  }

  /**
   * packages findMany
   */
  export type packagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing packages.
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    distinct?: PackagesScalarFieldEnum | PackagesScalarFieldEnum[]
  }

  /**
   * packages create
   */
  export type packagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * The data needed to create a packages.
     */
    data: XOR<packagesCreateInput, packagesUncheckedCreateInput>
  }

  /**
   * packages createMany
   */
  export type packagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many packages.
     */
    data: packagesCreateManyInput | packagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * packages createManyAndReturn
   */
  export type packagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * The data used to create many packages.
     */
    data: packagesCreateManyInput | packagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * packages update
   */
  export type packagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * The data needed to update a packages.
     */
    data: XOR<packagesUpdateInput, packagesUncheckedUpdateInput>
    /**
     * Choose, which packages to update.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages updateMany
   */
  export type packagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update packages.
     */
    data: XOR<packagesUpdateManyMutationInput, packagesUncheckedUpdateManyInput>
    /**
     * Filter which packages to update
     */
    where?: packagesWhereInput
    /**
     * Limit how many packages to update.
     */
    limit?: number
  }

  /**
   * packages updateManyAndReturn
   */
  export type packagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * The data used to update packages.
     */
    data: XOR<packagesUpdateManyMutationInput, packagesUncheckedUpdateManyInput>
    /**
     * Filter which packages to update
     */
    where?: packagesWhereInput
    /**
     * Limit how many packages to update.
     */
    limit?: number
  }

  /**
   * packages upsert
   */
  export type packagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * The filter to search for the packages to update in case it exists.
     */
    where: packagesWhereUniqueInput
    /**
     * In case the packages found by the `where` argument doesn't exist, create a new packages with this data.
     */
    create: XOR<packagesCreateInput, packagesUncheckedCreateInput>
    /**
     * In case the packages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<packagesUpdateInput, packagesUncheckedUpdateInput>
  }

  /**
   * packages delete
   */
  export type packagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter which packages to delete.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages deleteMany
   */
  export type packagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which packages to delete
     */
    where?: packagesWhereInput
    /**
     * Limit how many packages to delete.
     */
    limit?: number
  }

  /**
   * packages.user_packages
   */
  export type packages$user_packagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    where?: user_packagesWhereInput
    orderBy?: user_packagesOrderByWithRelationInput | user_packagesOrderByWithRelationInput[]
    cursor?: user_packagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_packagesScalarFieldEnum | User_packagesScalarFieldEnum[]
  }

  /**
   * packages without action
   */
  export type packagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
  }


  /**
   * Model posts
   */

  export type AggregatePosts = {
    _count: PostsCountAggregateOutputType | null
    _avg: PostsAvgAggregateOutputType | null
    _sum: PostsSumAggregateOutputType | null
    _min: PostsMinAggregateOutputType | null
    _max: PostsMaxAggregateOutputType | null
  }

  export type PostsAvgAggregateOutputType = {
    react_count: number | null
    shared_user_id_count: number | null
    comment_count: number | null
  }

  export type PostsSumAggregateOutputType = {
    react_count: number | null
    shared_user_id_count: number | null
    comment_count: number | null
  }

  export type PostsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    image_url: string | null
    shared_user_id_count: number | null
    comment_count: number | null
  }

  export type PostsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    image_url: string | null
    shared_user_id_count: number | null
    comment_count: number | null
  }

  export type PostsCountAggregateOutputType = {
    id: number
    user_id: number
    react_count: number
    content: number
    created_date: number
    image_url: number
    shared_user_id_count: number
    comment_count: number
    _all: number
  }


  export type PostsAvgAggregateInputType = {
    react_count?: true
    shared_user_id_count?: true
    comment_count?: true
  }

  export type PostsSumAggregateInputType = {
    react_count?: true
    shared_user_id_count?: true
    comment_count?: true
  }

  export type PostsMinAggregateInputType = {
    id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    image_url?: true
    shared_user_id_count?: true
    comment_count?: true
  }

  export type PostsMaxAggregateInputType = {
    id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    image_url?: true
    shared_user_id_count?: true
    comment_count?: true
  }

  export type PostsCountAggregateInputType = {
    id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    image_url?: true
    shared_user_id_count?: true
    comment_count?: true
    _all?: true
  }

  export type PostsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to aggregate.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned posts
    **/
    _count?: true | PostsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostsMaxAggregateInputType
  }

  export type GetPostsAggregateType<T extends PostsAggregateArgs> = {
        [P in keyof T & keyof AggregatePosts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePosts[P]>
      : GetScalarType<T[P], AggregatePosts[P]>
  }




  export type postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postsWhereInput
    orderBy?: postsOrderByWithAggregationInput | postsOrderByWithAggregationInput[]
    by: PostsScalarFieldEnum[] | PostsScalarFieldEnum
    having?: postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostsCountAggregateInputType | true
    _avg?: PostsAvgAggregateInputType
    _sum?: PostsSumAggregateInputType
    _min?: PostsMinAggregateInputType
    _max?: PostsMaxAggregateInputType
  }

  export type PostsGroupByOutputType = {
    id: string
    user_id: string
    react_count: number | null
    content: string | null
    created_date: Date | null
    image_url: string | null
    shared_user_id_count: number | null
    comment_count: number | null
    _count: PostsCountAggregateOutputType | null
    _avg: PostsAvgAggregateOutputType | null
    _sum: PostsSumAggregateOutputType | null
    _min: PostsMinAggregateOutputType | null
    _max: PostsMaxAggregateOutputType | null
  }

  type GetPostsGroupByPayload<T extends postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostsGroupByOutputType[P]>
            : GetScalarType<T[P], PostsGroupByOutputType[P]>
        }
      >
    >


  export type postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    image_url?: boolean
    shared_user_id_count?: boolean
    comment_count?: boolean
    comments?: boolean | posts$commentsArgs<ExtArgs>
    comments_group?: boolean | posts$comments_groupArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    react_posts?: boolean | posts$react_postsArgs<ExtArgs>
    shared_post?: boolean | posts$shared_postArgs<ExtArgs>
    _count?: boolean | PostsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["posts"]>

  export type postsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    image_url?: boolean
    shared_user_id_count?: boolean
    comment_count?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["posts"]>

  export type postsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    image_url?: boolean
    shared_user_id_count?: boolean
    comment_count?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["posts"]>

  export type postsSelectScalar = {
    id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    image_url?: boolean
    shared_user_id_count?: boolean
    comment_count?: boolean
  }

  export type postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "react_count" | "content" | "created_date" | "image_url" | "shared_user_id_count" | "comment_count", ExtArgs["result"]["posts"]>
  export type postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | posts$commentsArgs<ExtArgs>
    comments_group?: boolean | posts$comments_groupArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    react_posts?: boolean | posts$react_postsArgs<ExtArgs>
    shared_post?: boolean | posts$shared_postArgs<ExtArgs>
    _count?: boolean | PostsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type postsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type postsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "posts"
    objects: {
      comments: Prisma.$commentsPayload<ExtArgs>[]
      comments_group: Prisma.$comments_groupPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
      react_posts: Prisma.$react_postsPayload<ExtArgs>[]
      shared_post: Prisma.$shared_postPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      react_count: number | null
      content: string | null
      created_date: Date | null
      image_url: string | null
      shared_user_id_count: number | null
      comment_count: number | null
    }, ExtArgs["result"]["posts"]>
    composites: {}
  }

  type postsGetPayload<S extends boolean | null | undefined | postsDefaultArgs> = $Result.GetResult<Prisma.$postsPayload, S>

  type postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostsCountAggregateInputType | true
    }

  export interface postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['posts'], meta: { name: 'posts' } }
    /**
     * Find zero or one Posts that matches the filter.
     * @param {postsFindUniqueArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends postsFindUniqueArgs>(args: SelectSubset<T, postsFindUniqueArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {postsFindUniqueOrThrowArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends postsFindUniqueOrThrowArgs>(args: SelectSubset<T, postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindFirstArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends postsFindFirstArgs>(args?: SelectSubset<T, postsFindFirstArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindFirstOrThrowArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends postsFindFirstOrThrowArgs>(args?: SelectSubset<T, postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.posts.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.posts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postsWithIdOnly = await prisma.posts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends postsFindManyArgs>(args?: SelectSubset<T, postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Posts.
     * @param {postsCreateArgs} args - Arguments to create a Posts.
     * @example
     * // Create one Posts
     * const Posts = await prisma.posts.create({
     *   data: {
     *     // ... data to create a Posts
     *   }
     * })
     * 
     */
    create<T extends postsCreateArgs>(args: SelectSubset<T, postsCreateArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {postsCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const posts = await prisma.posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends postsCreateManyArgs>(args?: SelectSubset<T, postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {postsCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const posts = await prisma.posts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `id`
     * const postsWithIdOnly = await prisma.posts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends postsCreateManyAndReturnArgs>(args?: SelectSubset<T, postsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Posts.
     * @param {postsDeleteArgs} args - Arguments to delete one Posts.
     * @example
     * // Delete one Posts
     * const Posts = await prisma.posts.delete({
     *   where: {
     *     // ... filter to delete one Posts
     *   }
     * })
     * 
     */
    delete<T extends postsDeleteArgs>(args: SelectSubset<T, postsDeleteArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Posts.
     * @param {postsUpdateArgs} args - Arguments to update one Posts.
     * @example
     * // Update one Posts
     * const posts = await prisma.posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends postsUpdateArgs>(args: SelectSubset<T, postsUpdateArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {postsDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends postsDeleteManyArgs>(args?: SelectSubset<T, postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const posts = await prisma.posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends postsUpdateManyArgs>(args: SelectSubset<T, postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts and returns the data updated in the database.
     * @param {postsUpdateManyAndReturnArgs} args - Arguments to update many Posts.
     * @example
     * // Update many Posts
     * const posts = await prisma.posts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Posts and only return the `id`
     * const postsWithIdOnly = await prisma.posts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends postsUpdateManyAndReturnArgs>(args: SelectSubset<T, postsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Posts.
     * @param {postsUpsertArgs} args - Arguments to update or create a Posts.
     * @example
     * // Update or create a Posts
     * const posts = await prisma.posts.upsert({
     *   create: {
     *     // ... data to create a Posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Posts we want to update
     *   }
     * })
     */
    upsert<T extends postsUpsertArgs>(args: SelectSubset<T, postsUpsertArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.posts.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends postsCountArgs>(
      args?: Subset<T, postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostsAggregateArgs>(args: Subset<T, PostsAggregateArgs>): Prisma.PrismaPromise<GetPostsAggregateType<T>>

    /**
     * Group by Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: postsGroupByArgs['orderBy'] }
        : { orderBy?: postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the posts model
   */
  readonly fields: postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comments<T extends posts$commentsArgs<ExtArgs> = {}>(args?: Subset<T, posts$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments_group<T extends posts$comments_groupArgs<ExtArgs> = {}>(args?: Subset<T, posts$comments_groupArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    react_posts<T extends posts$react_postsArgs<ExtArgs> = {}>(args?: Subset<T, posts$react_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shared_post<T extends posts$shared_postArgs<ExtArgs> = {}>(args?: Subset<T, posts$shared_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the posts model
   */
  interface postsFieldRefs {
    readonly id: FieldRef<"posts", 'String'>
    readonly user_id: FieldRef<"posts", 'String'>
    readonly react_count: FieldRef<"posts", 'Int'>
    readonly content: FieldRef<"posts", 'String'>
    readonly created_date: FieldRef<"posts", 'DateTime'>
    readonly image_url: FieldRef<"posts", 'String'>
    readonly shared_user_id_count: FieldRef<"posts", 'Int'>
    readonly comment_count: FieldRef<"posts", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * posts findUnique
   */
  export type postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts findUniqueOrThrow
   */
  export type postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts findFirst
   */
  export type postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts findFirstOrThrow
   */
  export type postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts findMany
   */
  export type postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts create
   */
  export type postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The data needed to create a posts.
     */
    data: XOR<postsCreateInput, postsUncheckedCreateInput>
  }

  /**
   * posts createMany
   */
  export type postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many posts.
     */
    data: postsCreateManyInput | postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * posts createManyAndReturn
   */
  export type postsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * The data used to create many posts.
     */
    data: postsCreateManyInput | postsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * posts update
   */
  export type postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The data needed to update a posts.
     */
    data: XOR<postsUpdateInput, postsUncheckedUpdateInput>
    /**
     * Choose, which posts to update.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts updateMany
   */
  export type postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update posts.
     */
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postsWhereInput
    /**
     * Limit how many posts to update.
     */
    limit?: number
  }

  /**
   * posts updateManyAndReturn
   */
  export type postsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * The data used to update posts.
     */
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postsWhereInput
    /**
     * Limit how many posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * posts upsert
   */
  export type postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The filter to search for the posts to update in case it exists.
     */
    where: postsWhereUniqueInput
    /**
     * In case the posts found by the `where` argument doesn't exist, create a new posts with this data.
     */
    create: XOR<postsCreateInput, postsUncheckedCreateInput>
    /**
     * In case the posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<postsUpdateInput, postsUncheckedUpdateInput>
  }

  /**
   * posts delete
   */
  export type postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter which posts to delete.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts deleteMany
   */
  export type postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to delete
     */
    where?: postsWhereInput
    /**
     * Limit how many posts to delete.
     */
    limit?: number
  }

  /**
   * posts.comments
   */
  export type posts$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    where?: commentsWhereInput
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    cursor?: commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }

  /**
   * posts.comments_group
   */
  export type posts$comments_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    where?: comments_groupWhereInput
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    cursor?: comments_groupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Comments_groupScalarFieldEnum | Comments_groupScalarFieldEnum[]
  }

  /**
   * posts.react_posts
   */
  export type posts$react_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    where?: react_postsWhereInput
    orderBy?: react_postsOrderByWithRelationInput | react_postsOrderByWithRelationInput[]
    cursor?: react_postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: React_postsScalarFieldEnum | React_postsScalarFieldEnum[]
  }

  /**
   * posts.shared_post
   */
  export type posts$shared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    where?: shared_postWhereInput
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    cursor?: shared_postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Shared_postScalarFieldEnum | Shared_postScalarFieldEnum[]
  }

  /**
   * posts without action
   */
  export type postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
  }


  /**
   * Model react_comments
   */

  export type AggregateReact_comments = {
    _count: React_commentsCountAggregateOutputType | null
    _min: React_commentsMinAggregateOutputType | null
    _max: React_commentsMaxAggregateOutputType | null
  }

  export type React_commentsMinAggregateOutputType = {
    id: string | null
    comment_id: string | null
    user_id: string | null
    created_date: Date | null
  }

  export type React_commentsMaxAggregateOutputType = {
    id: string | null
    comment_id: string | null
    user_id: string | null
    created_date: Date | null
  }

  export type React_commentsCountAggregateOutputType = {
    id: number
    comment_id: number
    user_id: number
    created_date: number
    _all: number
  }


  export type React_commentsMinAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
    created_date?: true
  }

  export type React_commentsMaxAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
    created_date?: true
  }

  export type React_commentsCountAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
    created_date?: true
    _all?: true
  }

  export type React_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which react_comments to aggregate.
     */
    where?: react_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_comments to fetch.
     */
    orderBy?: react_commentsOrderByWithRelationInput | react_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: react_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned react_comments
    **/
    _count?: true | React_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: React_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: React_commentsMaxAggregateInputType
  }

  export type GetReact_commentsAggregateType<T extends React_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateReact_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReact_comments[P]>
      : GetScalarType<T[P], AggregateReact_comments[P]>
  }




  export type react_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: react_commentsWhereInput
    orderBy?: react_commentsOrderByWithAggregationInput | react_commentsOrderByWithAggregationInput[]
    by: React_commentsScalarFieldEnum[] | React_commentsScalarFieldEnum
    having?: react_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: React_commentsCountAggregateInputType | true
    _min?: React_commentsMinAggregateInputType
    _max?: React_commentsMaxAggregateInputType
  }

  export type React_commentsGroupByOutputType = {
    id: string
    comment_id: string
    user_id: string
    created_date: Date
    _count: React_commentsCountAggregateOutputType | null
    _min: React_commentsMinAggregateOutputType | null
    _max: React_commentsMaxAggregateOutputType | null
  }

  type GetReact_commentsGroupByPayload<T extends react_commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<React_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof React_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], React_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], React_commentsGroupByOutputType[P]>
        }
      >
    >


  export type react_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comment_id?: boolean
    user_id?: boolean
    created_date?: boolean
    comments?: boolean | commentsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["react_comments"]>

  export type react_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comment_id?: boolean
    user_id?: boolean
    created_date?: boolean
    comments?: boolean | commentsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["react_comments"]>

  export type react_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comment_id?: boolean
    user_id?: boolean
    created_date?: boolean
    comments?: boolean | commentsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["react_comments"]>

  export type react_commentsSelectScalar = {
    id?: boolean
    comment_id?: boolean
    user_id?: boolean
    created_date?: boolean
  }

  export type react_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "comment_id" | "user_id" | "created_date", ExtArgs["result"]["react_comments"]>
  export type react_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | commentsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type react_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | commentsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type react_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | commentsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $react_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "react_comments"
    objects: {
      comments: Prisma.$commentsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      comment_id: string
      user_id: string
      created_date: Date
    }, ExtArgs["result"]["react_comments"]>
    composites: {}
  }

  type react_commentsGetPayload<S extends boolean | null | undefined | react_commentsDefaultArgs> = $Result.GetResult<Prisma.$react_commentsPayload, S>

  type react_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<react_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: React_commentsCountAggregateInputType | true
    }

  export interface react_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['react_comments'], meta: { name: 'react_comments' } }
    /**
     * Find zero or one React_comments that matches the filter.
     * @param {react_commentsFindUniqueArgs} args - Arguments to find a React_comments
     * @example
     * // Get one React_comments
     * const react_comments = await prisma.react_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends react_commentsFindUniqueArgs>(args: SelectSubset<T, react_commentsFindUniqueArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one React_comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {react_commentsFindUniqueOrThrowArgs} args - Arguments to find a React_comments
     * @example
     * // Get one React_comments
     * const react_comments = await prisma.react_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends react_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, react_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first React_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_commentsFindFirstArgs} args - Arguments to find a React_comments
     * @example
     * // Get one React_comments
     * const react_comments = await prisma.react_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends react_commentsFindFirstArgs>(args?: SelectSubset<T, react_commentsFindFirstArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first React_comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_commentsFindFirstOrThrowArgs} args - Arguments to find a React_comments
     * @example
     * // Get one React_comments
     * const react_comments = await prisma.react_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends react_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, react_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more React_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all React_comments
     * const react_comments = await prisma.react_comments.findMany()
     * 
     * // Get first 10 React_comments
     * const react_comments = await prisma.react_comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const react_commentsWithIdOnly = await prisma.react_comments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends react_commentsFindManyArgs>(args?: SelectSubset<T, react_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a React_comments.
     * @param {react_commentsCreateArgs} args - Arguments to create a React_comments.
     * @example
     * // Create one React_comments
     * const React_comments = await prisma.react_comments.create({
     *   data: {
     *     // ... data to create a React_comments
     *   }
     * })
     * 
     */
    create<T extends react_commentsCreateArgs>(args: SelectSubset<T, react_commentsCreateArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many React_comments.
     * @param {react_commentsCreateManyArgs} args - Arguments to create many React_comments.
     * @example
     * // Create many React_comments
     * const react_comments = await prisma.react_comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends react_commentsCreateManyArgs>(args?: SelectSubset<T, react_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many React_comments and returns the data saved in the database.
     * @param {react_commentsCreateManyAndReturnArgs} args - Arguments to create many React_comments.
     * @example
     * // Create many React_comments
     * const react_comments = await prisma.react_comments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many React_comments and only return the `id`
     * const react_commentsWithIdOnly = await prisma.react_comments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends react_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, react_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a React_comments.
     * @param {react_commentsDeleteArgs} args - Arguments to delete one React_comments.
     * @example
     * // Delete one React_comments
     * const React_comments = await prisma.react_comments.delete({
     *   where: {
     *     // ... filter to delete one React_comments
     *   }
     * })
     * 
     */
    delete<T extends react_commentsDeleteArgs>(args: SelectSubset<T, react_commentsDeleteArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one React_comments.
     * @param {react_commentsUpdateArgs} args - Arguments to update one React_comments.
     * @example
     * // Update one React_comments
     * const react_comments = await prisma.react_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends react_commentsUpdateArgs>(args: SelectSubset<T, react_commentsUpdateArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more React_comments.
     * @param {react_commentsDeleteManyArgs} args - Arguments to filter React_comments to delete.
     * @example
     * // Delete a few React_comments
     * const { count } = await prisma.react_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends react_commentsDeleteManyArgs>(args?: SelectSubset<T, react_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more React_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many React_comments
     * const react_comments = await prisma.react_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends react_commentsUpdateManyArgs>(args: SelectSubset<T, react_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more React_comments and returns the data updated in the database.
     * @param {react_commentsUpdateManyAndReturnArgs} args - Arguments to update many React_comments.
     * @example
     * // Update many React_comments
     * const react_comments = await prisma.react_comments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more React_comments and only return the `id`
     * const react_commentsWithIdOnly = await prisma.react_comments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends react_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, react_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one React_comments.
     * @param {react_commentsUpsertArgs} args - Arguments to update or create a React_comments.
     * @example
     * // Update or create a React_comments
     * const react_comments = await prisma.react_comments.upsert({
     *   create: {
     *     // ... data to create a React_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the React_comments we want to update
     *   }
     * })
     */
    upsert<T extends react_commentsUpsertArgs>(args: SelectSubset<T, react_commentsUpsertArgs<ExtArgs>>): Prisma__react_commentsClient<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of React_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_commentsCountArgs} args - Arguments to filter React_comments to count.
     * @example
     * // Count the number of React_comments
     * const count = await prisma.react_comments.count({
     *   where: {
     *     // ... the filter for the React_comments we want to count
     *   }
     * })
    **/
    count<T extends react_commentsCountArgs>(
      args?: Subset<T, react_commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], React_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a React_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {React_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends React_commentsAggregateArgs>(args: Subset<T, React_commentsAggregateArgs>): Prisma.PrismaPromise<GetReact_commentsAggregateType<T>>

    /**
     * Group by React_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends react_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: react_commentsGroupByArgs['orderBy'] }
        : { orderBy?: react_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, react_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReact_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the react_comments model
   */
  readonly fields: react_commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for react_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__react_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comments<T extends commentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, commentsDefaultArgs<ExtArgs>>): Prisma__commentsClient<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the react_comments model
   */
  interface react_commentsFieldRefs {
    readonly id: FieldRef<"react_comments", 'String'>
    readonly comment_id: FieldRef<"react_comments", 'String'>
    readonly user_id: FieldRef<"react_comments", 'String'>
    readonly created_date: FieldRef<"react_comments", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * react_comments findUnique
   */
  export type react_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * Filter, which react_comments to fetch.
     */
    where: react_commentsWhereUniqueInput
  }

  /**
   * react_comments findUniqueOrThrow
   */
  export type react_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * Filter, which react_comments to fetch.
     */
    where: react_commentsWhereUniqueInput
  }

  /**
   * react_comments findFirst
   */
  export type react_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * Filter, which react_comments to fetch.
     */
    where?: react_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_comments to fetch.
     */
    orderBy?: react_commentsOrderByWithRelationInput | react_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for react_comments.
     */
    cursor?: react_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of react_comments.
     */
    distinct?: React_commentsScalarFieldEnum | React_commentsScalarFieldEnum[]
  }

  /**
   * react_comments findFirstOrThrow
   */
  export type react_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * Filter, which react_comments to fetch.
     */
    where?: react_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_comments to fetch.
     */
    orderBy?: react_commentsOrderByWithRelationInput | react_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for react_comments.
     */
    cursor?: react_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of react_comments.
     */
    distinct?: React_commentsScalarFieldEnum | React_commentsScalarFieldEnum[]
  }

  /**
   * react_comments findMany
   */
  export type react_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * Filter, which react_comments to fetch.
     */
    where?: react_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_comments to fetch.
     */
    orderBy?: react_commentsOrderByWithRelationInput | react_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing react_comments.
     */
    cursor?: react_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_comments.
     */
    skip?: number
    distinct?: React_commentsScalarFieldEnum | React_commentsScalarFieldEnum[]
  }

  /**
   * react_comments create
   */
  export type react_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * The data needed to create a react_comments.
     */
    data: XOR<react_commentsCreateInput, react_commentsUncheckedCreateInput>
  }

  /**
   * react_comments createMany
   */
  export type react_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many react_comments.
     */
    data: react_commentsCreateManyInput | react_commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * react_comments createManyAndReturn
   */
  export type react_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * The data used to create many react_comments.
     */
    data: react_commentsCreateManyInput | react_commentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * react_comments update
   */
  export type react_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * The data needed to update a react_comments.
     */
    data: XOR<react_commentsUpdateInput, react_commentsUncheckedUpdateInput>
    /**
     * Choose, which react_comments to update.
     */
    where: react_commentsWhereUniqueInput
  }

  /**
   * react_comments updateMany
   */
  export type react_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update react_comments.
     */
    data: XOR<react_commentsUpdateManyMutationInput, react_commentsUncheckedUpdateManyInput>
    /**
     * Filter which react_comments to update
     */
    where?: react_commentsWhereInput
    /**
     * Limit how many react_comments to update.
     */
    limit?: number
  }

  /**
   * react_comments updateManyAndReturn
   */
  export type react_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * The data used to update react_comments.
     */
    data: XOR<react_commentsUpdateManyMutationInput, react_commentsUncheckedUpdateManyInput>
    /**
     * Filter which react_comments to update
     */
    where?: react_commentsWhereInput
    /**
     * Limit how many react_comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * react_comments upsert
   */
  export type react_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * The filter to search for the react_comments to update in case it exists.
     */
    where: react_commentsWhereUniqueInput
    /**
     * In case the react_comments found by the `where` argument doesn't exist, create a new react_comments with this data.
     */
    create: XOR<react_commentsCreateInput, react_commentsUncheckedCreateInput>
    /**
     * In case the react_comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<react_commentsUpdateInput, react_commentsUncheckedUpdateInput>
  }

  /**
   * react_comments delete
   */
  export type react_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    /**
     * Filter which react_comments to delete.
     */
    where: react_commentsWhereUniqueInput
  }

  /**
   * react_comments deleteMany
   */
  export type react_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which react_comments to delete
     */
    where?: react_commentsWhereInput
    /**
     * Limit how many react_comments to delete.
     */
    limit?: number
  }

  /**
   * react_comments without action
   */
  export type react_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
  }


  /**
   * Model react_posts
   */

  export type AggregateReact_posts = {
    _count: React_postsCountAggregateOutputType | null
    _min: React_postsMinAggregateOutputType | null
    _max: React_postsMaxAggregateOutputType | null
  }

  export type React_postsMinAggregateOutputType = {
    id: string | null
    post_id: string | null
    user_id: string | null
    created_date: Date | null
  }

  export type React_postsMaxAggregateOutputType = {
    id: string | null
    post_id: string | null
    user_id: string | null
    created_date: Date | null
  }

  export type React_postsCountAggregateOutputType = {
    id: number
    post_id: number
    user_id: number
    created_date: number
    _all: number
  }


  export type React_postsMinAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    created_date?: true
  }

  export type React_postsMaxAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    created_date?: true
  }

  export type React_postsCountAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    created_date?: true
    _all?: true
  }

  export type React_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which react_posts to aggregate.
     */
    where?: react_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_posts to fetch.
     */
    orderBy?: react_postsOrderByWithRelationInput | react_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: react_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned react_posts
    **/
    _count?: true | React_postsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: React_postsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: React_postsMaxAggregateInputType
  }

  export type GetReact_postsAggregateType<T extends React_postsAggregateArgs> = {
        [P in keyof T & keyof AggregateReact_posts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReact_posts[P]>
      : GetScalarType<T[P], AggregateReact_posts[P]>
  }




  export type react_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: react_postsWhereInput
    orderBy?: react_postsOrderByWithAggregationInput | react_postsOrderByWithAggregationInput[]
    by: React_postsScalarFieldEnum[] | React_postsScalarFieldEnum
    having?: react_postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: React_postsCountAggregateInputType | true
    _min?: React_postsMinAggregateInputType
    _max?: React_postsMaxAggregateInputType
  }

  export type React_postsGroupByOutputType = {
    id: string
    post_id: string
    user_id: string
    created_date: Date | null
    _count: React_postsCountAggregateOutputType | null
    _min: React_postsMinAggregateOutputType | null
    _max: React_postsMaxAggregateOutputType | null
  }

  type GetReact_postsGroupByPayload<T extends react_postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<React_postsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof React_postsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], React_postsGroupByOutputType[P]>
            : GetScalarType<T[P], React_postsGroupByOutputType[P]>
        }
      >
    >


  export type react_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    created_date?: boolean
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["react_posts"]>

  export type react_postsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    created_date?: boolean
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["react_posts"]>

  export type react_postsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    created_date?: boolean
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["react_posts"]>

  export type react_postsSelectScalar = {
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    created_date?: boolean
  }

  export type react_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "user_id" | "created_date", ExtArgs["result"]["react_posts"]>
  export type react_postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type react_postsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type react_postsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | postsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $react_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "react_posts"
    objects: {
      posts: Prisma.$postsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      post_id: string
      user_id: string
      created_date: Date | null
    }, ExtArgs["result"]["react_posts"]>
    composites: {}
  }

  type react_postsGetPayload<S extends boolean | null | undefined | react_postsDefaultArgs> = $Result.GetResult<Prisma.$react_postsPayload, S>

  type react_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<react_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: React_postsCountAggregateInputType | true
    }

  export interface react_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['react_posts'], meta: { name: 'react_posts' } }
    /**
     * Find zero or one React_posts that matches the filter.
     * @param {react_postsFindUniqueArgs} args - Arguments to find a React_posts
     * @example
     * // Get one React_posts
     * const react_posts = await prisma.react_posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends react_postsFindUniqueArgs>(args: SelectSubset<T, react_postsFindUniqueArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one React_posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {react_postsFindUniqueOrThrowArgs} args - Arguments to find a React_posts
     * @example
     * // Get one React_posts
     * const react_posts = await prisma.react_posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends react_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, react_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first React_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_postsFindFirstArgs} args - Arguments to find a React_posts
     * @example
     * // Get one React_posts
     * const react_posts = await prisma.react_posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends react_postsFindFirstArgs>(args?: SelectSubset<T, react_postsFindFirstArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first React_posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_postsFindFirstOrThrowArgs} args - Arguments to find a React_posts
     * @example
     * // Get one React_posts
     * const react_posts = await prisma.react_posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends react_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, react_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more React_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all React_posts
     * const react_posts = await prisma.react_posts.findMany()
     * 
     * // Get first 10 React_posts
     * const react_posts = await prisma.react_posts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const react_postsWithIdOnly = await prisma.react_posts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends react_postsFindManyArgs>(args?: SelectSubset<T, react_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a React_posts.
     * @param {react_postsCreateArgs} args - Arguments to create a React_posts.
     * @example
     * // Create one React_posts
     * const React_posts = await prisma.react_posts.create({
     *   data: {
     *     // ... data to create a React_posts
     *   }
     * })
     * 
     */
    create<T extends react_postsCreateArgs>(args: SelectSubset<T, react_postsCreateArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many React_posts.
     * @param {react_postsCreateManyArgs} args - Arguments to create many React_posts.
     * @example
     * // Create many React_posts
     * const react_posts = await prisma.react_posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends react_postsCreateManyArgs>(args?: SelectSubset<T, react_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many React_posts and returns the data saved in the database.
     * @param {react_postsCreateManyAndReturnArgs} args - Arguments to create many React_posts.
     * @example
     * // Create many React_posts
     * const react_posts = await prisma.react_posts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many React_posts and only return the `id`
     * const react_postsWithIdOnly = await prisma.react_posts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends react_postsCreateManyAndReturnArgs>(args?: SelectSubset<T, react_postsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a React_posts.
     * @param {react_postsDeleteArgs} args - Arguments to delete one React_posts.
     * @example
     * // Delete one React_posts
     * const React_posts = await prisma.react_posts.delete({
     *   where: {
     *     // ... filter to delete one React_posts
     *   }
     * })
     * 
     */
    delete<T extends react_postsDeleteArgs>(args: SelectSubset<T, react_postsDeleteArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one React_posts.
     * @param {react_postsUpdateArgs} args - Arguments to update one React_posts.
     * @example
     * // Update one React_posts
     * const react_posts = await prisma.react_posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends react_postsUpdateArgs>(args: SelectSubset<T, react_postsUpdateArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more React_posts.
     * @param {react_postsDeleteManyArgs} args - Arguments to filter React_posts to delete.
     * @example
     * // Delete a few React_posts
     * const { count } = await prisma.react_posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends react_postsDeleteManyArgs>(args?: SelectSubset<T, react_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more React_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many React_posts
     * const react_posts = await prisma.react_posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends react_postsUpdateManyArgs>(args: SelectSubset<T, react_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more React_posts and returns the data updated in the database.
     * @param {react_postsUpdateManyAndReturnArgs} args - Arguments to update many React_posts.
     * @example
     * // Update many React_posts
     * const react_posts = await prisma.react_posts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more React_posts and only return the `id`
     * const react_postsWithIdOnly = await prisma.react_posts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends react_postsUpdateManyAndReturnArgs>(args: SelectSubset<T, react_postsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one React_posts.
     * @param {react_postsUpsertArgs} args - Arguments to update or create a React_posts.
     * @example
     * // Update or create a React_posts
     * const react_posts = await prisma.react_posts.upsert({
     *   create: {
     *     // ... data to create a React_posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the React_posts we want to update
     *   }
     * })
     */
    upsert<T extends react_postsUpsertArgs>(args: SelectSubset<T, react_postsUpsertArgs<ExtArgs>>): Prisma__react_postsClient<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of React_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_postsCountArgs} args - Arguments to filter React_posts to count.
     * @example
     * // Count the number of React_posts
     * const count = await prisma.react_posts.count({
     *   where: {
     *     // ... the filter for the React_posts we want to count
     *   }
     * })
    **/
    count<T extends react_postsCountArgs>(
      args?: Subset<T, react_postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], React_postsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a React_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {React_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends React_postsAggregateArgs>(args: Subset<T, React_postsAggregateArgs>): Prisma.PrismaPromise<GetReact_postsAggregateType<T>>

    /**
     * Group by React_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {react_postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends react_postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: react_postsGroupByArgs['orderBy'] }
        : { orderBy?: react_postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, react_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReact_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the react_posts model
   */
  readonly fields: react_postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for react_posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__react_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postsDefaultArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the react_posts model
   */
  interface react_postsFieldRefs {
    readonly id: FieldRef<"react_posts", 'String'>
    readonly post_id: FieldRef<"react_posts", 'String'>
    readonly user_id: FieldRef<"react_posts", 'String'>
    readonly created_date: FieldRef<"react_posts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * react_posts findUnique
   */
  export type react_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * Filter, which react_posts to fetch.
     */
    where: react_postsWhereUniqueInput
  }

  /**
   * react_posts findUniqueOrThrow
   */
  export type react_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * Filter, which react_posts to fetch.
     */
    where: react_postsWhereUniqueInput
  }

  /**
   * react_posts findFirst
   */
  export type react_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * Filter, which react_posts to fetch.
     */
    where?: react_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_posts to fetch.
     */
    orderBy?: react_postsOrderByWithRelationInput | react_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for react_posts.
     */
    cursor?: react_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of react_posts.
     */
    distinct?: React_postsScalarFieldEnum | React_postsScalarFieldEnum[]
  }

  /**
   * react_posts findFirstOrThrow
   */
  export type react_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * Filter, which react_posts to fetch.
     */
    where?: react_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_posts to fetch.
     */
    orderBy?: react_postsOrderByWithRelationInput | react_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for react_posts.
     */
    cursor?: react_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of react_posts.
     */
    distinct?: React_postsScalarFieldEnum | React_postsScalarFieldEnum[]
  }

  /**
   * react_posts findMany
   */
  export type react_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * Filter, which react_posts to fetch.
     */
    where?: react_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of react_posts to fetch.
     */
    orderBy?: react_postsOrderByWithRelationInput | react_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing react_posts.
     */
    cursor?: react_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` react_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` react_posts.
     */
    skip?: number
    distinct?: React_postsScalarFieldEnum | React_postsScalarFieldEnum[]
  }

  /**
   * react_posts create
   */
  export type react_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * The data needed to create a react_posts.
     */
    data: XOR<react_postsCreateInput, react_postsUncheckedCreateInput>
  }

  /**
   * react_posts createMany
   */
  export type react_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many react_posts.
     */
    data: react_postsCreateManyInput | react_postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * react_posts createManyAndReturn
   */
  export type react_postsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * The data used to create many react_posts.
     */
    data: react_postsCreateManyInput | react_postsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * react_posts update
   */
  export type react_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * The data needed to update a react_posts.
     */
    data: XOR<react_postsUpdateInput, react_postsUncheckedUpdateInput>
    /**
     * Choose, which react_posts to update.
     */
    where: react_postsWhereUniqueInput
  }

  /**
   * react_posts updateMany
   */
  export type react_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update react_posts.
     */
    data: XOR<react_postsUpdateManyMutationInput, react_postsUncheckedUpdateManyInput>
    /**
     * Filter which react_posts to update
     */
    where?: react_postsWhereInput
    /**
     * Limit how many react_posts to update.
     */
    limit?: number
  }

  /**
   * react_posts updateManyAndReturn
   */
  export type react_postsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * The data used to update react_posts.
     */
    data: XOR<react_postsUpdateManyMutationInput, react_postsUncheckedUpdateManyInput>
    /**
     * Filter which react_posts to update
     */
    where?: react_postsWhereInput
    /**
     * Limit how many react_posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * react_posts upsert
   */
  export type react_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * The filter to search for the react_posts to update in case it exists.
     */
    where: react_postsWhereUniqueInput
    /**
     * In case the react_posts found by the `where` argument doesn't exist, create a new react_posts with this data.
     */
    create: XOR<react_postsCreateInput, react_postsUncheckedCreateInput>
    /**
     * In case the react_posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<react_postsUpdateInput, react_postsUncheckedUpdateInput>
  }

  /**
   * react_posts delete
   */
  export type react_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    /**
     * Filter which react_posts to delete.
     */
    where: react_postsWhereUniqueInput
  }

  /**
   * react_posts deleteMany
   */
  export type react_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which react_posts to delete
     */
    where?: react_postsWhereInput
    /**
     * Limit how many react_posts to delete.
     */
    limit?: number
  }

  /**
   * react_posts without action
   */
  export type react_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
  }


  /**
   * Model shared_post
   */

  export type AggregateShared_post = {
    _count: Shared_postCountAggregateOutputType | null
    _avg: Shared_postAvgAggregateOutputType | null
    _sum: Shared_postSumAggregateOutputType | null
    _min: Shared_postMinAggregateOutputType | null
    _max: Shared_postMaxAggregateOutputType | null
  }

  export type Shared_postAvgAggregateOutputType = {
    react_count: number | null
    comment_count: number | null
    shared_count: number | null
  }

  export type Shared_postSumAggregateOutputType = {
    react_count: number | null
    comment_count: number | null
    shared_count: number | null
  }

  export type Shared_postMinAggregateOutputType = {
    id: string | null
    post_id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    comment_count: number | null
    shared_post_id: string | null
    shared_count: number | null
  }

  export type Shared_postMaxAggregateOutputType = {
    id: string | null
    post_id: string | null
    user_id: string | null
    react_count: number | null
    content: string | null
    created_date: Date | null
    comment_count: number | null
    shared_post_id: string | null
    shared_count: number | null
  }

  export type Shared_postCountAggregateOutputType = {
    id: number
    post_id: number
    user_id: number
    react_count: number
    content: number
    created_date: number
    comment_count: number
    shared_post_id: number
    shared_count: number
    _all: number
  }


  export type Shared_postAvgAggregateInputType = {
    react_count?: true
    comment_count?: true
    shared_count?: true
  }

  export type Shared_postSumAggregateInputType = {
    react_count?: true
    comment_count?: true
    shared_count?: true
  }

  export type Shared_postMinAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    comment_count?: true
    shared_post_id?: true
    shared_count?: true
  }

  export type Shared_postMaxAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    comment_count?: true
    shared_post_id?: true
    shared_count?: true
  }

  export type Shared_postCountAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    react_count?: true
    content?: true
    created_date?: true
    comment_count?: true
    shared_post_id?: true
    shared_count?: true
    _all?: true
  }

  export type Shared_postAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which shared_post to aggregate.
     */
    where?: shared_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shared_posts to fetch.
     */
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: shared_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shared_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shared_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shared_posts
    **/
    _count?: true | Shared_postCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shared_postAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shared_postSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shared_postMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shared_postMaxAggregateInputType
  }

  export type GetShared_postAggregateType<T extends Shared_postAggregateArgs> = {
        [P in keyof T & keyof AggregateShared_post]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShared_post[P]>
      : GetScalarType<T[P], AggregateShared_post[P]>
  }




  export type shared_postGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shared_postWhereInput
    orderBy?: shared_postOrderByWithAggregationInput | shared_postOrderByWithAggregationInput[]
    by: Shared_postScalarFieldEnum[] | Shared_postScalarFieldEnum
    having?: shared_postScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shared_postCountAggregateInputType | true
    _avg?: Shared_postAvgAggregateInputType
    _sum?: Shared_postSumAggregateInputType
    _min?: Shared_postMinAggregateInputType
    _max?: Shared_postMaxAggregateInputType
  }

  export type Shared_postGroupByOutputType = {
    id: string
    post_id: string | null
    user_id: string
    react_count: number | null
    content: string | null
    created_date: Date | null
    comment_count: number | null
    shared_post_id: string | null
    shared_count: number | null
    _count: Shared_postCountAggregateOutputType | null
    _avg: Shared_postAvgAggregateOutputType | null
    _sum: Shared_postSumAggregateOutputType | null
    _min: Shared_postMinAggregateOutputType | null
    _max: Shared_postMaxAggregateOutputType | null
  }

  type GetShared_postGroupByPayload<T extends shared_postGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Shared_postGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shared_postGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shared_postGroupByOutputType[P]>
            : GetScalarType<T[P], Shared_postGroupByOutputType[P]>
        }
      >
    >


  export type shared_postSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    comment_count?: boolean
    shared_post_id?: boolean
    shared_count?: boolean
    comments?: boolean | shared_post$commentsArgs<ExtArgs>
    shared_post?: boolean | shared_post$shared_postArgs<ExtArgs>
    other_shared_post?: boolean | shared_post$other_shared_postArgs<ExtArgs>
    posts?: boolean | shared_post$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Shared_postCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shared_post"]>

  export type shared_postSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    comment_count?: boolean
    shared_post_id?: boolean
    shared_count?: boolean
    shared_post?: boolean | shared_post$shared_postArgs<ExtArgs>
    posts?: boolean | shared_post$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shared_post"]>

  export type shared_postSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    comment_count?: boolean
    shared_post_id?: boolean
    shared_count?: boolean
    shared_post?: boolean | shared_post$shared_postArgs<ExtArgs>
    posts?: boolean | shared_post$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shared_post"]>

  export type shared_postSelectScalar = {
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    react_count?: boolean
    content?: boolean
    created_date?: boolean
    comment_count?: boolean
    shared_post_id?: boolean
    shared_count?: boolean
  }

  export type shared_postOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "user_id" | "react_count" | "content" | "created_date" | "comment_count" | "shared_post_id" | "shared_count", ExtArgs["result"]["shared_post"]>
  export type shared_postInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | shared_post$commentsArgs<ExtArgs>
    shared_post?: boolean | shared_post$shared_postArgs<ExtArgs>
    other_shared_post?: boolean | shared_post$other_shared_postArgs<ExtArgs>
    posts?: boolean | shared_post$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Shared_postCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type shared_postIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shared_post?: boolean | shared_post$shared_postArgs<ExtArgs>
    posts?: boolean | shared_post$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type shared_postIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shared_post?: boolean | shared_post$shared_postArgs<ExtArgs>
    posts?: boolean | shared_post$postsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $shared_postPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "shared_post"
    objects: {
      comments: Prisma.$commentsPayload<ExtArgs>[]
      shared_post: Prisma.$shared_postPayload<ExtArgs> | null
      other_shared_post: Prisma.$shared_postPayload<ExtArgs>[]
      posts: Prisma.$postsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      post_id: string | null
      user_id: string
      react_count: number | null
      content: string | null
      created_date: Date | null
      comment_count: number | null
      shared_post_id: string | null
      shared_count: number | null
    }, ExtArgs["result"]["shared_post"]>
    composites: {}
  }

  type shared_postGetPayload<S extends boolean | null | undefined | shared_postDefaultArgs> = $Result.GetResult<Prisma.$shared_postPayload, S>

  type shared_postCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<shared_postFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Shared_postCountAggregateInputType | true
    }

  export interface shared_postDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['shared_post'], meta: { name: 'shared_post' } }
    /**
     * Find zero or one Shared_post that matches the filter.
     * @param {shared_postFindUniqueArgs} args - Arguments to find a Shared_post
     * @example
     * // Get one Shared_post
     * const shared_post = await prisma.shared_post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends shared_postFindUniqueArgs>(args: SelectSubset<T, shared_postFindUniqueArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Shared_post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {shared_postFindUniqueOrThrowArgs} args - Arguments to find a Shared_post
     * @example
     * // Get one Shared_post
     * const shared_post = await prisma.shared_post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends shared_postFindUniqueOrThrowArgs>(args: SelectSubset<T, shared_postFindUniqueOrThrowArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Shared_post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shared_postFindFirstArgs} args - Arguments to find a Shared_post
     * @example
     * // Get one Shared_post
     * const shared_post = await prisma.shared_post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends shared_postFindFirstArgs>(args?: SelectSubset<T, shared_postFindFirstArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Shared_post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shared_postFindFirstOrThrowArgs} args - Arguments to find a Shared_post
     * @example
     * // Get one Shared_post
     * const shared_post = await prisma.shared_post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends shared_postFindFirstOrThrowArgs>(args?: SelectSubset<T, shared_postFindFirstOrThrowArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Shared_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shared_postFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shared_posts
     * const shared_posts = await prisma.shared_post.findMany()
     * 
     * // Get first 10 Shared_posts
     * const shared_posts = await prisma.shared_post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shared_postWithIdOnly = await prisma.shared_post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends shared_postFindManyArgs>(args?: SelectSubset<T, shared_postFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Shared_post.
     * @param {shared_postCreateArgs} args - Arguments to create a Shared_post.
     * @example
     * // Create one Shared_post
     * const Shared_post = await prisma.shared_post.create({
     *   data: {
     *     // ... data to create a Shared_post
     *   }
     * })
     * 
     */
    create<T extends shared_postCreateArgs>(args: SelectSubset<T, shared_postCreateArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Shared_posts.
     * @param {shared_postCreateManyArgs} args - Arguments to create many Shared_posts.
     * @example
     * // Create many Shared_posts
     * const shared_post = await prisma.shared_post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends shared_postCreateManyArgs>(args?: SelectSubset<T, shared_postCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Shared_posts and returns the data saved in the database.
     * @param {shared_postCreateManyAndReturnArgs} args - Arguments to create many Shared_posts.
     * @example
     * // Create many Shared_posts
     * const shared_post = await prisma.shared_post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Shared_posts and only return the `id`
     * const shared_postWithIdOnly = await prisma.shared_post.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends shared_postCreateManyAndReturnArgs>(args?: SelectSubset<T, shared_postCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Shared_post.
     * @param {shared_postDeleteArgs} args - Arguments to delete one Shared_post.
     * @example
     * // Delete one Shared_post
     * const Shared_post = await prisma.shared_post.delete({
     *   where: {
     *     // ... filter to delete one Shared_post
     *   }
     * })
     * 
     */
    delete<T extends shared_postDeleteArgs>(args: SelectSubset<T, shared_postDeleteArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Shared_post.
     * @param {shared_postUpdateArgs} args - Arguments to update one Shared_post.
     * @example
     * // Update one Shared_post
     * const shared_post = await prisma.shared_post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends shared_postUpdateArgs>(args: SelectSubset<T, shared_postUpdateArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Shared_posts.
     * @param {shared_postDeleteManyArgs} args - Arguments to filter Shared_posts to delete.
     * @example
     * // Delete a few Shared_posts
     * const { count } = await prisma.shared_post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends shared_postDeleteManyArgs>(args?: SelectSubset<T, shared_postDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shared_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shared_postUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shared_posts
     * const shared_post = await prisma.shared_post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends shared_postUpdateManyArgs>(args: SelectSubset<T, shared_postUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shared_posts and returns the data updated in the database.
     * @param {shared_postUpdateManyAndReturnArgs} args - Arguments to update many Shared_posts.
     * @example
     * // Update many Shared_posts
     * const shared_post = await prisma.shared_post.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Shared_posts and only return the `id`
     * const shared_postWithIdOnly = await prisma.shared_post.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends shared_postUpdateManyAndReturnArgs>(args: SelectSubset<T, shared_postUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Shared_post.
     * @param {shared_postUpsertArgs} args - Arguments to update or create a Shared_post.
     * @example
     * // Update or create a Shared_post
     * const shared_post = await prisma.shared_post.upsert({
     *   create: {
     *     // ... data to create a Shared_post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shared_post we want to update
     *   }
     * })
     */
    upsert<T extends shared_postUpsertArgs>(args: SelectSubset<T, shared_postUpsertArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Shared_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shared_postCountArgs} args - Arguments to filter Shared_posts to count.
     * @example
     * // Count the number of Shared_posts
     * const count = await prisma.shared_post.count({
     *   where: {
     *     // ... the filter for the Shared_posts we want to count
     *   }
     * })
    **/
    count<T extends shared_postCountArgs>(
      args?: Subset<T, shared_postCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shared_postCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shared_post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shared_postAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shared_postAggregateArgs>(args: Subset<T, Shared_postAggregateArgs>): Prisma.PrismaPromise<GetShared_postAggregateType<T>>

    /**
     * Group by Shared_post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shared_postGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends shared_postGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: shared_postGroupByArgs['orderBy'] }
        : { orderBy?: shared_postGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, shared_postGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShared_postGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the shared_post model
   */
  readonly fields: shared_postFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for shared_post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__shared_postClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comments<T extends shared_post$commentsArgs<ExtArgs> = {}>(args?: Subset<T, shared_post$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shared_post<T extends shared_post$shared_postArgs<ExtArgs> = {}>(args?: Subset<T, shared_post$shared_postArgs<ExtArgs>>): Prisma__shared_postClient<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_shared_post<T extends shared_post$other_shared_postArgs<ExtArgs> = {}>(args?: Subset<T, shared_post$other_shared_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    posts<T extends shared_post$postsArgs<ExtArgs> = {}>(args?: Subset<T, shared_post$postsArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the shared_post model
   */
  interface shared_postFieldRefs {
    readonly id: FieldRef<"shared_post", 'String'>
    readonly post_id: FieldRef<"shared_post", 'String'>
    readonly user_id: FieldRef<"shared_post", 'String'>
    readonly react_count: FieldRef<"shared_post", 'Int'>
    readonly content: FieldRef<"shared_post", 'String'>
    readonly created_date: FieldRef<"shared_post", 'DateTime'>
    readonly comment_count: FieldRef<"shared_post", 'Int'>
    readonly shared_post_id: FieldRef<"shared_post", 'String'>
    readonly shared_count: FieldRef<"shared_post", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * shared_post findUnique
   */
  export type shared_postFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * Filter, which shared_post to fetch.
     */
    where: shared_postWhereUniqueInput
  }

  /**
   * shared_post findUniqueOrThrow
   */
  export type shared_postFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * Filter, which shared_post to fetch.
     */
    where: shared_postWhereUniqueInput
  }

  /**
   * shared_post findFirst
   */
  export type shared_postFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * Filter, which shared_post to fetch.
     */
    where?: shared_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shared_posts to fetch.
     */
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shared_posts.
     */
    cursor?: shared_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shared_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shared_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shared_posts.
     */
    distinct?: Shared_postScalarFieldEnum | Shared_postScalarFieldEnum[]
  }

  /**
   * shared_post findFirstOrThrow
   */
  export type shared_postFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * Filter, which shared_post to fetch.
     */
    where?: shared_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shared_posts to fetch.
     */
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shared_posts.
     */
    cursor?: shared_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shared_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shared_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shared_posts.
     */
    distinct?: Shared_postScalarFieldEnum | Shared_postScalarFieldEnum[]
  }

  /**
   * shared_post findMany
   */
  export type shared_postFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * Filter, which shared_posts to fetch.
     */
    where?: shared_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shared_posts to fetch.
     */
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shared_posts.
     */
    cursor?: shared_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shared_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shared_posts.
     */
    skip?: number
    distinct?: Shared_postScalarFieldEnum | Shared_postScalarFieldEnum[]
  }

  /**
   * shared_post create
   */
  export type shared_postCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * The data needed to create a shared_post.
     */
    data: XOR<shared_postCreateInput, shared_postUncheckedCreateInput>
  }

  /**
   * shared_post createMany
   */
  export type shared_postCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many shared_posts.
     */
    data: shared_postCreateManyInput | shared_postCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * shared_post createManyAndReturn
   */
  export type shared_postCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * The data used to create many shared_posts.
     */
    data: shared_postCreateManyInput | shared_postCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * shared_post update
   */
  export type shared_postUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * The data needed to update a shared_post.
     */
    data: XOR<shared_postUpdateInput, shared_postUncheckedUpdateInput>
    /**
     * Choose, which shared_post to update.
     */
    where: shared_postWhereUniqueInput
  }

  /**
   * shared_post updateMany
   */
  export type shared_postUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update shared_posts.
     */
    data: XOR<shared_postUpdateManyMutationInput, shared_postUncheckedUpdateManyInput>
    /**
     * Filter which shared_posts to update
     */
    where?: shared_postWhereInput
    /**
     * Limit how many shared_posts to update.
     */
    limit?: number
  }

  /**
   * shared_post updateManyAndReturn
   */
  export type shared_postUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * The data used to update shared_posts.
     */
    data: XOR<shared_postUpdateManyMutationInput, shared_postUncheckedUpdateManyInput>
    /**
     * Filter which shared_posts to update
     */
    where?: shared_postWhereInput
    /**
     * Limit how many shared_posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * shared_post upsert
   */
  export type shared_postUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * The filter to search for the shared_post to update in case it exists.
     */
    where: shared_postWhereUniqueInput
    /**
     * In case the shared_post found by the `where` argument doesn't exist, create a new shared_post with this data.
     */
    create: XOR<shared_postCreateInput, shared_postUncheckedCreateInput>
    /**
     * In case the shared_post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<shared_postUpdateInput, shared_postUncheckedUpdateInput>
  }

  /**
   * shared_post delete
   */
  export type shared_postDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    /**
     * Filter which shared_post to delete.
     */
    where: shared_postWhereUniqueInput
  }

  /**
   * shared_post deleteMany
   */
  export type shared_postDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which shared_posts to delete
     */
    where?: shared_postWhereInput
    /**
     * Limit how many shared_posts to delete.
     */
    limit?: number
  }

  /**
   * shared_post.comments
   */
  export type shared_post$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    where?: commentsWhereInput
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    cursor?: commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }

  /**
   * shared_post.shared_post
   */
  export type shared_post$shared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    where?: shared_postWhereInput
  }

  /**
   * shared_post.other_shared_post
   */
  export type shared_post$other_shared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    where?: shared_postWhereInput
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    cursor?: shared_postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Shared_postScalarFieldEnum | Shared_postScalarFieldEnum[]
  }

  /**
   * shared_post.posts
   */
  export type shared_post$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    where?: postsWhereInput
  }

  /**
   * shared_post without action
   */
  export type shared_postDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
  }


  /**
   * Model study_access_topic
   */

  export type AggregateStudy_access_topic = {
    _count: Study_access_topicCountAggregateOutputType | null
    _min: Study_access_topicMinAggregateOutputType | null
    _max: Study_access_topicMaxAggregateOutputType | null
  }

  export type Study_access_topicMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    topic_id: string | null
    access_type: string | null
    access_date: Date | null
    expire_date: Date | null
  }

  export type Study_access_topicMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    topic_id: string | null
    access_type: string | null
    access_date: Date | null
    expire_date: Date | null
  }

  export type Study_access_topicCountAggregateOutputType = {
    id: number
    user_id: number
    topic_id: number
    access_type: number
    access_date: number
    expire_date: number
    _all: number
  }


  export type Study_access_topicMinAggregateInputType = {
    id?: true
    user_id?: true
    topic_id?: true
    access_type?: true
    access_date?: true
    expire_date?: true
  }

  export type Study_access_topicMaxAggregateInputType = {
    id?: true
    user_id?: true
    topic_id?: true
    access_type?: true
    access_date?: true
    expire_date?: true
  }

  export type Study_access_topicCountAggregateInputType = {
    id?: true
    user_id?: true
    topic_id?: true
    access_type?: true
    access_date?: true
    expire_date?: true
    _all?: true
  }

  export type Study_access_topicAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which study_access_topic to aggregate.
     */
    where?: study_access_topicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of study_access_topics to fetch.
     */
    orderBy?: study_access_topicOrderByWithRelationInput | study_access_topicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: study_access_topicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` study_access_topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` study_access_topics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned study_access_topics
    **/
    _count?: true | Study_access_topicCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Study_access_topicMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Study_access_topicMaxAggregateInputType
  }

  export type GetStudy_access_topicAggregateType<T extends Study_access_topicAggregateArgs> = {
        [P in keyof T & keyof AggregateStudy_access_topic]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStudy_access_topic[P]>
      : GetScalarType<T[P], AggregateStudy_access_topic[P]>
  }




  export type study_access_topicGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: study_access_topicWhereInput
    orderBy?: study_access_topicOrderByWithAggregationInput | study_access_topicOrderByWithAggregationInput[]
    by: Study_access_topicScalarFieldEnum[] | Study_access_topicScalarFieldEnum
    having?: study_access_topicScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Study_access_topicCountAggregateInputType | true
    _min?: Study_access_topicMinAggregateInputType
    _max?: Study_access_topicMaxAggregateInputType
  }

  export type Study_access_topicGroupByOutputType = {
    id: string
    user_id: string
    topic_id: string
    access_type: string | null
    access_date: Date | null
    expire_date: Date
    _count: Study_access_topicCountAggregateOutputType | null
    _min: Study_access_topicMinAggregateOutputType | null
    _max: Study_access_topicMaxAggregateOutputType | null
  }

  type GetStudy_access_topicGroupByPayload<T extends study_access_topicGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Study_access_topicGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Study_access_topicGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Study_access_topicGroupByOutputType[P]>
            : GetScalarType<T[P], Study_access_topicGroupByOutputType[P]>
        }
      >
    >


  export type study_access_topicSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    topic_id?: boolean
    access_type?: boolean
    access_date?: boolean
    expire_date?: boolean
    topics?: boolean | topicsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["study_access_topic"]>

  export type study_access_topicSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    topic_id?: boolean
    access_type?: boolean
    access_date?: boolean
    expire_date?: boolean
    topics?: boolean | topicsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["study_access_topic"]>

  export type study_access_topicSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    topic_id?: boolean
    access_type?: boolean
    access_date?: boolean
    expire_date?: boolean
    topics?: boolean | topicsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["study_access_topic"]>

  export type study_access_topicSelectScalar = {
    id?: boolean
    user_id?: boolean
    topic_id?: boolean
    access_type?: boolean
    access_date?: boolean
    expire_date?: boolean
  }

  export type study_access_topicOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "topic_id" | "access_type" | "access_date" | "expire_date", ExtArgs["result"]["study_access_topic"]>
  export type study_access_topicInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    topics?: boolean | topicsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type study_access_topicIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    topics?: boolean | topicsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type study_access_topicIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    topics?: boolean | topicsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $study_access_topicPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "study_access_topic"
    objects: {
      topics: Prisma.$topicsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      topic_id: string
      access_type: string | null
      access_date: Date | null
      expire_date: Date
    }, ExtArgs["result"]["study_access_topic"]>
    composites: {}
  }

  type study_access_topicGetPayload<S extends boolean | null | undefined | study_access_topicDefaultArgs> = $Result.GetResult<Prisma.$study_access_topicPayload, S>

  type study_access_topicCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<study_access_topicFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Study_access_topicCountAggregateInputType | true
    }

  export interface study_access_topicDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_access_topic'], meta: { name: 'study_access_topic' } }
    /**
     * Find zero or one Study_access_topic that matches the filter.
     * @param {study_access_topicFindUniqueArgs} args - Arguments to find a Study_access_topic
     * @example
     * // Get one Study_access_topic
     * const study_access_topic = await prisma.study_access_topic.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends study_access_topicFindUniqueArgs>(args: SelectSubset<T, study_access_topicFindUniqueArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Study_access_topic that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {study_access_topicFindUniqueOrThrowArgs} args - Arguments to find a Study_access_topic
     * @example
     * // Get one Study_access_topic
     * const study_access_topic = await prisma.study_access_topic.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends study_access_topicFindUniqueOrThrowArgs>(args: SelectSubset<T, study_access_topicFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Study_access_topic that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {study_access_topicFindFirstArgs} args - Arguments to find a Study_access_topic
     * @example
     * // Get one Study_access_topic
     * const study_access_topic = await prisma.study_access_topic.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends study_access_topicFindFirstArgs>(args?: SelectSubset<T, study_access_topicFindFirstArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Study_access_topic that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {study_access_topicFindFirstOrThrowArgs} args - Arguments to find a Study_access_topic
     * @example
     * // Get one Study_access_topic
     * const study_access_topic = await prisma.study_access_topic.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends study_access_topicFindFirstOrThrowArgs>(args?: SelectSubset<T, study_access_topicFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Study_access_topics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {study_access_topicFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Study_access_topics
     * const study_access_topics = await prisma.study_access_topic.findMany()
     * 
     * // Get first 10 Study_access_topics
     * const study_access_topics = await prisma.study_access_topic.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const study_access_topicWithIdOnly = await prisma.study_access_topic.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends study_access_topicFindManyArgs>(args?: SelectSubset<T, study_access_topicFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Study_access_topic.
     * @param {study_access_topicCreateArgs} args - Arguments to create a Study_access_topic.
     * @example
     * // Create one Study_access_topic
     * const Study_access_topic = await prisma.study_access_topic.create({
     *   data: {
     *     // ... data to create a Study_access_topic
     *   }
     * })
     * 
     */
    create<T extends study_access_topicCreateArgs>(args: SelectSubset<T, study_access_topicCreateArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Study_access_topics.
     * @param {study_access_topicCreateManyArgs} args - Arguments to create many Study_access_topics.
     * @example
     * // Create many Study_access_topics
     * const study_access_topic = await prisma.study_access_topic.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends study_access_topicCreateManyArgs>(args?: SelectSubset<T, study_access_topicCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Study_access_topics and returns the data saved in the database.
     * @param {study_access_topicCreateManyAndReturnArgs} args - Arguments to create many Study_access_topics.
     * @example
     * // Create many Study_access_topics
     * const study_access_topic = await prisma.study_access_topic.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Study_access_topics and only return the `id`
     * const study_access_topicWithIdOnly = await prisma.study_access_topic.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends study_access_topicCreateManyAndReturnArgs>(args?: SelectSubset<T, study_access_topicCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Study_access_topic.
     * @param {study_access_topicDeleteArgs} args - Arguments to delete one Study_access_topic.
     * @example
     * // Delete one Study_access_topic
     * const Study_access_topic = await prisma.study_access_topic.delete({
     *   where: {
     *     // ... filter to delete one Study_access_topic
     *   }
     * })
     * 
     */
    delete<T extends study_access_topicDeleteArgs>(args: SelectSubset<T, study_access_topicDeleteArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Study_access_topic.
     * @param {study_access_topicUpdateArgs} args - Arguments to update one Study_access_topic.
     * @example
     * // Update one Study_access_topic
     * const study_access_topic = await prisma.study_access_topic.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends study_access_topicUpdateArgs>(args: SelectSubset<T, study_access_topicUpdateArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Study_access_topics.
     * @param {study_access_topicDeleteManyArgs} args - Arguments to filter Study_access_topics to delete.
     * @example
     * // Delete a few Study_access_topics
     * const { count } = await prisma.study_access_topic.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends study_access_topicDeleteManyArgs>(args?: SelectSubset<T, study_access_topicDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Study_access_topics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {study_access_topicUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Study_access_topics
     * const study_access_topic = await prisma.study_access_topic.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends study_access_topicUpdateManyArgs>(args: SelectSubset<T, study_access_topicUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Study_access_topics and returns the data updated in the database.
     * @param {study_access_topicUpdateManyAndReturnArgs} args - Arguments to update many Study_access_topics.
     * @example
     * // Update many Study_access_topics
     * const study_access_topic = await prisma.study_access_topic.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Study_access_topics and only return the `id`
     * const study_access_topicWithIdOnly = await prisma.study_access_topic.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends study_access_topicUpdateManyAndReturnArgs>(args: SelectSubset<T, study_access_topicUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Study_access_topic.
     * @param {study_access_topicUpsertArgs} args - Arguments to update or create a Study_access_topic.
     * @example
     * // Update or create a Study_access_topic
     * const study_access_topic = await prisma.study_access_topic.upsert({
     *   create: {
     *     // ... data to create a Study_access_topic
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Study_access_topic we want to update
     *   }
     * })
     */
    upsert<T extends study_access_topicUpsertArgs>(args: SelectSubset<T, study_access_topicUpsertArgs<ExtArgs>>): Prisma__study_access_topicClient<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Study_access_topics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {study_access_topicCountArgs} args - Arguments to filter Study_access_topics to count.
     * @example
     * // Count the number of Study_access_topics
     * const count = await prisma.study_access_topic.count({
     *   where: {
     *     // ... the filter for the Study_access_topics we want to count
     *   }
     * })
    **/
    count<T extends study_access_topicCountArgs>(
      args?: Subset<T, study_access_topicCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Study_access_topicCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Study_access_topic.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Study_access_topicAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Study_access_topicAggregateArgs>(args: Subset<T, Study_access_topicAggregateArgs>): Prisma.PrismaPromise<GetStudy_access_topicAggregateType<T>>

    /**
     * Group by Study_access_topic.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {study_access_topicGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends study_access_topicGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: study_access_topicGroupByArgs['orderBy'] }
        : { orderBy?: study_access_topicGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, study_access_topicGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_access_topicGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the study_access_topic model
   */
  readonly fields: study_access_topicFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for study_access_topic.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__study_access_topicClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    topics<T extends topicsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, topicsDefaultArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the study_access_topic model
   */
  interface study_access_topicFieldRefs {
    readonly id: FieldRef<"study_access_topic", 'String'>
    readonly user_id: FieldRef<"study_access_topic", 'String'>
    readonly topic_id: FieldRef<"study_access_topic", 'String'>
    readonly access_type: FieldRef<"study_access_topic", 'String'>
    readonly access_date: FieldRef<"study_access_topic", 'DateTime'>
    readonly expire_date: FieldRef<"study_access_topic", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * study_access_topic findUnique
   */
  export type study_access_topicFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * Filter, which study_access_topic to fetch.
     */
    where: study_access_topicWhereUniqueInput
  }

  /**
   * study_access_topic findUniqueOrThrow
   */
  export type study_access_topicFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * Filter, which study_access_topic to fetch.
     */
    where: study_access_topicWhereUniqueInput
  }

  /**
   * study_access_topic findFirst
   */
  export type study_access_topicFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * Filter, which study_access_topic to fetch.
     */
    where?: study_access_topicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of study_access_topics to fetch.
     */
    orderBy?: study_access_topicOrderByWithRelationInput | study_access_topicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for study_access_topics.
     */
    cursor?: study_access_topicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` study_access_topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` study_access_topics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of study_access_topics.
     */
    distinct?: Study_access_topicScalarFieldEnum | Study_access_topicScalarFieldEnum[]
  }

  /**
   * study_access_topic findFirstOrThrow
   */
  export type study_access_topicFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * Filter, which study_access_topic to fetch.
     */
    where?: study_access_topicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of study_access_topics to fetch.
     */
    orderBy?: study_access_topicOrderByWithRelationInput | study_access_topicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for study_access_topics.
     */
    cursor?: study_access_topicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` study_access_topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` study_access_topics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of study_access_topics.
     */
    distinct?: Study_access_topicScalarFieldEnum | Study_access_topicScalarFieldEnum[]
  }

  /**
   * study_access_topic findMany
   */
  export type study_access_topicFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * Filter, which study_access_topics to fetch.
     */
    where?: study_access_topicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of study_access_topics to fetch.
     */
    orderBy?: study_access_topicOrderByWithRelationInput | study_access_topicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing study_access_topics.
     */
    cursor?: study_access_topicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` study_access_topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` study_access_topics.
     */
    skip?: number
    distinct?: Study_access_topicScalarFieldEnum | Study_access_topicScalarFieldEnum[]
  }

  /**
   * study_access_topic create
   */
  export type study_access_topicCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * The data needed to create a study_access_topic.
     */
    data: XOR<study_access_topicCreateInput, study_access_topicUncheckedCreateInput>
  }

  /**
   * study_access_topic createMany
   */
  export type study_access_topicCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many study_access_topics.
     */
    data: study_access_topicCreateManyInput | study_access_topicCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * study_access_topic createManyAndReturn
   */
  export type study_access_topicCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * The data used to create many study_access_topics.
     */
    data: study_access_topicCreateManyInput | study_access_topicCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * study_access_topic update
   */
  export type study_access_topicUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * The data needed to update a study_access_topic.
     */
    data: XOR<study_access_topicUpdateInput, study_access_topicUncheckedUpdateInput>
    /**
     * Choose, which study_access_topic to update.
     */
    where: study_access_topicWhereUniqueInput
  }

  /**
   * study_access_topic updateMany
   */
  export type study_access_topicUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update study_access_topics.
     */
    data: XOR<study_access_topicUpdateManyMutationInput, study_access_topicUncheckedUpdateManyInput>
    /**
     * Filter which study_access_topics to update
     */
    where?: study_access_topicWhereInput
    /**
     * Limit how many study_access_topics to update.
     */
    limit?: number
  }

  /**
   * study_access_topic updateManyAndReturn
   */
  export type study_access_topicUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * The data used to update study_access_topics.
     */
    data: XOR<study_access_topicUpdateManyMutationInput, study_access_topicUncheckedUpdateManyInput>
    /**
     * Filter which study_access_topics to update
     */
    where?: study_access_topicWhereInput
    /**
     * Limit how many study_access_topics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * study_access_topic upsert
   */
  export type study_access_topicUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * The filter to search for the study_access_topic to update in case it exists.
     */
    where: study_access_topicWhereUniqueInput
    /**
     * In case the study_access_topic found by the `where` argument doesn't exist, create a new study_access_topic with this data.
     */
    create: XOR<study_access_topicCreateInput, study_access_topicUncheckedCreateInput>
    /**
     * In case the study_access_topic was found with the provided `where` argument, update it with this data.
     */
    update: XOR<study_access_topicUpdateInput, study_access_topicUncheckedUpdateInput>
  }

  /**
   * study_access_topic delete
   */
  export type study_access_topicDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    /**
     * Filter which study_access_topic to delete.
     */
    where: study_access_topicWhereUniqueInput
  }

  /**
   * study_access_topic deleteMany
   */
  export type study_access_topicDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which study_access_topics to delete
     */
    where?: study_access_topicWhereInput
    /**
     * Limit how many study_access_topics to delete.
     */
    limit?: number
  }

  /**
   * study_access_topic without action
   */
  export type study_access_topicDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
  }


  /**
   * Model topics
   */

  export type AggregateTopics = {
    _count: TopicsCountAggregateOutputType | null
    _min: TopicsMinAggregateOutputType | null
    _max: TopicsMaxAggregateOutputType | null
  }

  export type TopicsMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
  }

  export type TopicsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
  }

  export type TopicsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    _all: number
  }


  export type TopicsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
  }

  export type TopicsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
  }

  export type TopicsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    _all?: true
  }

  export type TopicsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which topics to aggregate.
     */
    where?: topicsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of topics to fetch.
     */
    orderBy?: topicsOrderByWithRelationInput | topicsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: topicsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` topics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned topics
    **/
    _count?: true | TopicsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TopicsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TopicsMaxAggregateInputType
  }

  export type GetTopicsAggregateType<T extends TopicsAggregateArgs> = {
        [P in keyof T & keyof AggregateTopics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTopics[P]>
      : GetScalarType<T[P], AggregateTopics[P]>
  }




  export type topicsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: topicsWhereInput
    orderBy?: topicsOrderByWithAggregationInput | topicsOrderByWithAggregationInput[]
    by: TopicsScalarFieldEnum[] | TopicsScalarFieldEnum
    having?: topicsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TopicsCountAggregateInputType | true
    _min?: TopicsMinAggregateInputType
    _max?: TopicsMaxAggregateInputType
  }

  export type TopicsGroupByOutputType = {
    id: string
    name: string
    description: string | null
    _count: TopicsCountAggregateOutputType | null
    _min: TopicsMinAggregateOutputType | null
    _max: TopicsMaxAggregateOutputType | null
  }

  type GetTopicsGroupByPayload<T extends topicsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TopicsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TopicsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TopicsGroupByOutputType[P]>
            : GetScalarType<T[P], TopicsGroupByOutputType[P]>
        }
      >
    >


  export type topicsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    courses?: boolean | topics$coursesArgs<ExtArgs>
    study_access_topic?: boolean | topics$study_access_topicArgs<ExtArgs>
    _count?: boolean | TopicsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["topics"]>

  export type topicsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
  }, ExtArgs["result"]["topics"]>

  export type topicsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
  }, ExtArgs["result"]["topics"]>

  export type topicsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
  }

  export type topicsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description", ExtArgs["result"]["topics"]>
  export type topicsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | topics$coursesArgs<ExtArgs>
    study_access_topic?: boolean | topics$study_access_topicArgs<ExtArgs>
    _count?: boolean | TopicsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type topicsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type topicsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $topicsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "topics"
    objects: {
      courses: Prisma.$coursesPayload<ExtArgs>[]
      study_access_topic: Prisma.$study_access_topicPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
    }, ExtArgs["result"]["topics"]>
    composites: {}
  }

  type topicsGetPayload<S extends boolean | null | undefined | topicsDefaultArgs> = $Result.GetResult<Prisma.$topicsPayload, S>

  type topicsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<topicsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TopicsCountAggregateInputType | true
    }

  export interface topicsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['topics'], meta: { name: 'topics' } }
    /**
     * Find zero or one Topics that matches the filter.
     * @param {topicsFindUniqueArgs} args - Arguments to find a Topics
     * @example
     * // Get one Topics
     * const topics = await prisma.topics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends topicsFindUniqueArgs>(args: SelectSubset<T, topicsFindUniqueArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Topics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {topicsFindUniqueOrThrowArgs} args - Arguments to find a Topics
     * @example
     * // Get one Topics
     * const topics = await prisma.topics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends topicsFindUniqueOrThrowArgs>(args: SelectSubset<T, topicsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Topics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {topicsFindFirstArgs} args - Arguments to find a Topics
     * @example
     * // Get one Topics
     * const topics = await prisma.topics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends topicsFindFirstArgs>(args?: SelectSubset<T, topicsFindFirstArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Topics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {topicsFindFirstOrThrowArgs} args - Arguments to find a Topics
     * @example
     * // Get one Topics
     * const topics = await prisma.topics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends topicsFindFirstOrThrowArgs>(args?: SelectSubset<T, topicsFindFirstOrThrowArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Topics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {topicsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Topics
     * const topics = await prisma.topics.findMany()
     * 
     * // Get first 10 Topics
     * const topics = await prisma.topics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const topicsWithIdOnly = await prisma.topics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends topicsFindManyArgs>(args?: SelectSubset<T, topicsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Topics.
     * @param {topicsCreateArgs} args - Arguments to create a Topics.
     * @example
     * // Create one Topics
     * const Topics = await prisma.topics.create({
     *   data: {
     *     // ... data to create a Topics
     *   }
     * })
     * 
     */
    create<T extends topicsCreateArgs>(args: SelectSubset<T, topicsCreateArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Topics.
     * @param {topicsCreateManyArgs} args - Arguments to create many Topics.
     * @example
     * // Create many Topics
     * const topics = await prisma.topics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends topicsCreateManyArgs>(args?: SelectSubset<T, topicsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Topics and returns the data saved in the database.
     * @param {topicsCreateManyAndReturnArgs} args - Arguments to create many Topics.
     * @example
     * // Create many Topics
     * const topics = await prisma.topics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Topics and only return the `id`
     * const topicsWithIdOnly = await prisma.topics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends topicsCreateManyAndReturnArgs>(args?: SelectSubset<T, topicsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Topics.
     * @param {topicsDeleteArgs} args - Arguments to delete one Topics.
     * @example
     * // Delete one Topics
     * const Topics = await prisma.topics.delete({
     *   where: {
     *     // ... filter to delete one Topics
     *   }
     * })
     * 
     */
    delete<T extends topicsDeleteArgs>(args: SelectSubset<T, topicsDeleteArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Topics.
     * @param {topicsUpdateArgs} args - Arguments to update one Topics.
     * @example
     * // Update one Topics
     * const topics = await prisma.topics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends topicsUpdateArgs>(args: SelectSubset<T, topicsUpdateArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Topics.
     * @param {topicsDeleteManyArgs} args - Arguments to filter Topics to delete.
     * @example
     * // Delete a few Topics
     * const { count } = await prisma.topics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends topicsDeleteManyArgs>(args?: SelectSubset<T, topicsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Topics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {topicsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Topics
     * const topics = await prisma.topics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends topicsUpdateManyArgs>(args: SelectSubset<T, topicsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Topics and returns the data updated in the database.
     * @param {topicsUpdateManyAndReturnArgs} args - Arguments to update many Topics.
     * @example
     * // Update many Topics
     * const topics = await prisma.topics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Topics and only return the `id`
     * const topicsWithIdOnly = await prisma.topics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends topicsUpdateManyAndReturnArgs>(args: SelectSubset<T, topicsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Topics.
     * @param {topicsUpsertArgs} args - Arguments to update or create a Topics.
     * @example
     * // Update or create a Topics
     * const topics = await prisma.topics.upsert({
     *   create: {
     *     // ... data to create a Topics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Topics we want to update
     *   }
     * })
     */
    upsert<T extends topicsUpsertArgs>(args: SelectSubset<T, topicsUpsertArgs<ExtArgs>>): Prisma__topicsClient<$Result.GetResult<Prisma.$topicsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Topics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {topicsCountArgs} args - Arguments to filter Topics to count.
     * @example
     * // Count the number of Topics
     * const count = await prisma.topics.count({
     *   where: {
     *     // ... the filter for the Topics we want to count
     *   }
     * })
    **/
    count<T extends topicsCountArgs>(
      args?: Subset<T, topicsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TopicsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Topics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TopicsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TopicsAggregateArgs>(args: Subset<T, TopicsAggregateArgs>): Prisma.PrismaPromise<GetTopicsAggregateType<T>>

    /**
     * Group by Topics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {topicsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends topicsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: topicsGroupByArgs['orderBy'] }
        : { orderBy?: topicsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, topicsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTopicsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the topics model
   */
  readonly fields: topicsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for topics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__topicsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    courses<T extends topics$coursesArgs<ExtArgs> = {}>(args?: Subset<T, topics$coursesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    study_access_topic<T extends topics$study_access_topicArgs<ExtArgs> = {}>(args?: Subset<T, topics$study_access_topicArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the topics model
   */
  interface topicsFieldRefs {
    readonly id: FieldRef<"topics", 'String'>
    readonly name: FieldRef<"topics", 'String'>
    readonly description: FieldRef<"topics", 'String'>
  }
    

  // Custom InputTypes
  /**
   * topics findUnique
   */
  export type topicsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * Filter, which topics to fetch.
     */
    where: topicsWhereUniqueInput
  }

  /**
   * topics findUniqueOrThrow
   */
  export type topicsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * Filter, which topics to fetch.
     */
    where: topicsWhereUniqueInput
  }

  /**
   * topics findFirst
   */
  export type topicsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * Filter, which topics to fetch.
     */
    where?: topicsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of topics to fetch.
     */
    orderBy?: topicsOrderByWithRelationInput | topicsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for topics.
     */
    cursor?: topicsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` topics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of topics.
     */
    distinct?: TopicsScalarFieldEnum | TopicsScalarFieldEnum[]
  }

  /**
   * topics findFirstOrThrow
   */
  export type topicsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * Filter, which topics to fetch.
     */
    where?: topicsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of topics to fetch.
     */
    orderBy?: topicsOrderByWithRelationInput | topicsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for topics.
     */
    cursor?: topicsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` topics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of topics.
     */
    distinct?: TopicsScalarFieldEnum | TopicsScalarFieldEnum[]
  }

  /**
   * topics findMany
   */
  export type topicsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * Filter, which topics to fetch.
     */
    where?: topicsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of topics to fetch.
     */
    orderBy?: topicsOrderByWithRelationInput | topicsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing topics.
     */
    cursor?: topicsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` topics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` topics.
     */
    skip?: number
    distinct?: TopicsScalarFieldEnum | TopicsScalarFieldEnum[]
  }

  /**
   * topics create
   */
  export type topicsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * The data needed to create a topics.
     */
    data: XOR<topicsCreateInput, topicsUncheckedCreateInput>
  }

  /**
   * topics createMany
   */
  export type topicsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many topics.
     */
    data: topicsCreateManyInput | topicsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * topics createManyAndReturn
   */
  export type topicsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * The data used to create many topics.
     */
    data: topicsCreateManyInput | topicsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * topics update
   */
  export type topicsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * The data needed to update a topics.
     */
    data: XOR<topicsUpdateInput, topicsUncheckedUpdateInput>
    /**
     * Choose, which topics to update.
     */
    where: topicsWhereUniqueInput
  }

  /**
   * topics updateMany
   */
  export type topicsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update topics.
     */
    data: XOR<topicsUpdateManyMutationInput, topicsUncheckedUpdateManyInput>
    /**
     * Filter which topics to update
     */
    where?: topicsWhereInput
    /**
     * Limit how many topics to update.
     */
    limit?: number
  }

  /**
   * topics updateManyAndReturn
   */
  export type topicsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * The data used to update topics.
     */
    data: XOR<topicsUpdateManyMutationInput, topicsUncheckedUpdateManyInput>
    /**
     * Filter which topics to update
     */
    where?: topicsWhereInput
    /**
     * Limit how many topics to update.
     */
    limit?: number
  }

  /**
   * topics upsert
   */
  export type topicsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * The filter to search for the topics to update in case it exists.
     */
    where: topicsWhereUniqueInput
    /**
     * In case the topics found by the `where` argument doesn't exist, create a new topics with this data.
     */
    create: XOR<topicsCreateInput, topicsUncheckedCreateInput>
    /**
     * In case the topics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<topicsUpdateInput, topicsUncheckedUpdateInput>
  }

  /**
   * topics delete
   */
  export type topicsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
    /**
     * Filter which topics to delete.
     */
    where: topicsWhereUniqueInput
  }

  /**
   * topics deleteMany
   */
  export type topicsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which topics to delete
     */
    where?: topicsWhereInput
    /**
     * Limit how many topics to delete.
     */
    limit?: number
  }

  /**
   * topics.courses
   */
  export type topics$coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    where?: coursesWhereInput
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    cursor?: coursesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * topics.study_access_topic
   */
  export type topics$study_access_topicArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    where?: study_access_topicWhereInput
    orderBy?: study_access_topicOrderByWithRelationInput | study_access_topicOrderByWithRelationInput[]
    cursor?: study_access_topicWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Study_access_topicScalarFieldEnum | Study_access_topicScalarFieldEnum[]
  }

  /**
   * topics without action
   */
  export type topicsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the topics
     */
    select?: topicsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the topics
     */
    omit?: topicsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: topicsInclude<ExtArgs> | null
  }


  /**
   * Model transaction_history
   */

  export type AggregateTransaction_history = {
    _count: Transaction_historyCountAggregateOutputType | null
    _avg: Transaction_historyAvgAggregateOutputType | null
    _sum: Transaction_historySumAggregateOutputType | null
    _min: Transaction_historyMinAggregateOutputType | null
    _max: Transaction_historyMaxAggregateOutputType | null
  }

  export type Transaction_historyAvgAggregateOutputType = {
    price: Decimal | null
  }

  export type Transaction_historySumAggregateOutputType = {
    price: Decimal | null
  }

  export type Transaction_historyMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    price: Decimal | null
    createddate: Date | null
  }

  export type Transaction_historyMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    price: Decimal | null
    createddate: Date | null
  }

  export type Transaction_historyCountAggregateOutputType = {
    id: number
    user_id: number
    price: number
    createddate: number
    _all: number
  }


  export type Transaction_historyAvgAggregateInputType = {
    price?: true
  }

  export type Transaction_historySumAggregateInputType = {
    price?: true
  }

  export type Transaction_historyMinAggregateInputType = {
    id?: true
    user_id?: true
    price?: true
    createddate?: true
  }

  export type Transaction_historyMaxAggregateInputType = {
    id?: true
    user_id?: true
    price?: true
    createddate?: true
  }

  export type Transaction_historyCountAggregateInputType = {
    id?: true
    user_id?: true
    price?: true
    createddate?: true
    _all?: true
  }

  export type Transaction_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaction_history to aggregate.
     */
    where?: transaction_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaction_histories to fetch.
     */
    orderBy?: transaction_historyOrderByWithRelationInput | transaction_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transaction_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaction_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaction_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transaction_histories
    **/
    _count?: true | Transaction_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Transaction_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Transaction_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Transaction_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Transaction_historyMaxAggregateInputType
  }

  export type GetTransaction_historyAggregateType<T extends Transaction_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaction_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaction_history[P]>
      : GetScalarType<T[P], AggregateTransaction_history[P]>
  }




  export type transaction_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaction_historyWhereInput
    orderBy?: transaction_historyOrderByWithAggregationInput | transaction_historyOrderByWithAggregationInput[]
    by: Transaction_historyScalarFieldEnum[] | Transaction_historyScalarFieldEnum
    having?: transaction_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Transaction_historyCountAggregateInputType | true
    _avg?: Transaction_historyAvgAggregateInputType
    _sum?: Transaction_historySumAggregateInputType
    _min?: Transaction_historyMinAggregateInputType
    _max?: Transaction_historyMaxAggregateInputType
  }

  export type Transaction_historyGroupByOutputType = {
    id: string
    user_id: string
    price: Decimal | null
    createddate: Date | null
    _count: Transaction_historyCountAggregateOutputType | null
    _avg: Transaction_historyAvgAggregateOutputType | null
    _sum: Transaction_historySumAggregateOutputType | null
    _min: Transaction_historyMinAggregateOutputType | null
    _max: Transaction_historyMaxAggregateOutputType | null
  }

  type GetTransaction_historyGroupByPayload<T extends transaction_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Transaction_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Transaction_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Transaction_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Transaction_historyGroupByOutputType[P]>
        }
      >
    >


  export type transaction_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    price?: boolean
    createddate?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaction_history"]>

  export type transaction_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    price?: boolean
    createddate?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaction_history"]>

  export type transaction_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    price?: boolean
    createddate?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaction_history"]>

  export type transaction_historySelectScalar = {
    id?: boolean
    user_id?: boolean
    price?: boolean
    createddate?: boolean
  }

  export type transaction_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "price" | "createddate", ExtArgs["result"]["transaction_history"]>
  export type transaction_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type transaction_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type transaction_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $transaction_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transaction_history"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      price: Prisma.Decimal | null
      createddate: Date | null
    }, ExtArgs["result"]["transaction_history"]>
    composites: {}
  }

  type transaction_historyGetPayload<S extends boolean | null | undefined | transaction_historyDefaultArgs> = $Result.GetResult<Prisma.$transaction_historyPayload, S>

  type transaction_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transaction_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Transaction_historyCountAggregateInputType | true
    }

  export interface transaction_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transaction_history'], meta: { name: 'transaction_history' } }
    /**
     * Find zero or one Transaction_history that matches the filter.
     * @param {transaction_historyFindUniqueArgs} args - Arguments to find a Transaction_history
     * @example
     * // Get one Transaction_history
     * const transaction_history = await prisma.transaction_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transaction_historyFindUniqueArgs>(args: SelectSubset<T, transaction_historyFindUniqueArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaction_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transaction_historyFindUniqueOrThrowArgs} args - Arguments to find a Transaction_history
     * @example
     * // Get one Transaction_history
     * const transaction_history = await prisma.transaction_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transaction_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, transaction_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaction_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaction_historyFindFirstArgs} args - Arguments to find a Transaction_history
     * @example
     * // Get one Transaction_history
     * const transaction_history = await prisma.transaction_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transaction_historyFindFirstArgs>(args?: SelectSubset<T, transaction_historyFindFirstArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaction_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaction_historyFindFirstOrThrowArgs} args - Arguments to find a Transaction_history
     * @example
     * // Get one Transaction_history
     * const transaction_history = await prisma.transaction_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transaction_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, transaction_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaction_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaction_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaction_histories
     * const transaction_histories = await prisma.transaction_history.findMany()
     * 
     * // Get first 10 Transaction_histories
     * const transaction_histories = await prisma.transaction_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaction_historyWithIdOnly = await prisma.transaction_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transaction_historyFindManyArgs>(args?: SelectSubset<T, transaction_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaction_history.
     * @param {transaction_historyCreateArgs} args - Arguments to create a Transaction_history.
     * @example
     * // Create one Transaction_history
     * const Transaction_history = await prisma.transaction_history.create({
     *   data: {
     *     // ... data to create a Transaction_history
     *   }
     * })
     * 
     */
    create<T extends transaction_historyCreateArgs>(args: SelectSubset<T, transaction_historyCreateArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaction_histories.
     * @param {transaction_historyCreateManyArgs} args - Arguments to create many Transaction_histories.
     * @example
     * // Create many Transaction_histories
     * const transaction_history = await prisma.transaction_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transaction_historyCreateManyArgs>(args?: SelectSubset<T, transaction_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transaction_histories and returns the data saved in the database.
     * @param {transaction_historyCreateManyAndReturnArgs} args - Arguments to create many Transaction_histories.
     * @example
     * // Create many Transaction_histories
     * const transaction_history = await prisma.transaction_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transaction_histories and only return the `id`
     * const transaction_historyWithIdOnly = await prisma.transaction_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends transaction_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, transaction_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaction_history.
     * @param {transaction_historyDeleteArgs} args - Arguments to delete one Transaction_history.
     * @example
     * // Delete one Transaction_history
     * const Transaction_history = await prisma.transaction_history.delete({
     *   where: {
     *     // ... filter to delete one Transaction_history
     *   }
     * })
     * 
     */
    delete<T extends transaction_historyDeleteArgs>(args: SelectSubset<T, transaction_historyDeleteArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaction_history.
     * @param {transaction_historyUpdateArgs} args - Arguments to update one Transaction_history.
     * @example
     * // Update one Transaction_history
     * const transaction_history = await prisma.transaction_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transaction_historyUpdateArgs>(args: SelectSubset<T, transaction_historyUpdateArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaction_histories.
     * @param {transaction_historyDeleteManyArgs} args - Arguments to filter Transaction_histories to delete.
     * @example
     * // Delete a few Transaction_histories
     * const { count } = await prisma.transaction_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transaction_historyDeleteManyArgs>(args?: SelectSubset<T, transaction_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaction_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaction_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaction_histories
     * const transaction_history = await prisma.transaction_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transaction_historyUpdateManyArgs>(args: SelectSubset<T, transaction_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaction_histories and returns the data updated in the database.
     * @param {transaction_historyUpdateManyAndReturnArgs} args - Arguments to update many Transaction_histories.
     * @example
     * // Update many Transaction_histories
     * const transaction_history = await prisma.transaction_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transaction_histories and only return the `id`
     * const transaction_historyWithIdOnly = await prisma.transaction_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends transaction_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, transaction_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaction_history.
     * @param {transaction_historyUpsertArgs} args - Arguments to update or create a Transaction_history.
     * @example
     * // Update or create a Transaction_history
     * const transaction_history = await prisma.transaction_history.upsert({
     *   create: {
     *     // ... data to create a Transaction_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaction_history we want to update
     *   }
     * })
     */
    upsert<T extends transaction_historyUpsertArgs>(args: SelectSubset<T, transaction_historyUpsertArgs<ExtArgs>>): Prisma__transaction_historyClient<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaction_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaction_historyCountArgs} args - Arguments to filter Transaction_histories to count.
     * @example
     * // Count the number of Transaction_histories
     * const count = await prisma.transaction_history.count({
     *   where: {
     *     // ... the filter for the Transaction_histories we want to count
     *   }
     * })
    **/
    count<T extends transaction_historyCountArgs>(
      args?: Subset<T, transaction_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Transaction_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaction_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaction_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Transaction_historyAggregateArgs>(args: Subset<T, Transaction_historyAggregateArgs>): Prisma.PrismaPromise<GetTransaction_historyAggregateType<T>>

    /**
     * Group by Transaction_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaction_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transaction_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transaction_historyGroupByArgs['orderBy'] }
        : { orderBy?: transaction_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transaction_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaction_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transaction_history model
   */
  readonly fields: transaction_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transaction_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transaction_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transaction_history model
   */
  interface transaction_historyFieldRefs {
    readonly id: FieldRef<"transaction_history", 'String'>
    readonly user_id: FieldRef<"transaction_history", 'String'>
    readonly price: FieldRef<"transaction_history", 'Decimal'>
    readonly createddate: FieldRef<"transaction_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * transaction_history findUnique
   */
  export type transaction_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * Filter, which transaction_history to fetch.
     */
    where: transaction_historyWhereUniqueInput
  }

  /**
   * transaction_history findUniqueOrThrow
   */
  export type transaction_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * Filter, which transaction_history to fetch.
     */
    where: transaction_historyWhereUniqueInput
  }

  /**
   * transaction_history findFirst
   */
  export type transaction_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * Filter, which transaction_history to fetch.
     */
    where?: transaction_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaction_histories to fetch.
     */
    orderBy?: transaction_historyOrderByWithRelationInput | transaction_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaction_histories.
     */
    cursor?: transaction_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaction_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaction_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaction_histories.
     */
    distinct?: Transaction_historyScalarFieldEnum | Transaction_historyScalarFieldEnum[]
  }

  /**
   * transaction_history findFirstOrThrow
   */
  export type transaction_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * Filter, which transaction_history to fetch.
     */
    where?: transaction_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaction_histories to fetch.
     */
    orderBy?: transaction_historyOrderByWithRelationInput | transaction_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaction_histories.
     */
    cursor?: transaction_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaction_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaction_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaction_histories.
     */
    distinct?: Transaction_historyScalarFieldEnum | Transaction_historyScalarFieldEnum[]
  }

  /**
   * transaction_history findMany
   */
  export type transaction_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * Filter, which transaction_histories to fetch.
     */
    where?: transaction_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaction_histories to fetch.
     */
    orderBy?: transaction_historyOrderByWithRelationInput | transaction_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transaction_histories.
     */
    cursor?: transaction_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaction_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaction_histories.
     */
    skip?: number
    distinct?: Transaction_historyScalarFieldEnum | Transaction_historyScalarFieldEnum[]
  }

  /**
   * transaction_history create
   */
  export type transaction_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a transaction_history.
     */
    data: XOR<transaction_historyCreateInput, transaction_historyUncheckedCreateInput>
  }

  /**
   * transaction_history createMany
   */
  export type transaction_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transaction_histories.
     */
    data: transaction_historyCreateManyInput | transaction_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaction_history createManyAndReturn
   */
  export type transaction_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * The data used to create many transaction_histories.
     */
    data: transaction_historyCreateManyInput | transaction_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * transaction_history update
   */
  export type transaction_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a transaction_history.
     */
    data: XOR<transaction_historyUpdateInput, transaction_historyUncheckedUpdateInput>
    /**
     * Choose, which transaction_history to update.
     */
    where: transaction_historyWhereUniqueInput
  }

  /**
   * transaction_history updateMany
   */
  export type transaction_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transaction_histories.
     */
    data: XOR<transaction_historyUpdateManyMutationInput, transaction_historyUncheckedUpdateManyInput>
    /**
     * Filter which transaction_histories to update
     */
    where?: transaction_historyWhereInput
    /**
     * Limit how many transaction_histories to update.
     */
    limit?: number
  }

  /**
   * transaction_history updateManyAndReturn
   */
  export type transaction_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * The data used to update transaction_histories.
     */
    data: XOR<transaction_historyUpdateManyMutationInput, transaction_historyUncheckedUpdateManyInput>
    /**
     * Filter which transaction_histories to update
     */
    where?: transaction_historyWhereInput
    /**
     * Limit how many transaction_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * transaction_history upsert
   */
  export type transaction_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the transaction_history to update in case it exists.
     */
    where: transaction_historyWhereUniqueInput
    /**
     * In case the transaction_history found by the `where` argument doesn't exist, create a new transaction_history with this data.
     */
    create: XOR<transaction_historyCreateInput, transaction_historyUncheckedCreateInput>
    /**
     * In case the transaction_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transaction_historyUpdateInput, transaction_historyUncheckedUpdateInput>
  }

  /**
   * transaction_history delete
   */
  export type transaction_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    /**
     * Filter which transaction_history to delete.
     */
    where: transaction_historyWhereUniqueInput
  }

  /**
   * transaction_history deleteMany
   */
  export type transaction_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaction_histories to delete
     */
    where?: transaction_historyWhereInput
    /**
     * Limit how many transaction_histories to delete.
     */
    limit?: number
  }

  /**
   * transaction_history without action
   */
  export type transaction_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
  }


  /**
   * Model user_abuse_reports
   */

  export type AggregateUser_abuse_reports = {
    _count: User_abuse_reportsCountAggregateOutputType | null
    _min: User_abuse_reportsMinAggregateOutputType | null
    _max: User_abuse_reportsMaxAggregateOutputType | null
  }

  export type User_abuse_reportsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    content: string | null
    created_date: Date | null
  }

  export type User_abuse_reportsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    content: string | null
    created_date: Date | null
  }

  export type User_abuse_reportsCountAggregateOutputType = {
    id: number
    user_id: number
    content: number
    created_date: number
    _all: number
  }


  export type User_abuse_reportsMinAggregateInputType = {
    id?: true
    user_id?: true
    content?: true
    created_date?: true
  }

  export type User_abuse_reportsMaxAggregateInputType = {
    id?: true
    user_id?: true
    content?: true
    created_date?: true
  }

  export type User_abuse_reportsCountAggregateInputType = {
    id?: true
    user_id?: true
    content?: true
    created_date?: true
    _all?: true
  }

  export type User_abuse_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_abuse_reports to aggregate.
     */
    where?: user_abuse_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_abuse_reports to fetch.
     */
    orderBy?: user_abuse_reportsOrderByWithRelationInput | user_abuse_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_abuse_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_abuse_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_abuse_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_abuse_reports
    **/
    _count?: true | User_abuse_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_abuse_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_abuse_reportsMaxAggregateInputType
  }

  export type GetUser_abuse_reportsAggregateType<T extends User_abuse_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_abuse_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_abuse_reports[P]>
      : GetScalarType<T[P], AggregateUser_abuse_reports[P]>
  }




  export type user_abuse_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_abuse_reportsWhereInput
    orderBy?: user_abuse_reportsOrderByWithAggregationInput | user_abuse_reportsOrderByWithAggregationInput[]
    by: User_abuse_reportsScalarFieldEnum[] | User_abuse_reportsScalarFieldEnum
    having?: user_abuse_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_abuse_reportsCountAggregateInputType | true
    _min?: User_abuse_reportsMinAggregateInputType
    _max?: User_abuse_reportsMaxAggregateInputType
  }

  export type User_abuse_reportsGroupByOutputType = {
    id: string
    user_id: string
    content: string
    created_date: Date
    _count: User_abuse_reportsCountAggregateOutputType | null
    _min: User_abuse_reportsMinAggregateOutputType | null
    _max: User_abuse_reportsMaxAggregateOutputType | null
  }

  type GetUser_abuse_reportsGroupByPayload<T extends user_abuse_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_abuse_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_abuse_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_abuse_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], User_abuse_reportsGroupByOutputType[P]>
        }
      >
    >


  export type user_abuse_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    abuse_report_feedbacks?: boolean | user_abuse_reports$abuse_report_feedbacksArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | User_abuse_reportsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_abuse_reports"]>

  export type user_abuse_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_abuse_reports"]>

  export type user_abuse_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_abuse_reports"]>

  export type user_abuse_reportsSelectScalar = {
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
  }

  export type user_abuse_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "content" | "created_date", ExtArgs["result"]["user_abuse_reports"]>
  export type user_abuse_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abuse_report_feedbacks?: boolean | user_abuse_reports$abuse_report_feedbacksArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | User_abuse_reportsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type user_abuse_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_abuse_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_abuse_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_abuse_reports"
    objects: {
      abuse_report_feedbacks: Prisma.$abuse_report_feedbacksPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      content: string
      created_date: Date
    }, ExtArgs["result"]["user_abuse_reports"]>
    composites: {}
  }

  type user_abuse_reportsGetPayload<S extends boolean | null | undefined | user_abuse_reportsDefaultArgs> = $Result.GetResult<Prisma.$user_abuse_reportsPayload, S>

  type user_abuse_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_abuse_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_abuse_reportsCountAggregateInputType | true
    }

  export interface user_abuse_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_abuse_reports'], meta: { name: 'user_abuse_reports' } }
    /**
     * Find zero or one User_abuse_reports that matches the filter.
     * @param {user_abuse_reportsFindUniqueArgs} args - Arguments to find a User_abuse_reports
     * @example
     * // Get one User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_abuse_reportsFindUniqueArgs>(args: SelectSubset<T, user_abuse_reportsFindUniqueArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_abuse_reports that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_abuse_reportsFindUniqueOrThrowArgs} args - Arguments to find a User_abuse_reports
     * @example
     * // Get one User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_abuse_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_abuse_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_abuse_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_abuse_reportsFindFirstArgs} args - Arguments to find a User_abuse_reports
     * @example
     * // Get one User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_abuse_reportsFindFirstArgs>(args?: SelectSubset<T, user_abuse_reportsFindFirstArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_abuse_reports that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_abuse_reportsFindFirstOrThrowArgs} args - Arguments to find a User_abuse_reports
     * @example
     * // Get one User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_abuse_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_abuse_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_abuse_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_abuse_reportsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.findMany()
     * 
     * // Get first 10 User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_abuse_reportsWithIdOnly = await prisma.user_abuse_reports.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_abuse_reportsFindManyArgs>(args?: SelectSubset<T, user_abuse_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_abuse_reports.
     * @param {user_abuse_reportsCreateArgs} args - Arguments to create a User_abuse_reports.
     * @example
     * // Create one User_abuse_reports
     * const User_abuse_reports = await prisma.user_abuse_reports.create({
     *   data: {
     *     // ... data to create a User_abuse_reports
     *   }
     * })
     * 
     */
    create<T extends user_abuse_reportsCreateArgs>(args: SelectSubset<T, user_abuse_reportsCreateArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_abuse_reports.
     * @param {user_abuse_reportsCreateManyArgs} args - Arguments to create many User_abuse_reports.
     * @example
     * // Create many User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_abuse_reportsCreateManyArgs>(args?: SelectSubset<T, user_abuse_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_abuse_reports and returns the data saved in the database.
     * @param {user_abuse_reportsCreateManyAndReturnArgs} args - Arguments to create many User_abuse_reports.
     * @example
     * // Create many User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_abuse_reports and only return the `id`
     * const user_abuse_reportsWithIdOnly = await prisma.user_abuse_reports.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_abuse_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_abuse_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_abuse_reports.
     * @param {user_abuse_reportsDeleteArgs} args - Arguments to delete one User_abuse_reports.
     * @example
     * // Delete one User_abuse_reports
     * const User_abuse_reports = await prisma.user_abuse_reports.delete({
     *   where: {
     *     // ... filter to delete one User_abuse_reports
     *   }
     * })
     * 
     */
    delete<T extends user_abuse_reportsDeleteArgs>(args: SelectSubset<T, user_abuse_reportsDeleteArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_abuse_reports.
     * @param {user_abuse_reportsUpdateArgs} args - Arguments to update one User_abuse_reports.
     * @example
     * // Update one User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_abuse_reportsUpdateArgs>(args: SelectSubset<T, user_abuse_reportsUpdateArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_abuse_reports.
     * @param {user_abuse_reportsDeleteManyArgs} args - Arguments to filter User_abuse_reports to delete.
     * @example
     * // Delete a few User_abuse_reports
     * const { count } = await prisma.user_abuse_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_abuse_reportsDeleteManyArgs>(args?: SelectSubset<T, user_abuse_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_abuse_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_abuse_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_abuse_reportsUpdateManyArgs>(args: SelectSubset<T, user_abuse_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_abuse_reports and returns the data updated in the database.
     * @param {user_abuse_reportsUpdateManyAndReturnArgs} args - Arguments to update many User_abuse_reports.
     * @example
     * // Update many User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_abuse_reports and only return the `id`
     * const user_abuse_reportsWithIdOnly = await prisma.user_abuse_reports.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_abuse_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_abuse_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_abuse_reports.
     * @param {user_abuse_reportsUpsertArgs} args - Arguments to update or create a User_abuse_reports.
     * @example
     * // Update or create a User_abuse_reports
     * const user_abuse_reports = await prisma.user_abuse_reports.upsert({
     *   create: {
     *     // ... data to create a User_abuse_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_abuse_reports we want to update
     *   }
     * })
     */
    upsert<T extends user_abuse_reportsUpsertArgs>(args: SelectSubset<T, user_abuse_reportsUpsertArgs<ExtArgs>>): Prisma__user_abuse_reportsClient<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_abuse_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_abuse_reportsCountArgs} args - Arguments to filter User_abuse_reports to count.
     * @example
     * // Count the number of User_abuse_reports
     * const count = await prisma.user_abuse_reports.count({
     *   where: {
     *     // ... the filter for the User_abuse_reports we want to count
     *   }
     * })
    **/
    count<T extends user_abuse_reportsCountArgs>(
      args?: Subset<T, user_abuse_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_abuse_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_abuse_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_abuse_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_abuse_reportsAggregateArgs>(args: Subset<T, User_abuse_reportsAggregateArgs>): Prisma.PrismaPromise<GetUser_abuse_reportsAggregateType<T>>

    /**
     * Group by User_abuse_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_abuse_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_abuse_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_abuse_reportsGroupByArgs['orderBy'] }
        : { orderBy?: user_abuse_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_abuse_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_abuse_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_abuse_reports model
   */
  readonly fields: user_abuse_reportsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_abuse_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_abuse_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    abuse_report_feedbacks<T extends user_abuse_reports$abuse_report_feedbacksArgs<ExtArgs> = {}>(args?: Subset<T, user_abuse_reports$abuse_report_feedbacksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_abuse_reports model
   */
  interface user_abuse_reportsFieldRefs {
    readonly id: FieldRef<"user_abuse_reports", 'String'>
    readonly user_id: FieldRef<"user_abuse_reports", 'String'>
    readonly content: FieldRef<"user_abuse_reports", 'String'>
    readonly created_date: FieldRef<"user_abuse_reports", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_abuse_reports findUnique
   */
  export type user_abuse_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_abuse_reports to fetch.
     */
    where: user_abuse_reportsWhereUniqueInput
  }

  /**
   * user_abuse_reports findUniqueOrThrow
   */
  export type user_abuse_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_abuse_reports to fetch.
     */
    where: user_abuse_reportsWhereUniqueInput
  }

  /**
   * user_abuse_reports findFirst
   */
  export type user_abuse_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_abuse_reports to fetch.
     */
    where?: user_abuse_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_abuse_reports to fetch.
     */
    orderBy?: user_abuse_reportsOrderByWithRelationInput | user_abuse_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_abuse_reports.
     */
    cursor?: user_abuse_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_abuse_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_abuse_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_abuse_reports.
     */
    distinct?: User_abuse_reportsScalarFieldEnum | User_abuse_reportsScalarFieldEnum[]
  }

  /**
   * user_abuse_reports findFirstOrThrow
   */
  export type user_abuse_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_abuse_reports to fetch.
     */
    where?: user_abuse_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_abuse_reports to fetch.
     */
    orderBy?: user_abuse_reportsOrderByWithRelationInput | user_abuse_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_abuse_reports.
     */
    cursor?: user_abuse_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_abuse_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_abuse_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_abuse_reports.
     */
    distinct?: User_abuse_reportsScalarFieldEnum | User_abuse_reportsScalarFieldEnum[]
  }

  /**
   * user_abuse_reports findMany
   */
  export type user_abuse_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_abuse_reports to fetch.
     */
    where?: user_abuse_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_abuse_reports to fetch.
     */
    orderBy?: user_abuse_reportsOrderByWithRelationInput | user_abuse_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_abuse_reports.
     */
    cursor?: user_abuse_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_abuse_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_abuse_reports.
     */
    skip?: number
    distinct?: User_abuse_reportsScalarFieldEnum | User_abuse_reportsScalarFieldEnum[]
  }

  /**
   * user_abuse_reports create
   */
  export type user_abuse_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_abuse_reports.
     */
    data: XOR<user_abuse_reportsCreateInput, user_abuse_reportsUncheckedCreateInput>
  }

  /**
   * user_abuse_reports createMany
   */
  export type user_abuse_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_abuse_reports.
     */
    data: user_abuse_reportsCreateManyInput | user_abuse_reportsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_abuse_reports createManyAndReturn
   */
  export type user_abuse_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * The data used to create many user_abuse_reports.
     */
    data: user_abuse_reportsCreateManyInput | user_abuse_reportsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_abuse_reports update
   */
  export type user_abuse_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_abuse_reports.
     */
    data: XOR<user_abuse_reportsUpdateInput, user_abuse_reportsUncheckedUpdateInput>
    /**
     * Choose, which user_abuse_reports to update.
     */
    where: user_abuse_reportsWhereUniqueInput
  }

  /**
   * user_abuse_reports updateMany
   */
  export type user_abuse_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_abuse_reports.
     */
    data: XOR<user_abuse_reportsUpdateManyMutationInput, user_abuse_reportsUncheckedUpdateManyInput>
    /**
     * Filter which user_abuse_reports to update
     */
    where?: user_abuse_reportsWhereInput
    /**
     * Limit how many user_abuse_reports to update.
     */
    limit?: number
  }

  /**
   * user_abuse_reports updateManyAndReturn
   */
  export type user_abuse_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * The data used to update user_abuse_reports.
     */
    data: XOR<user_abuse_reportsUpdateManyMutationInput, user_abuse_reportsUncheckedUpdateManyInput>
    /**
     * Filter which user_abuse_reports to update
     */
    where?: user_abuse_reportsWhereInput
    /**
     * Limit how many user_abuse_reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_abuse_reports upsert
   */
  export type user_abuse_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_abuse_reports to update in case it exists.
     */
    where: user_abuse_reportsWhereUniqueInput
    /**
     * In case the user_abuse_reports found by the `where` argument doesn't exist, create a new user_abuse_reports with this data.
     */
    create: XOR<user_abuse_reportsCreateInput, user_abuse_reportsUncheckedCreateInput>
    /**
     * In case the user_abuse_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_abuse_reportsUpdateInput, user_abuse_reportsUncheckedUpdateInput>
  }

  /**
   * user_abuse_reports delete
   */
  export type user_abuse_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    /**
     * Filter which user_abuse_reports to delete.
     */
    where: user_abuse_reportsWhereUniqueInput
  }

  /**
   * user_abuse_reports deleteMany
   */
  export type user_abuse_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_abuse_reports to delete
     */
    where?: user_abuse_reportsWhereInput
    /**
     * Limit how many user_abuse_reports to delete.
     */
    limit?: number
  }

  /**
   * user_abuse_reports.abuse_report_feedbacks
   */
  export type user_abuse_reports$abuse_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    where?: abuse_report_feedbacksWhereInput
    orderBy?: abuse_report_feedbacksOrderByWithRelationInput | abuse_report_feedbacksOrderByWithRelationInput[]
    cursor?: abuse_report_feedbacksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Abuse_report_feedbacksScalarFieldEnum | Abuse_report_feedbacksScalarFieldEnum[]
  }

  /**
   * user_abuse_reports without action
   */
  export type user_abuse_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
  }


  /**
   * Model user_courses
   */

  export type AggregateUser_courses = {
    _count: User_coursesCountAggregateOutputType | null
    _min: User_coursesMinAggregateOutputType | null
    _max: User_coursesMaxAggregateOutputType | null
  }

  export type User_coursesMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    course_id: string | null
    purchase_date: Date | null
  }

  export type User_coursesMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    course_id: string | null
    purchase_date: Date | null
  }

  export type User_coursesCountAggregateOutputType = {
    id: number
    user_id: number
    course_id: number
    purchase_date: number
    _all: number
  }


  export type User_coursesMinAggregateInputType = {
    id?: true
    user_id?: true
    course_id?: true
    purchase_date?: true
  }

  export type User_coursesMaxAggregateInputType = {
    id?: true
    user_id?: true
    course_id?: true
    purchase_date?: true
  }

  export type User_coursesCountAggregateInputType = {
    id?: true
    user_id?: true
    course_id?: true
    purchase_date?: true
    _all?: true
  }

  export type User_coursesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_courses to aggregate.
     */
    where?: user_coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_courses to fetch.
     */
    orderBy?: user_coursesOrderByWithRelationInput | user_coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_courses
    **/
    _count?: true | User_coursesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_coursesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_coursesMaxAggregateInputType
  }

  export type GetUser_coursesAggregateType<T extends User_coursesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_courses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_courses[P]>
      : GetScalarType<T[P], AggregateUser_courses[P]>
  }




  export type user_coursesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_coursesWhereInput
    orderBy?: user_coursesOrderByWithAggregationInput | user_coursesOrderByWithAggregationInput[]
    by: User_coursesScalarFieldEnum[] | User_coursesScalarFieldEnum
    having?: user_coursesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_coursesCountAggregateInputType | true
    _min?: User_coursesMinAggregateInputType
    _max?: User_coursesMaxAggregateInputType
  }

  export type User_coursesGroupByOutputType = {
    id: string
    user_id: string
    course_id: string
    purchase_date: Date | null
    _count: User_coursesCountAggregateOutputType | null
    _min: User_coursesMinAggregateOutputType | null
    _max: User_coursesMaxAggregateOutputType | null
  }

  type GetUser_coursesGroupByPayload<T extends user_coursesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_coursesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_coursesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_coursesGroupByOutputType[P]>
            : GetScalarType<T[P], User_coursesGroupByOutputType[P]>
        }
      >
    >


  export type user_coursesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    course_id?: boolean
    purchase_date?: boolean
    courses?: boolean | coursesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_courses"]>

  export type user_coursesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    course_id?: boolean
    purchase_date?: boolean
    courses?: boolean | coursesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_courses"]>

  export type user_coursesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    course_id?: boolean
    purchase_date?: boolean
    courses?: boolean | coursesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_courses"]>

  export type user_coursesSelectScalar = {
    id?: boolean
    user_id?: boolean
    course_id?: boolean
    purchase_date?: boolean
  }

  export type user_coursesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "course_id" | "purchase_date", ExtArgs["result"]["user_courses"]>
  export type user_coursesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | coursesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_coursesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | coursesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_coursesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | coursesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_coursesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_courses"
    objects: {
      courses: Prisma.$coursesPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      course_id: string
      purchase_date: Date | null
    }, ExtArgs["result"]["user_courses"]>
    composites: {}
  }

  type user_coursesGetPayload<S extends boolean | null | undefined | user_coursesDefaultArgs> = $Result.GetResult<Prisma.$user_coursesPayload, S>

  type user_coursesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_coursesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_coursesCountAggregateInputType | true
    }

  export interface user_coursesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_courses'], meta: { name: 'user_courses' } }
    /**
     * Find zero or one User_courses that matches the filter.
     * @param {user_coursesFindUniqueArgs} args - Arguments to find a User_courses
     * @example
     * // Get one User_courses
     * const user_courses = await prisma.user_courses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_coursesFindUniqueArgs>(args: SelectSubset<T, user_coursesFindUniqueArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_courses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_coursesFindUniqueOrThrowArgs} args - Arguments to find a User_courses
     * @example
     * // Get one User_courses
     * const user_courses = await prisma.user_courses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_coursesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_coursesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_coursesFindFirstArgs} args - Arguments to find a User_courses
     * @example
     * // Get one User_courses
     * const user_courses = await prisma.user_courses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_coursesFindFirstArgs>(args?: SelectSubset<T, user_coursesFindFirstArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_courses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_coursesFindFirstOrThrowArgs} args - Arguments to find a User_courses
     * @example
     * // Get one User_courses
     * const user_courses = await prisma.user_courses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_coursesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_coursesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_coursesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_courses
     * const user_courses = await prisma.user_courses.findMany()
     * 
     * // Get first 10 User_courses
     * const user_courses = await prisma.user_courses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_coursesWithIdOnly = await prisma.user_courses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_coursesFindManyArgs>(args?: SelectSubset<T, user_coursesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_courses.
     * @param {user_coursesCreateArgs} args - Arguments to create a User_courses.
     * @example
     * // Create one User_courses
     * const User_courses = await prisma.user_courses.create({
     *   data: {
     *     // ... data to create a User_courses
     *   }
     * })
     * 
     */
    create<T extends user_coursesCreateArgs>(args: SelectSubset<T, user_coursesCreateArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_courses.
     * @param {user_coursesCreateManyArgs} args - Arguments to create many User_courses.
     * @example
     * // Create many User_courses
     * const user_courses = await prisma.user_courses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_coursesCreateManyArgs>(args?: SelectSubset<T, user_coursesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_courses and returns the data saved in the database.
     * @param {user_coursesCreateManyAndReturnArgs} args - Arguments to create many User_courses.
     * @example
     * // Create many User_courses
     * const user_courses = await prisma.user_courses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_courses and only return the `id`
     * const user_coursesWithIdOnly = await prisma.user_courses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_coursesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_coursesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_courses.
     * @param {user_coursesDeleteArgs} args - Arguments to delete one User_courses.
     * @example
     * // Delete one User_courses
     * const User_courses = await prisma.user_courses.delete({
     *   where: {
     *     // ... filter to delete one User_courses
     *   }
     * })
     * 
     */
    delete<T extends user_coursesDeleteArgs>(args: SelectSubset<T, user_coursesDeleteArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_courses.
     * @param {user_coursesUpdateArgs} args - Arguments to update one User_courses.
     * @example
     * // Update one User_courses
     * const user_courses = await prisma.user_courses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_coursesUpdateArgs>(args: SelectSubset<T, user_coursesUpdateArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_courses.
     * @param {user_coursesDeleteManyArgs} args - Arguments to filter User_courses to delete.
     * @example
     * // Delete a few User_courses
     * const { count } = await prisma.user_courses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_coursesDeleteManyArgs>(args?: SelectSubset<T, user_coursesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_coursesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_courses
     * const user_courses = await prisma.user_courses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_coursesUpdateManyArgs>(args: SelectSubset<T, user_coursesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_courses and returns the data updated in the database.
     * @param {user_coursesUpdateManyAndReturnArgs} args - Arguments to update many User_courses.
     * @example
     * // Update many User_courses
     * const user_courses = await prisma.user_courses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_courses and only return the `id`
     * const user_coursesWithIdOnly = await prisma.user_courses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_coursesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_coursesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_courses.
     * @param {user_coursesUpsertArgs} args - Arguments to update or create a User_courses.
     * @example
     * // Update or create a User_courses
     * const user_courses = await prisma.user_courses.upsert({
     *   create: {
     *     // ... data to create a User_courses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_courses we want to update
     *   }
     * })
     */
    upsert<T extends user_coursesUpsertArgs>(args: SelectSubset<T, user_coursesUpsertArgs<ExtArgs>>): Prisma__user_coursesClient<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_coursesCountArgs} args - Arguments to filter User_courses to count.
     * @example
     * // Count the number of User_courses
     * const count = await prisma.user_courses.count({
     *   where: {
     *     // ... the filter for the User_courses we want to count
     *   }
     * })
    **/
    count<T extends user_coursesCountArgs>(
      args?: Subset<T, user_coursesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_coursesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_coursesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_coursesAggregateArgs>(args: Subset<T, User_coursesAggregateArgs>): Prisma.PrismaPromise<GetUser_coursesAggregateType<T>>

    /**
     * Group by User_courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_coursesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_coursesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_coursesGroupByArgs['orderBy'] }
        : { orderBy?: user_coursesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_coursesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_coursesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_courses model
   */
  readonly fields: user_coursesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_courses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_coursesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    courses<T extends coursesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, coursesDefaultArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_courses model
   */
  interface user_coursesFieldRefs {
    readonly id: FieldRef<"user_courses", 'String'>
    readonly user_id: FieldRef<"user_courses", 'String'>
    readonly course_id: FieldRef<"user_courses", 'String'>
    readonly purchase_date: FieldRef<"user_courses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_courses findUnique
   */
  export type user_coursesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * Filter, which user_courses to fetch.
     */
    where: user_coursesWhereUniqueInput
  }

  /**
   * user_courses findUniqueOrThrow
   */
  export type user_coursesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * Filter, which user_courses to fetch.
     */
    where: user_coursesWhereUniqueInput
  }

  /**
   * user_courses findFirst
   */
  export type user_coursesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * Filter, which user_courses to fetch.
     */
    where?: user_coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_courses to fetch.
     */
    orderBy?: user_coursesOrderByWithRelationInput | user_coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_courses.
     */
    cursor?: user_coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_courses.
     */
    distinct?: User_coursesScalarFieldEnum | User_coursesScalarFieldEnum[]
  }

  /**
   * user_courses findFirstOrThrow
   */
  export type user_coursesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * Filter, which user_courses to fetch.
     */
    where?: user_coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_courses to fetch.
     */
    orderBy?: user_coursesOrderByWithRelationInput | user_coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_courses.
     */
    cursor?: user_coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_courses.
     */
    distinct?: User_coursesScalarFieldEnum | User_coursesScalarFieldEnum[]
  }

  /**
   * user_courses findMany
   */
  export type user_coursesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * Filter, which user_courses to fetch.
     */
    where?: user_coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_courses to fetch.
     */
    orderBy?: user_coursesOrderByWithRelationInput | user_coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_courses.
     */
    cursor?: user_coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_courses.
     */
    skip?: number
    distinct?: User_coursesScalarFieldEnum | User_coursesScalarFieldEnum[]
  }

  /**
   * user_courses create
   */
  export type user_coursesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * The data needed to create a user_courses.
     */
    data: XOR<user_coursesCreateInput, user_coursesUncheckedCreateInput>
  }

  /**
   * user_courses createMany
   */
  export type user_coursesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_courses.
     */
    data: user_coursesCreateManyInput | user_coursesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_courses createManyAndReturn
   */
  export type user_coursesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * The data used to create many user_courses.
     */
    data: user_coursesCreateManyInput | user_coursesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_courses update
   */
  export type user_coursesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * The data needed to update a user_courses.
     */
    data: XOR<user_coursesUpdateInput, user_coursesUncheckedUpdateInput>
    /**
     * Choose, which user_courses to update.
     */
    where: user_coursesWhereUniqueInput
  }

  /**
   * user_courses updateMany
   */
  export type user_coursesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_courses.
     */
    data: XOR<user_coursesUpdateManyMutationInput, user_coursesUncheckedUpdateManyInput>
    /**
     * Filter which user_courses to update
     */
    where?: user_coursesWhereInput
    /**
     * Limit how many user_courses to update.
     */
    limit?: number
  }

  /**
   * user_courses updateManyAndReturn
   */
  export type user_coursesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * The data used to update user_courses.
     */
    data: XOR<user_coursesUpdateManyMutationInput, user_coursesUncheckedUpdateManyInput>
    /**
     * Filter which user_courses to update
     */
    where?: user_coursesWhereInput
    /**
     * Limit how many user_courses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_courses upsert
   */
  export type user_coursesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * The filter to search for the user_courses to update in case it exists.
     */
    where: user_coursesWhereUniqueInput
    /**
     * In case the user_courses found by the `where` argument doesn't exist, create a new user_courses with this data.
     */
    create: XOR<user_coursesCreateInput, user_coursesUncheckedCreateInput>
    /**
     * In case the user_courses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_coursesUpdateInput, user_coursesUncheckedUpdateInput>
  }

  /**
   * user_courses delete
   */
  export type user_coursesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    /**
     * Filter which user_courses to delete.
     */
    where: user_coursesWhereUniqueInput
  }

  /**
   * user_courses deleteMany
   */
  export type user_coursesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_courses to delete
     */
    where?: user_coursesWhereInput
    /**
     * Limit how many user_courses to delete.
     */
    limit?: number
  }

  /**
   * user_courses without action
   */
  export type user_coursesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
  }


  /**
   * Model user_error_reports
   */

  export type AggregateUser_error_reports = {
    _count: User_error_reportsCountAggregateOutputType | null
    _min: User_error_reportsMinAggregateOutputType | null
    _max: User_error_reportsMaxAggregateOutputType | null
  }

  export type User_error_reportsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    content: string | null
    created_date: Date | null
    title: string | null
    post_id: string | null
    status: string | null
  }

  export type User_error_reportsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    content: string | null
    created_date: Date | null
    title: string | null
    post_id: string | null
    status: string | null
  }

  export type User_error_reportsCountAggregateOutputType = {
    id: number
    user_id: number
    content: number
    created_date: number
    title: number
    post_id: number
    status: number
    _all: number
  }


  export type User_error_reportsMinAggregateInputType = {
    id?: true
    user_id?: true
    content?: true
    created_date?: true
    title?: true
    post_id?: true
    status?: true
  }

  export type User_error_reportsMaxAggregateInputType = {
    id?: true
    user_id?: true
    content?: true
    created_date?: true
    title?: true
    post_id?: true
    status?: true
  }

  export type User_error_reportsCountAggregateInputType = {
    id?: true
    user_id?: true
    content?: true
    created_date?: true
    title?: true
    post_id?: true
    status?: true
    _all?: true
  }

  export type User_error_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_error_reports to aggregate.
     */
    where?: user_error_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_error_reports to fetch.
     */
    orderBy?: user_error_reportsOrderByWithRelationInput | user_error_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_error_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_error_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_error_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_error_reports
    **/
    _count?: true | User_error_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_error_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_error_reportsMaxAggregateInputType
  }

  export type GetUser_error_reportsAggregateType<T extends User_error_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_error_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_error_reports[P]>
      : GetScalarType<T[P], AggregateUser_error_reports[P]>
  }




  export type user_error_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_error_reportsWhereInput
    orderBy?: user_error_reportsOrderByWithAggregationInput | user_error_reportsOrderByWithAggregationInput[]
    by: User_error_reportsScalarFieldEnum[] | User_error_reportsScalarFieldEnum
    having?: user_error_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_error_reportsCountAggregateInputType | true
    _min?: User_error_reportsMinAggregateInputType
    _max?: User_error_reportsMaxAggregateInputType
  }

  export type User_error_reportsGroupByOutputType = {
    id: string
    user_id: string
    content: string
    created_date: Date
    title: string
    post_id: string
    status: string | null
    _count: User_error_reportsCountAggregateOutputType | null
    _min: User_error_reportsMinAggregateOutputType | null
    _max: User_error_reportsMaxAggregateOutputType | null
  }

  type GetUser_error_reportsGroupByPayload<T extends user_error_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_error_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_error_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_error_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], User_error_reportsGroupByOutputType[P]>
        }
      >
    >


  export type user_error_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    title?: boolean
    post_id?: boolean
    status?: boolean
    error_report_feedbacks?: boolean | user_error_reports$error_report_feedbacksArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | User_error_reportsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_error_reports"]>

  export type user_error_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    title?: boolean
    post_id?: boolean
    status?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_error_reports"]>

  export type user_error_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    title?: boolean
    post_id?: boolean
    status?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_error_reports"]>

  export type user_error_reportsSelectScalar = {
    id?: boolean
    user_id?: boolean
    content?: boolean
    created_date?: boolean
    title?: boolean
    post_id?: boolean
    status?: boolean
  }

  export type user_error_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "content" | "created_date" | "title" | "post_id" | "status", ExtArgs["result"]["user_error_reports"]>
  export type user_error_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    error_report_feedbacks?: boolean | user_error_reports$error_report_feedbacksArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | User_error_reportsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type user_error_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_error_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_error_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_error_reports"
    objects: {
      error_report_feedbacks: Prisma.$error_report_feedbacksPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      content: string
      created_date: Date
      title: string
      post_id: string
      status: string | null
    }, ExtArgs["result"]["user_error_reports"]>
    composites: {}
  }

  type user_error_reportsGetPayload<S extends boolean | null | undefined | user_error_reportsDefaultArgs> = $Result.GetResult<Prisma.$user_error_reportsPayload, S>

  type user_error_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_error_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_error_reportsCountAggregateInputType | true
    }

  export interface user_error_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_error_reports'], meta: { name: 'user_error_reports' } }
    /**
     * Find zero or one User_error_reports that matches the filter.
     * @param {user_error_reportsFindUniqueArgs} args - Arguments to find a User_error_reports
     * @example
     * // Get one User_error_reports
     * const user_error_reports = await prisma.user_error_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_error_reportsFindUniqueArgs>(args: SelectSubset<T, user_error_reportsFindUniqueArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_error_reports that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_error_reportsFindUniqueOrThrowArgs} args - Arguments to find a User_error_reports
     * @example
     * // Get one User_error_reports
     * const user_error_reports = await prisma.user_error_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_error_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_error_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_error_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_error_reportsFindFirstArgs} args - Arguments to find a User_error_reports
     * @example
     * // Get one User_error_reports
     * const user_error_reports = await prisma.user_error_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_error_reportsFindFirstArgs>(args?: SelectSubset<T, user_error_reportsFindFirstArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_error_reports that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_error_reportsFindFirstOrThrowArgs} args - Arguments to find a User_error_reports
     * @example
     * // Get one User_error_reports
     * const user_error_reports = await prisma.user_error_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_error_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_error_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_error_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_error_reportsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_error_reports
     * const user_error_reports = await prisma.user_error_reports.findMany()
     * 
     * // Get first 10 User_error_reports
     * const user_error_reports = await prisma.user_error_reports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_error_reportsWithIdOnly = await prisma.user_error_reports.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_error_reportsFindManyArgs>(args?: SelectSubset<T, user_error_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_error_reports.
     * @param {user_error_reportsCreateArgs} args - Arguments to create a User_error_reports.
     * @example
     * // Create one User_error_reports
     * const User_error_reports = await prisma.user_error_reports.create({
     *   data: {
     *     // ... data to create a User_error_reports
     *   }
     * })
     * 
     */
    create<T extends user_error_reportsCreateArgs>(args: SelectSubset<T, user_error_reportsCreateArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_error_reports.
     * @param {user_error_reportsCreateManyArgs} args - Arguments to create many User_error_reports.
     * @example
     * // Create many User_error_reports
     * const user_error_reports = await prisma.user_error_reports.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_error_reportsCreateManyArgs>(args?: SelectSubset<T, user_error_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_error_reports and returns the data saved in the database.
     * @param {user_error_reportsCreateManyAndReturnArgs} args - Arguments to create many User_error_reports.
     * @example
     * // Create many User_error_reports
     * const user_error_reports = await prisma.user_error_reports.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_error_reports and only return the `id`
     * const user_error_reportsWithIdOnly = await prisma.user_error_reports.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_error_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_error_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_error_reports.
     * @param {user_error_reportsDeleteArgs} args - Arguments to delete one User_error_reports.
     * @example
     * // Delete one User_error_reports
     * const User_error_reports = await prisma.user_error_reports.delete({
     *   where: {
     *     // ... filter to delete one User_error_reports
     *   }
     * })
     * 
     */
    delete<T extends user_error_reportsDeleteArgs>(args: SelectSubset<T, user_error_reportsDeleteArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_error_reports.
     * @param {user_error_reportsUpdateArgs} args - Arguments to update one User_error_reports.
     * @example
     * // Update one User_error_reports
     * const user_error_reports = await prisma.user_error_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_error_reportsUpdateArgs>(args: SelectSubset<T, user_error_reportsUpdateArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_error_reports.
     * @param {user_error_reportsDeleteManyArgs} args - Arguments to filter User_error_reports to delete.
     * @example
     * // Delete a few User_error_reports
     * const { count } = await prisma.user_error_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_error_reportsDeleteManyArgs>(args?: SelectSubset<T, user_error_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_error_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_error_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_error_reports
     * const user_error_reports = await prisma.user_error_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_error_reportsUpdateManyArgs>(args: SelectSubset<T, user_error_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_error_reports and returns the data updated in the database.
     * @param {user_error_reportsUpdateManyAndReturnArgs} args - Arguments to update many User_error_reports.
     * @example
     * // Update many User_error_reports
     * const user_error_reports = await prisma.user_error_reports.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_error_reports and only return the `id`
     * const user_error_reportsWithIdOnly = await prisma.user_error_reports.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_error_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_error_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_error_reports.
     * @param {user_error_reportsUpsertArgs} args - Arguments to update or create a User_error_reports.
     * @example
     * // Update or create a User_error_reports
     * const user_error_reports = await prisma.user_error_reports.upsert({
     *   create: {
     *     // ... data to create a User_error_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_error_reports we want to update
     *   }
     * })
     */
    upsert<T extends user_error_reportsUpsertArgs>(args: SelectSubset<T, user_error_reportsUpsertArgs<ExtArgs>>): Prisma__user_error_reportsClient<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_error_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_error_reportsCountArgs} args - Arguments to filter User_error_reports to count.
     * @example
     * // Count the number of User_error_reports
     * const count = await prisma.user_error_reports.count({
     *   where: {
     *     // ... the filter for the User_error_reports we want to count
     *   }
     * })
    **/
    count<T extends user_error_reportsCountArgs>(
      args?: Subset<T, user_error_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_error_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_error_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_error_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_error_reportsAggregateArgs>(args: Subset<T, User_error_reportsAggregateArgs>): Prisma.PrismaPromise<GetUser_error_reportsAggregateType<T>>

    /**
     * Group by User_error_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_error_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_error_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_error_reportsGroupByArgs['orderBy'] }
        : { orderBy?: user_error_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_error_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_error_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_error_reports model
   */
  readonly fields: user_error_reportsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_error_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_error_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    error_report_feedbacks<T extends user_error_reports$error_report_feedbacksArgs<ExtArgs> = {}>(args?: Subset<T, user_error_reports$error_report_feedbacksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_error_reports model
   */
  interface user_error_reportsFieldRefs {
    readonly id: FieldRef<"user_error_reports", 'String'>
    readonly user_id: FieldRef<"user_error_reports", 'String'>
    readonly content: FieldRef<"user_error_reports", 'String'>
    readonly created_date: FieldRef<"user_error_reports", 'DateTime'>
    readonly title: FieldRef<"user_error_reports", 'String'>
    readonly post_id: FieldRef<"user_error_reports", 'String'>
    readonly status: FieldRef<"user_error_reports", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_error_reports findUnique
   */
  export type user_error_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_error_reports to fetch.
     */
    where: user_error_reportsWhereUniqueInput
  }

  /**
   * user_error_reports findUniqueOrThrow
   */
  export type user_error_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_error_reports to fetch.
     */
    where: user_error_reportsWhereUniqueInput
  }

  /**
   * user_error_reports findFirst
   */
  export type user_error_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_error_reports to fetch.
     */
    where?: user_error_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_error_reports to fetch.
     */
    orderBy?: user_error_reportsOrderByWithRelationInput | user_error_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_error_reports.
     */
    cursor?: user_error_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_error_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_error_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_error_reports.
     */
    distinct?: User_error_reportsScalarFieldEnum | User_error_reportsScalarFieldEnum[]
  }

  /**
   * user_error_reports findFirstOrThrow
   */
  export type user_error_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_error_reports to fetch.
     */
    where?: user_error_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_error_reports to fetch.
     */
    orderBy?: user_error_reportsOrderByWithRelationInput | user_error_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_error_reports.
     */
    cursor?: user_error_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_error_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_error_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_error_reports.
     */
    distinct?: User_error_reportsScalarFieldEnum | User_error_reportsScalarFieldEnum[]
  }

  /**
   * user_error_reports findMany
   */
  export type user_error_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * Filter, which user_error_reports to fetch.
     */
    where?: user_error_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_error_reports to fetch.
     */
    orderBy?: user_error_reportsOrderByWithRelationInput | user_error_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_error_reports.
     */
    cursor?: user_error_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_error_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_error_reports.
     */
    skip?: number
    distinct?: User_error_reportsScalarFieldEnum | User_error_reportsScalarFieldEnum[]
  }

  /**
   * user_error_reports create
   */
  export type user_error_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_error_reports.
     */
    data: XOR<user_error_reportsCreateInput, user_error_reportsUncheckedCreateInput>
  }

  /**
   * user_error_reports createMany
   */
  export type user_error_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_error_reports.
     */
    data: user_error_reportsCreateManyInput | user_error_reportsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_error_reports createManyAndReturn
   */
  export type user_error_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * The data used to create many user_error_reports.
     */
    data: user_error_reportsCreateManyInput | user_error_reportsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_error_reports update
   */
  export type user_error_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_error_reports.
     */
    data: XOR<user_error_reportsUpdateInput, user_error_reportsUncheckedUpdateInput>
    /**
     * Choose, which user_error_reports to update.
     */
    where: user_error_reportsWhereUniqueInput
  }

  /**
   * user_error_reports updateMany
   */
  export type user_error_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_error_reports.
     */
    data: XOR<user_error_reportsUpdateManyMutationInput, user_error_reportsUncheckedUpdateManyInput>
    /**
     * Filter which user_error_reports to update
     */
    where?: user_error_reportsWhereInput
    /**
     * Limit how many user_error_reports to update.
     */
    limit?: number
  }

  /**
   * user_error_reports updateManyAndReturn
   */
  export type user_error_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * The data used to update user_error_reports.
     */
    data: XOR<user_error_reportsUpdateManyMutationInput, user_error_reportsUncheckedUpdateManyInput>
    /**
     * Filter which user_error_reports to update
     */
    where?: user_error_reportsWhereInput
    /**
     * Limit how many user_error_reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_error_reports upsert
   */
  export type user_error_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_error_reports to update in case it exists.
     */
    where: user_error_reportsWhereUniqueInput
    /**
     * In case the user_error_reports found by the `where` argument doesn't exist, create a new user_error_reports with this data.
     */
    create: XOR<user_error_reportsCreateInput, user_error_reportsUncheckedCreateInput>
    /**
     * In case the user_error_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_error_reportsUpdateInput, user_error_reportsUncheckedUpdateInput>
  }

  /**
   * user_error_reports delete
   */
  export type user_error_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    /**
     * Filter which user_error_reports to delete.
     */
    where: user_error_reportsWhereUniqueInput
  }

  /**
   * user_error_reports deleteMany
   */
  export type user_error_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_error_reports to delete
     */
    where?: user_error_reportsWhereInput
    /**
     * Limit how many user_error_reports to delete.
     */
    limit?: number
  }

  /**
   * user_error_reports.error_report_feedbacks
   */
  export type user_error_reports$error_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    where?: error_report_feedbacksWhereInput
    orderBy?: error_report_feedbacksOrderByWithRelationInput | error_report_feedbacksOrderByWithRelationInput[]
    cursor?: error_report_feedbacksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Error_report_feedbacksScalarFieldEnum | Error_report_feedbacksScalarFieldEnum[]
  }

  /**
   * user_error_reports without action
   */
  export type user_error_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
  }


  /**
   * Model user_packages
   */

  export type AggregateUser_packages = {
    _count: User_packagesCountAggregateOutputType | null
    _min: User_packagesMinAggregateOutputType | null
    _max: User_packagesMaxAggregateOutputType | null
  }

  export type User_packagesMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    package_id: string | null
    start_date: Date | null
    end_date: Date | null
    is_active: boolean | null
  }

  export type User_packagesMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    package_id: string | null
    start_date: Date | null
    end_date: Date | null
    is_active: boolean | null
  }

  export type User_packagesCountAggregateOutputType = {
    id: number
    user_id: number
    package_id: number
    start_date: number
    end_date: number
    is_active: number
    _all: number
  }


  export type User_packagesMinAggregateInputType = {
    id?: true
    user_id?: true
    package_id?: true
    start_date?: true
    end_date?: true
    is_active?: true
  }

  export type User_packagesMaxAggregateInputType = {
    id?: true
    user_id?: true
    package_id?: true
    start_date?: true
    end_date?: true
    is_active?: true
  }

  export type User_packagesCountAggregateInputType = {
    id?: true
    user_id?: true
    package_id?: true
    start_date?: true
    end_date?: true
    is_active?: true
    _all?: true
  }

  export type User_packagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_packages to aggregate.
     */
    where?: user_packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_packages to fetch.
     */
    orderBy?: user_packagesOrderByWithRelationInput | user_packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_packages
    **/
    _count?: true | User_packagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_packagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_packagesMaxAggregateInputType
  }

  export type GetUser_packagesAggregateType<T extends User_packagesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_packages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_packages[P]>
      : GetScalarType<T[P], AggregateUser_packages[P]>
  }




  export type user_packagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_packagesWhereInput
    orderBy?: user_packagesOrderByWithAggregationInput | user_packagesOrderByWithAggregationInput[]
    by: User_packagesScalarFieldEnum[] | User_packagesScalarFieldEnum
    having?: user_packagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_packagesCountAggregateInputType | true
    _min?: User_packagesMinAggregateInputType
    _max?: User_packagesMaxAggregateInputType
  }

  export type User_packagesGroupByOutputType = {
    id: string
    user_id: string
    package_id: string
    start_date: Date | null
    end_date: Date
    is_active: boolean | null
    _count: User_packagesCountAggregateOutputType | null
    _min: User_packagesMinAggregateOutputType | null
    _max: User_packagesMaxAggregateOutputType | null
  }

  type GetUser_packagesGroupByPayload<T extends user_packagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_packagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_packagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_packagesGroupByOutputType[P]>
            : GetScalarType<T[P], User_packagesGroupByOutputType[P]>
        }
      >
    >


  export type user_packagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    package_id?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    packages?: boolean | packagesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_packages"]>

  export type user_packagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    package_id?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    packages?: boolean | packagesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_packages"]>

  export type user_packagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    package_id?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    packages?: boolean | packagesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_packages"]>

  export type user_packagesSelectScalar = {
    id?: boolean
    user_id?: boolean
    package_id?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
  }

  export type user_packagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "package_id" | "start_date" | "end_date" | "is_active", ExtArgs["result"]["user_packages"]>
  export type user_packagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    packages?: boolean | packagesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_packagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    packages?: boolean | packagesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_packagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    packages?: boolean | packagesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_packagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_packages"
    objects: {
      packages: Prisma.$packagesPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      package_id: string
      start_date: Date | null
      end_date: Date
      is_active: boolean | null
    }, ExtArgs["result"]["user_packages"]>
    composites: {}
  }

  type user_packagesGetPayload<S extends boolean | null | undefined | user_packagesDefaultArgs> = $Result.GetResult<Prisma.$user_packagesPayload, S>

  type user_packagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_packagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_packagesCountAggregateInputType | true
    }

  export interface user_packagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_packages'], meta: { name: 'user_packages' } }
    /**
     * Find zero or one User_packages that matches the filter.
     * @param {user_packagesFindUniqueArgs} args - Arguments to find a User_packages
     * @example
     * // Get one User_packages
     * const user_packages = await prisma.user_packages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_packagesFindUniqueArgs>(args: SelectSubset<T, user_packagesFindUniqueArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_packages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_packagesFindUniqueOrThrowArgs} args - Arguments to find a User_packages
     * @example
     * // Get one User_packages
     * const user_packages = await prisma.user_packages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_packagesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_packagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_packages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_packagesFindFirstArgs} args - Arguments to find a User_packages
     * @example
     * // Get one User_packages
     * const user_packages = await prisma.user_packages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_packagesFindFirstArgs>(args?: SelectSubset<T, user_packagesFindFirstArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_packages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_packagesFindFirstOrThrowArgs} args - Arguments to find a User_packages
     * @example
     * // Get one User_packages
     * const user_packages = await prisma.user_packages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_packagesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_packagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_packages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_packagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_packages
     * const user_packages = await prisma.user_packages.findMany()
     * 
     * // Get first 10 User_packages
     * const user_packages = await prisma.user_packages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_packagesWithIdOnly = await prisma.user_packages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_packagesFindManyArgs>(args?: SelectSubset<T, user_packagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_packages.
     * @param {user_packagesCreateArgs} args - Arguments to create a User_packages.
     * @example
     * // Create one User_packages
     * const User_packages = await prisma.user_packages.create({
     *   data: {
     *     // ... data to create a User_packages
     *   }
     * })
     * 
     */
    create<T extends user_packagesCreateArgs>(args: SelectSubset<T, user_packagesCreateArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_packages.
     * @param {user_packagesCreateManyArgs} args - Arguments to create many User_packages.
     * @example
     * // Create many User_packages
     * const user_packages = await prisma.user_packages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_packagesCreateManyArgs>(args?: SelectSubset<T, user_packagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_packages and returns the data saved in the database.
     * @param {user_packagesCreateManyAndReturnArgs} args - Arguments to create many User_packages.
     * @example
     * // Create many User_packages
     * const user_packages = await prisma.user_packages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_packages and only return the `id`
     * const user_packagesWithIdOnly = await prisma.user_packages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_packagesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_packagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_packages.
     * @param {user_packagesDeleteArgs} args - Arguments to delete one User_packages.
     * @example
     * // Delete one User_packages
     * const User_packages = await prisma.user_packages.delete({
     *   where: {
     *     // ... filter to delete one User_packages
     *   }
     * })
     * 
     */
    delete<T extends user_packagesDeleteArgs>(args: SelectSubset<T, user_packagesDeleteArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_packages.
     * @param {user_packagesUpdateArgs} args - Arguments to update one User_packages.
     * @example
     * // Update one User_packages
     * const user_packages = await prisma.user_packages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_packagesUpdateArgs>(args: SelectSubset<T, user_packagesUpdateArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_packages.
     * @param {user_packagesDeleteManyArgs} args - Arguments to filter User_packages to delete.
     * @example
     * // Delete a few User_packages
     * const { count } = await prisma.user_packages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_packagesDeleteManyArgs>(args?: SelectSubset<T, user_packagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_packagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_packages
     * const user_packages = await prisma.user_packages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_packagesUpdateManyArgs>(args: SelectSubset<T, user_packagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_packages and returns the data updated in the database.
     * @param {user_packagesUpdateManyAndReturnArgs} args - Arguments to update many User_packages.
     * @example
     * // Update many User_packages
     * const user_packages = await prisma.user_packages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_packages and only return the `id`
     * const user_packagesWithIdOnly = await prisma.user_packages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_packagesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_packagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_packages.
     * @param {user_packagesUpsertArgs} args - Arguments to update or create a User_packages.
     * @example
     * // Update or create a User_packages
     * const user_packages = await prisma.user_packages.upsert({
     *   create: {
     *     // ... data to create a User_packages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_packages we want to update
     *   }
     * })
     */
    upsert<T extends user_packagesUpsertArgs>(args: SelectSubset<T, user_packagesUpsertArgs<ExtArgs>>): Prisma__user_packagesClient<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_packagesCountArgs} args - Arguments to filter User_packages to count.
     * @example
     * // Count the number of User_packages
     * const count = await prisma.user_packages.count({
     *   where: {
     *     // ... the filter for the User_packages we want to count
     *   }
     * })
    **/
    count<T extends user_packagesCountArgs>(
      args?: Subset<T, user_packagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_packagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_packagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_packagesAggregateArgs>(args: Subset<T, User_packagesAggregateArgs>): Prisma.PrismaPromise<GetUser_packagesAggregateType<T>>

    /**
     * Group by User_packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_packagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_packagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_packagesGroupByArgs['orderBy'] }
        : { orderBy?: user_packagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_packagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_packagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_packages model
   */
  readonly fields: user_packagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_packages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_packagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    packages<T extends packagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, packagesDefaultArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_packages model
   */
  interface user_packagesFieldRefs {
    readonly id: FieldRef<"user_packages", 'String'>
    readonly user_id: FieldRef<"user_packages", 'String'>
    readonly package_id: FieldRef<"user_packages", 'String'>
    readonly start_date: FieldRef<"user_packages", 'DateTime'>
    readonly end_date: FieldRef<"user_packages", 'DateTime'>
    readonly is_active: FieldRef<"user_packages", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * user_packages findUnique
   */
  export type user_packagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * Filter, which user_packages to fetch.
     */
    where: user_packagesWhereUniqueInput
  }

  /**
   * user_packages findUniqueOrThrow
   */
  export type user_packagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * Filter, which user_packages to fetch.
     */
    where: user_packagesWhereUniqueInput
  }

  /**
   * user_packages findFirst
   */
  export type user_packagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * Filter, which user_packages to fetch.
     */
    where?: user_packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_packages to fetch.
     */
    orderBy?: user_packagesOrderByWithRelationInput | user_packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_packages.
     */
    cursor?: user_packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_packages.
     */
    distinct?: User_packagesScalarFieldEnum | User_packagesScalarFieldEnum[]
  }

  /**
   * user_packages findFirstOrThrow
   */
  export type user_packagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * Filter, which user_packages to fetch.
     */
    where?: user_packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_packages to fetch.
     */
    orderBy?: user_packagesOrderByWithRelationInput | user_packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_packages.
     */
    cursor?: user_packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_packages.
     */
    distinct?: User_packagesScalarFieldEnum | User_packagesScalarFieldEnum[]
  }

  /**
   * user_packages findMany
   */
  export type user_packagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * Filter, which user_packages to fetch.
     */
    where?: user_packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_packages to fetch.
     */
    orderBy?: user_packagesOrderByWithRelationInput | user_packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_packages.
     */
    cursor?: user_packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_packages.
     */
    skip?: number
    distinct?: User_packagesScalarFieldEnum | User_packagesScalarFieldEnum[]
  }

  /**
   * user_packages create
   */
  export type user_packagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * The data needed to create a user_packages.
     */
    data: XOR<user_packagesCreateInput, user_packagesUncheckedCreateInput>
  }

  /**
   * user_packages createMany
   */
  export type user_packagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_packages.
     */
    data: user_packagesCreateManyInput | user_packagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_packages createManyAndReturn
   */
  export type user_packagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * The data used to create many user_packages.
     */
    data: user_packagesCreateManyInput | user_packagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_packages update
   */
  export type user_packagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * The data needed to update a user_packages.
     */
    data: XOR<user_packagesUpdateInput, user_packagesUncheckedUpdateInput>
    /**
     * Choose, which user_packages to update.
     */
    where: user_packagesWhereUniqueInput
  }

  /**
   * user_packages updateMany
   */
  export type user_packagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_packages.
     */
    data: XOR<user_packagesUpdateManyMutationInput, user_packagesUncheckedUpdateManyInput>
    /**
     * Filter which user_packages to update
     */
    where?: user_packagesWhereInput
    /**
     * Limit how many user_packages to update.
     */
    limit?: number
  }

  /**
   * user_packages updateManyAndReturn
   */
  export type user_packagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * The data used to update user_packages.
     */
    data: XOR<user_packagesUpdateManyMutationInput, user_packagesUncheckedUpdateManyInput>
    /**
     * Filter which user_packages to update
     */
    where?: user_packagesWhereInput
    /**
     * Limit how many user_packages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_packages upsert
   */
  export type user_packagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * The filter to search for the user_packages to update in case it exists.
     */
    where: user_packagesWhereUniqueInput
    /**
     * In case the user_packages found by the `where` argument doesn't exist, create a new user_packages with this data.
     */
    create: XOR<user_packagesCreateInput, user_packagesUncheckedCreateInput>
    /**
     * In case the user_packages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_packagesUpdateInput, user_packagesUncheckedUpdateInput>
  }

  /**
   * user_packages delete
   */
  export type user_packagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    /**
     * Filter which user_packages to delete.
     */
    where: user_packagesWhereUniqueInput
  }

  /**
   * user_packages deleteMany
   */
  export type user_packagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_packages to delete
     */
    where?: user_packagesWhereInput
    /**
     * Limit how many user_packages to delete.
     */
    limit?: number
  }

  /**
   * user_packages without action
   */
  export type user_packagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
  }


  /**
   * Model user_profile_history
   */

  export type AggregateUser_profile_history = {
    _count: User_profile_historyCountAggregateOutputType | null
    _min: User_profile_historyMinAggregateOutputType | null
    _max: User_profile_historyMaxAggregateOutputType | null
  }

  export type User_profile_historyMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    changed_by: string | null
    changed_at: Date | null
  }

  export type User_profile_historyMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    changed_by: string | null
    changed_at: Date | null
  }

  export type User_profile_historyCountAggregateOutputType = {
    id: number
    user_id: number
    old_data: number
    new_data: number
    changed_by: number
    changed_at: number
    _all: number
  }


  export type User_profile_historyMinAggregateInputType = {
    id?: true
    user_id?: true
    changed_by?: true
    changed_at?: true
  }

  export type User_profile_historyMaxAggregateInputType = {
    id?: true
    user_id?: true
    changed_by?: true
    changed_at?: true
  }

  export type User_profile_historyCountAggregateInputType = {
    id?: true
    user_id?: true
    old_data?: true
    new_data?: true
    changed_by?: true
    changed_at?: true
    _all?: true
  }

  export type User_profile_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profile_history to aggregate.
     */
    where?: user_profile_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profile_histories to fetch.
     */
    orderBy?: user_profile_historyOrderByWithRelationInput | user_profile_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_profile_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profile_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profile_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_profile_histories
    **/
    _count?: true | User_profile_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_profile_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_profile_historyMaxAggregateInputType
  }

  export type GetUser_profile_historyAggregateType<T extends User_profile_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_profile_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_profile_history[P]>
      : GetScalarType<T[P], AggregateUser_profile_history[P]>
  }




  export type user_profile_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_profile_historyWhereInput
    orderBy?: user_profile_historyOrderByWithAggregationInput | user_profile_historyOrderByWithAggregationInput[]
    by: User_profile_historyScalarFieldEnum[] | User_profile_historyScalarFieldEnum
    having?: user_profile_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_profile_historyCountAggregateInputType | true
    _min?: User_profile_historyMinAggregateInputType
    _max?: User_profile_historyMaxAggregateInputType
  }

  export type User_profile_historyGroupByOutputType = {
    id: string
    user_id: string
    old_data: JsonValue | null
    new_data: JsonValue | null
    changed_by: string | null
    changed_at: Date | null
    _count: User_profile_historyCountAggregateOutputType | null
    _min: User_profile_historyMinAggregateOutputType | null
    _max: User_profile_historyMaxAggregateOutputType | null
  }

  type GetUser_profile_historyGroupByPayload<T extends user_profile_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_profile_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_profile_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_profile_historyGroupByOutputType[P]>
            : GetScalarType<T[P], User_profile_historyGroupByOutputType[P]>
        }
      >
    >


  export type user_profile_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    old_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    changed_at?: boolean
    users_user_profile_history_changed_byTousers?: boolean | user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>
    users_user_profile_history_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile_history"]>

  export type user_profile_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    old_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    changed_at?: boolean
    users_user_profile_history_changed_byTousers?: boolean | user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>
    users_user_profile_history_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile_history"]>

  export type user_profile_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    old_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    changed_at?: boolean
    users_user_profile_history_changed_byTousers?: boolean | user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>
    users_user_profile_history_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile_history"]>

  export type user_profile_historySelectScalar = {
    id?: boolean
    user_id?: boolean
    old_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    changed_at?: boolean
  }

  export type user_profile_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "old_data" | "new_data" | "changed_by" | "changed_at", ExtArgs["result"]["user_profile_history"]>
  export type user_profile_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_profile_history_changed_byTousers?: boolean | user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>
    users_user_profile_history_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_profile_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_profile_history_changed_byTousers?: boolean | user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>
    users_user_profile_history_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_profile_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_profile_history_changed_byTousers?: boolean | user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>
    users_user_profile_history_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_profile_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_profile_history"
    objects: {
      users_user_profile_history_changed_byTousers: Prisma.$usersPayload<ExtArgs> | null
      users_user_profile_history_user_idTousers: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      old_data: Prisma.JsonValue | null
      new_data: Prisma.JsonValue | null
      changed_by: string | null
      changed_at: Date | null
    }, ExtArgs["result"]["user_profile_history"]>
    composites: {}
  }

  type user_profile_historyGetPayload<S extends boolean | null | undefined | user_profile_historyDefaultArgs> = $Result.GetResult<Prisma.$user_profile_historyPayload, S>

  type user_profile_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_profile_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_profile_historyCountAggregateInputType | true
    }

  export interface user_profile_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_profile_history'], meta: { name: 'user_profile_history' } }
    /**
     * Find zero or one User_profile_history that matches the filter.
     * @param {user_profile_historyFindUniqueArgs} args - Arguments to find a User_profile_history
     * @example
     * // Get one User_profile_history
     * const user_profile_history = await prisma.user_profile_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_profile_historyFindUniqueArgs>(args: SelectSubset<T, user_profile_historyFindUniqueArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_profile_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_profile_historyFindUniqueOrThrowArgs} args - Arguments to find a User_profile_history
     * @example
     * // Get one User_profile_history
     * const user_profile_history = await prisma.user_profile_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_profile_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, user_profile_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profile_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profile_historyFindFirstArgs} args - Arguments to find a User_profile_history
     * @example
     * // Get one User_profile_history
     * const user_profile_history = await prisma.user_profile_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_profile_historyFindFirstArgs>(args?: SelectSubset<T, user_profile_historyFindFirstArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profile_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profile_historyFindFirstOrThrowArgs} args - Arguments to find a User_profile_history
     * @example
     * // Get one User_profile_history
     * const user_profile_history = await prisma.user_profile_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_profile_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, user_profile_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_profile_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profile_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_profile_histories
     * const user_profile_histories = await prisma.user_profile_history.findMany()
     * 
     * // Get first 10 User_profile_histories
     * const user_profile_histories = await prisma.user_profile_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_profile_historyWithIdOnly = await prisma.user_profile_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_profile_historyFindManyArgs>(args?: SelectSubset<T, user_profile_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_profile_history.
     * @param {user_profile_historyCreateArgs} args - Arguments to create a User_profile_history.
     * @example
     * // Create one User_profile_history
     * const User_profile_history = await prisma.user_profile_history.create({
     *   data: {
     *     // ... data to create a User_profile_history
     *   }
     * })
     * 
     */
    create<T extends user_profile_historyCreateArgs>(args: SelectSubset<T, user_profile_historyCreateArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_profile_histories.
     * @param {user_profile_historyCreateManyArgs} args - Arguments to create many User_profile_histories.
     * @example
     * // Create many User_profile_histories
     * const user_profile_history = await prisma.user_profile_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_profile_historyCreateManyArgs>(args?: SelectSubset<T, user_profile_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_profile_histories and returns the data saved in the database.
     * @param {user_profile_historyCreateManyAndReturnArgs} args - Arguments to create many User_profile_histories.
     * @example
     * // Create many User_profile_histories
     * const user_profile_history = await prisma.user_profile_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_profile_histories and only return the `id`
     * const user_profile_historyWithIdOnly = await prisma.user_profile_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_profile_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, user_profile_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_profile_history.
     * @param {user_profile_historyDeleteArgs} args - Arguments to delete one User_profile_history.
     * @example
     * // Delete one User_profile_history
     * const User_profile_history = await prisma.user_profile_history.delete({
     *   where: {
     *     // ... filter to delete one User_profile_history
     *   }
     * })
     * 
     */
    delete<T extends user_profile_historyDeleteArgs>(args: SelectSubset<T, user_profile_historyDeleteArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_profile_history.
     * @param {user_profile_historyUpdateArgs} args - Arguments to update one User_profile_history.
     * @example
     * // Update one User_profile_history
     * const user_profile_history = await prisma.user_profile_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_profile_historyUpdateArgs>(args: SelectSubset<T, user_profile_historyUpdateArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_profile_histories.
     * @param {user_profile_historyDeleteManyArgs} args - Arguments to filter User_profile_histories to delete.
     * @example
     * // Delete a few User_profile_histories
     * const { count } = await prisma.user_profile_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_profile_historyDeleteManyArgs>(args?: SelectSubset<T, user_profile_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profile_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profile_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_profile_histories
     * const user_profile_history = await prisma.user_profile_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_profile_historyUpdateManyArgs>(args: SelectSubset<T, user_profile_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profile_histories and returns the data updated in the database.
     * @param {user_profile_historyUpdateManyAndReturnArgs} args - Arguments to update many User_profile_histories.
     * @example
     * // Update many User_profile_histories
     * const user_profile_history = await prisma.user_profile_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_profile_histories and only return the `id`
     * const user_profile_historyWithIdOnly = await prisma.user_profile_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_profile_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, user_profile_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_profile_history.
     * @param {user_profile_historyUpsertArgs} args - Arguments to update or create a User_profile_history.
     * @example
     * // Update or create a User_profile_history
     * const user_profile_history = await prisma.user_profile_history.upsert({
     *   create: {
     *     // ... data to create a User_profile_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_profile_history we want to update
     *   }
     * })
     */
    upsert<T extends user_profile_historyUpsertArgs>(args: SelectSubset<T, user_profile_historyUpsertArgs<ExtArgs>>): Prisma__user_profile_historyClient<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_profile_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profile_historyCountArgs} args - Arguments to filter User_profile_histories to count.
     * @example
     * // Count the number of User_profile_histories
     * const count = await prisma.user_profile_history.count({
     *   where: {
     *     // ... the filter for the User_profile_histories we want to count
     *   }
     * })
    **/
    count<T extends user_profile_historyCountArgs>(
      args?: Subset<T, user_profile_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_profile_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_profile_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_profile_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_profile_historyAggregateArgs>(args: Subset<T, User_profile_historyAggregateArgs>): Prisma.PrismaPromise<GetUser_profile_historyAggregateType<T>>

    /**
     * Group by User_profile_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profile_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_profile_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_profile_historyGroupByArgs['orderBy'] }
        : { orderBy?: user_profile_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_profile_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_profile_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_profile_history model
   */
  readonly fields: user_profile_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_profile_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_profile_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_user_profile_history_changed_byTousers<T extends user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users_user_profile_history_user_idTousers<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_profile_history model
   */
  interface user_profile_historyFieldRefs {
    readonly id: FieldRef<"user_profile_history", 'String'>
    readonly user_id: FieldRef<"user_profile_history", 'String'>
    readonly old_data: FieldRef<"user_profile_history", 'Json'>
    readonly new_data: FieldRef<"user_profile_history", 'Json'>
    readonly changed_by: FieldRef<"user_profile_history", 'String'>
    readonly changed_at: FieldRef<"user_profile_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_profile_history findUnique
   */
  export type user_profile_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * Filter, which user_profile_history to fetch.
     */
    where: user_profile_historyWhereUniqueInput
  }

  /**
   * user_profile_history findUniqueOrThrow
   */
  export type user_profile_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * Filter, which user_profile_history to fetch.
     */
    where: user_profile_historyWhereUniqueInput
  }

  /**
   * user_profile_history findFirst
   */
  export type user_profile_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * Filter, which user_profile_history to fetch.
     */
    where?: user_profile_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profile_histories to fetch.
     */
    orderBy?: user_profile_historyOrderByWithRelationInput | user_profile_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profile_histories.
     */
    cursor?: user_profile_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profile_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profile_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profile_histories.
     */
    distinct?: User_profile_historyScalarFieldEnum | User_profile_historyScalarFieldEnum[]
  }

  /**
   * user_profile_history findFirstOrThrow
   */
  export type user_profile_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * Filter, which user_profile_history to fetch.
     */
    where?: user_profile_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profile_histories to fetch.
     */
    orderBy?: user_profile_historyOrderByWithRelationInput | user_profile_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profile_histories.
     */
    cursor?: user_profile_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profile_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profile_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profile_histories.
     */
    distinct?: User_profile_historyScalarFieldEnum | User_profile_historyScalarFieldEnum[]
  }

  /**
   * user_profile_history findMany
   */
  export type user_profile_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * Filter, which user_profile_histories to fetch.
     */
    where?: user_profile_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profile_histories to fetch.
     */
    orderBy?: user_profile_historyOrderByWithRelationInput | user_profile_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_profile_histories.
     */
    cursor?: user_profile_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profile_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profile_histories.
     */
    skip?: number
    distinct?: User_profile_historyScalarFieldEnum | User_profile_historyScalarFieldEnum[]
  }

  /**
   * user_profile_history create
   */
  export type user_profile_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a user_profile_history.
     */
    data: XOR<user_profile_historyCreateInput, user_profile_historyUncheckedCreateInput>
  }

  /**
   * user_profile_history createMany
   */
  export type user_profile_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_profile_histories.
     */
    data: user_profile_historyCreateManyInput | user_profile_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_profile_history createManyAndReturn
   */
  export type user_profile_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * The data used to create many user_profile_histories.
     */
    data: user_profile_historyCreateManyInput | user_profile_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_profile_history update
   */
  export type user_profile_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a user_profile_history.
     */
    data: XOR<user_profile_historyUpdateInput, user_profile_historyUncheckedUpdateInput>
    /**
     * Choose, which user_profile_history to update.
     */
    where: user_profile_historyWhereUniqueInput
  }

  /**
   * user_profile_history updateMany
   */
  export type user_profile_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_profile_histories.
     */
    data: XOR<user_profile_historyUpdateManyMutationInput, user_profile_historyUncheckedUpdateManyInput>
    /**
     * Filter which user_profile_histories to update
     */
    where?: user_profile_historyWhereInput
    /**
     * Limit how many user_profile_histories to update.
     */
    limit?: number
  }

  /**
   * user_profile_history updateManyAndReturn
   */
  export type user_profile_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * The data used to update user_profile_histories.
     */
    data: XOR<user_profile_historyUpdateManyMutationInput, user_profile_historyUncheckedUpdateManyInput>
    /**
     * Filter which user_profile_histories to update
     */
    where?: user_profile_historyWhereInput
    /**
     * Limit how many user_profile_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_profile_history upsert
   */
  export type user_profile_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the user_profile_history to update in case it exists.
     */
    where: user_profile_historyWhereUniqueInput
    /**
     * In case the user_profile_history found by the `where` argument doesn't exist, create a new user_profile_history with this data.
     */
    create: XOR<user_profile_historyCreateInput, user_profile_historyUncheckedCreateInput>
    /**
     * In case the user_profile_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_profile_historyUpdateInput, user_profile_historyUncheckedUpdateInput>
  }

  /**
   * user_profile_history delete
   */
  export type user_profile_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    /**
     * Filter which user_profile_history to delete.
     */
    where: user_profile_historyWhereUniqueInput
  }

  /**
   * user_profile_history deleteMany
   */
  export type user_profile_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profile_histories to delete
     */
    where?: user_profile_historyWhereInput
    /**
     * Limit how many user_profile_histories to delete.
     */
    limit?: number
  }

  /**
   * user_profile_history.users_user_profile_history_changed_byTousers
   */
  export type user_profile_history$users_user_profile_history_changed_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * user_profile_history without action
   */
  export type user_profile_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
  }


  /**
   * Model user_progress
   */

  export type AggregateUser_progress = {
    _count: User_progressCountAggregateOutputType | null
    _avg: User_progressAvgAggregateOutputType | null
    _sum: User_progressSumAggregateOutputType | null
    _min: User_progressMinAggregateOutputType | null
    _max: User_progressMaxAggregateOutputType | null
  }

  export type User_progressAvgAggregateOutputType = {
    level: number | null
  }

  export type User_progressSumAggregateOutputType = {
    level: number | null
  }

  export type User_progressMinAggregateOutputType = {
    id: string | null
    word_id: string | null
    user_id: string | null
    level: number | null
    createdstudydate: Date | null
    updatedstudydate: Date | null
  }

  export type User_progressMaxAggregateOutputType = {
    id: string | null
    word_id: string | null
    user_id: string | null
    level: number | null
    createdstudydate: Date | null
    updatedstudydate: Date | null
  }

  export type User_progressCountAggregateOutputType = {
    id: number
    word_id: number
    user_id: number
    level: number
    createdstudydate: number
    updatedstudydate: number
    _all: number
  }


  export type User_progressAvgAggregateInputType = {
    level?: true
  }

  export type User_progressSumAggregateInputType = {
    level?: true
  }

  export type User_progressMinAggregateInputType = {
    id?: true
    word_id?: true
    user_id?: true
    level?: true
    createdstudydate?: true
    updatedstudydate?: true
  }

  export type User_progressMaxAggregateInputType = {
    id?: true
    word_id?: true
    user_id?: true
    level?: true
    createdstudydate?: true
    updatedstudydate?: true
  }

  export type User_progressCountAggregateInputType = {
    id?: true
    word_id?: true
    user_id?: true
    level?: true
    createdstudydate?: true
    updatedstudydate?: true
    _all?: true
  }

  export type User_progressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_progress to aggregate.
     */
    where?: user_progressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_progresses to fetch.
     */
    orderBy?: user_progressOrderByWithRelationInput | user_progressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_progressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_progresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_progresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_progresses
    **/
    _count?: true | User_progressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_progressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_progressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_progressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_progressMaxAggregateInputType
  }

  export type GetUser_progressAggregateType<T extends User_progressAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_progress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_progress[P]>
      : GetScalarType<T[P], AggregateUser_progress[P]>
  }




  export type user_progressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_progressWhereInput
    orderBy?: user_progressOrderByWithAggregationInput | user_progressOrderByWithAggregationInput[]
    by: User_progressScalarFieldEnum[] | User_progressScalarFieldEnum
    having?: user_progressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_progressCountAggregateInputType | true
    _avg?: User_progressAvgAggregateInputType
    _sum?: User_progressSumAggregateInputType
    _min?: User_progressMinAggregateInputType
    _max?: User_progressMaxAggregateInputType
  }

  export type User_progressGroupByOutputType = {
    id: string
    word_id: string
    user_id: string
    level: number
    createdstudydate: Date | null
    updatedstudydate: Date | null
    _count: User_progressCountAggregateOutputType | null
    _avg: User_progressAvgAggregateOutputType | null
    _sum: User_progressSumAggregateOutputType | null
    _min: User_progressMinAggregateOutputType | null
    _max: User_progressMaxAggregateOutputType | null
  }

  type GetUser_progressGroupByPayload<T extends user_progressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_progressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_progressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_progressGroupByOutputType[P]>
            : GetScalarType<T[P], User_progressGroupByOutputType[P]>
        }
      >
    >


  export type user_progressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    word_id?: boolean
    user_id?: boolean
    level?: boolean
    createdstudydate?: boolean
    updatedstudydate?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    words?: boolean | wordsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_progress"]>

  export type user_progressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    word_id?: boolean
    user_id?: boolean
    level?: boolean
    createdstudydate?: boolean
    updatedstudydate?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    words?: boolean | wordsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_progress"]>

  export type user_progressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    word_id?: boolean
    user_id?: boolean
    level?: boolean
    createdstudydate?: boolean
    updatedstudydate?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    words?: boolean | wordsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_progress"]>

  export type user_progressSelectScalar = {
    id?: boolean
    word_id?: boolean
    user_id?: boolean
    level?: boolean
    createdstudydate?: boolean
    updatedstudydate?: boolean
  }

  export type user_progressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "word_id" | "user_id" | "level" | "createdstudydate" | "updatedstudydate", ExtArgs["result"]["user_progress"]>
  export type user_progressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    words?: boolean | wordsDefaultArgs<ExtArgs>
  }
  export type user_progressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    words?: boolean | wordsDefaultArgs<ExtArgs>
  }
  export type user_progressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    words?: boolean | wordsDefaultArgs<ExtArgs>
  }

  export type $user_progressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_progress"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      words: Prisma.$wordsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      word_id: string
      user_id: string
      level: number
      createdstudydate: Date | null
      updatedstudydate: Date | null
    }, ExtArgs["result"]["user_progress"]>
    composites: {}
  }

  type user_progressGetPayload<S extends boolean | null | undefined | user_progressDefaultArgs> = $Result.GetResult<Prisma.$user_progressPayload, S>

  type user_progressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_progressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_progressCountAggregateInputType | true
    }

  export interface user_progressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_progress'], meta: { name: 'user_progress' } }
    /**
     * Find zero or one User_progress that matches the filter.
     * @param {user_progressFindUniqueArgs} args - Arguments to find a User_progress
     * @example
     * // Get one User_progress
     * const user_progress = await prisma.user_progress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_progressFindUniqueArgs>(args: SelectSubset<T, user_progressFindUniqueArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_progress that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_progressFindUniqueOrThrowArgs} args - Arguments to find a User_progress
     * @example
     * // Get one User_progress
     * const user_progress = await prisma.user_progress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_progressFindUniqueOrThrowArgs>(args: SelectSubset<T, user_progressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_progress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_progressFindFirstArgs} args - Arguments to find a User_progress
     * @example
     * // Get one User_progress
     * const user_progress = await prisma.user_progress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_progressFindFirstArgs>(args?: SelectSubset<T, user_progressFindFirstArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_progress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_progressFindFirstOrThrowArgs} args - Arguments to find a User_progress
     * @example
     * // Get one User_progress
     * const user_progress = await prisma.user_progress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_progressFindFirstOrThrowArgs>(args?: SelectSubset<T, user_progressFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_progresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_progressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_progresses
     * const user_progresses = await prisma.user_progress.findMany()
     * 
     * // Get first 10 User_progresses
     * const user_progresses = await prisma.user_progress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_progressWithIdOnly = await prisma.user_progress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_progressFindManyArgs>(args?: SelectSubset<T, user_progressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_progress.
     * @param {user_progressCreateArgs} args - Arguments to create a User_progress.
     * @example
     * // Create one User_progress
     * const User_progress = await prisma.user_progress.create({
     *   data: {
     *     // ... data to create a User_progress
     *   }
     * })
     * 
     */
    create<T extends user_progressCreateArgs>(args: SelectSubset<T, user_progressCreateArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_progresses.
     * @param {user_progressCreateManyArgs} args - Arguments to create many User_progresses.
     * @example
     * // Create many User_progresses
     * const user_progress = await prisma.user_progress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_progressCreateManyArgs>(args?: SelectSubset<T, user_progressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_progresses and returns the data saved in the database.
     * @param {user_progressCreateManyAndReturnArgs} args - Arguments to create many User_progresses.
     * @example
     * // Create many User_progresses
     * const user_progress = await prisma.user_progress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_progresses and only return the `id`
     * const user_progressWithIdOnly = await prisma.user_progress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_progressCreateManyAndReturnArgs>(args?: SelectSubset<T, user_progressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_progress.
     * @param {user_progressDeleteArgs} args - Arguments to delete one User_progress.
     * @example
     * // Delete one User_progress
     * const User_progress = await prisma.user_progress.delete({
     *   where: {
     *     // ... filter to delete one User_progress
     *   }
     * })
     * 
     */
    delete<T extends user_progressDeleteArgs>(args: SelectSubset<T, user_progressDeleteArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_progress.
     * @param {user_progressUpdateArgs} args - Arguments to update one User_progress.
     * @example
     * // Update one User_progress
     * const user_progress = await prisma.user_progress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_progressUpdateArgs>(args: SelectSubset<T, user_progressUpdateArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_progresses.
     * @param {user_progressDeleteManyArgs} args - Arguments to filter User_progresses to delete.
     * @example
     * // Delete a few User_progresses
     * const { count } = await prisma.user_progress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_progressDeleteManyArgs>(args?: SelectSubset<T, user_progressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_progresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_progressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_progresses
     * const user_progress = await prisma.user_progress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_progressUpdateManyArgs>(args: SelectSubset<T, user_progressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_progresses and returns the data updated in the database.
     * @param {user_progressUpdateManyAndReturnArgs} args - Arguments to update many User_progresses.
     * @example
     * // Update many User_progresses
     * const user_progress = await prisma.user_progress.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_progresses and only return the `id`
     * const user_progressWithIdOnly = await prisma.user_progress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_progressUpdateManyAndReturnArgs>(args: SelectSubset<T, user_progressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_progress.
     * @param {user_progressUpsertArgs} args - Arguments to update or create a User_progress.
     * @example
     * // Update or create a User_progress
     * const user_progress = await prisma.user_progress.upsert({
     *   create: {
     *     // ... data to create a User_progress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_progress we want to update
     *   }
     * })
     */
    upsert<T extends user_progressUpsertArgs>(args: SelectSubset<T, user_progressUpsertArgs<ExtArgs>>): Prisma__user_progressClient<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_progresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_progressCountArgs} args - Arguments to filter User_progresses to count.
     * @example
     * // Count the number of User_progresses
     * const count = await prisma.user_progress.count({
     *   where: {
     *     // ... the filter for the User_progresses we want to count
     *   }
     * })
    **/
    count<T extends user_progressCountArgs>(
      args?: Subset<T, user_progressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_progressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_progress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_progressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_progressAggregateArgs>(args: Subset<T, User_progressAggregateArgs>): Prisma.PrismaPromise<GetUser_progressAggregateType<T>>

    /**
     * Group by User_progress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_progressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_progressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_progressGroupByArgs['orderBy'] }
        : { orderBy?: user_progressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_progressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_progressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_progress model
   */
  readonly fields: user_progressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_progress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_progressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    words<T extends wordsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, wordsDefaultArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_progress model
   */
  interface user_progressFieldRefs {
    readonly id: FieldRef<"user_progress", 'String'>
    readonly word_id: FieldRef<"user_progress", 'String'>
    readonly user_id: FieldRef<"user_progress", 'String'>
    readonly level: FieldRef<"user_progress", 'Int'>
    readonly createdstudydate: FieldRef<"user_progress", 'DateTime'>
    readonly updatedstudydate: FieldRef<"user_progress", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_progress findUnique
   */
  export type user_progressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * Filter, which user_progress to fetch.
     */
    where: user_progressWhereUniqueInput
  }

  /**
   * user_progress findUniqueOrThrow
   */
  export type user_progressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * Filter, which user_progress to fetch.
     */
    where: user_progressWhereUniqueInput
  }

  /**
   * user_progress findFirst
   */
  export type user_progressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * Filter, which user_progress to fetch.
     */
    where?: user_progressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_progresses to fetch.
     */
    orderBy?: user_progressOrderByWithRelationInput | user_progressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_progresses.
     */
    cursor?: user_progressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_progresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_progresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_progresses.
     */
    distinct?: User_progressScalarFieldEnum | User_progressScalarFieldEnum[]
  }

  /**
   * user_progress findFirstOrThrow
   */
  export type user_progressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * Filter, which user_progress to fetch.
     */
    where?: user_progressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_progresses to fetch.
     */
    orderBy?: user_progressOrderByWithRelationInput | user_progressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_progresses.
     */
    cursor?: user_progressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_progresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_progresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_progresses.
     */
    distinct?: User_progressScalarFieldEnum | User_progressScalarFieldEnum[]
  }

  /**
   * user_progress findMany
   */
  export type user_progressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * Filter, which user_progresses to fetch.
     */
    where?: user_progressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_progresses to fetch.
     */
    orderBy?: user_progressOrderByWithRelationInput | user_progressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_progresses.
     */
    cursor?: user_progressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_progresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_progresses.
     */
    skip?: number
    distinct?: User_progressScalarFieldEnum | User_progressScalarFieldEnum[]
  }

  /**
   * user_progress create
   */
  export type user_progressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * The data needed to create a user_progress.
     */
    data: XOR<user_progressCreateInput, user_progressUncheckedCreateInput>
  }

  /**
   * user_progress createMany
   */
  export type user_progressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_progresses.
     */
    data: user_progressCreateManyInput | user_progressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_progress createManyAndReturn
   */
  export type user_progressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * The data used to create many user_progresses.
     */
    data: user_progressCreateManyInput | user_progressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_progress update
   */
  export type user_progressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * The data needed to update a user_progress.
     */
    data: XOR<user_progressUpdateInput, user_progressUncheckedUpdateInput>
    /**
     * Choose, which user_progress to update.
     */
    where: user_progressWhereUniqueInput
  }

  /**
   * user_progress updateMany
   */
  export type user_progressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_progresses.
     */
    data: XOR<user_progressUpdateManyMutationInput, user_progressUncheckedUpdateManyInput>
    /**
     * Filter which user_progresses to update
     */
    where?: user_progressWhereInput
    /**
     * Limit how many user_progresses to update.
     */
    limit?: number
  }

  /**
   * user_progress updateManyAndReturn
   */
  export type user_progressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * The data used to update user_progresses.
     */
    data: XOR<user_progressUpdateManyMutationInput, user_progressUncheckedUpdateManyInput>
    /**
     * Filter which user_progresses to update
     */
    where?: user_progressWhereInput
    /**
     * Limit how many user_progresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_progress upsert
   */
  export type user_progressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * The filter to search for the user_progress to update in case it exists.
     */
    where: user_progressWhereUniqueInput
    /**
     * In case the user_progress found by the `where` argument doesn't exist, create a new user_progress with this data.
     */
    create: XOR<user_progressCreateInput, user_progressUncheckedCreateInput>
    /**
     * In case the user_progress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_progressUpdateInput, user_progressUncheckedUpdateInput>
  }

  /**
   * user_progress delete
   */
  export type user_progressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    /**
     * Filter which user_progress to delete.
     */
    where: user_progressWhereUniqueInput
  }

  /**
   * user_progress deleteMany
   */
  export type user_progressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_progresses to delete
     */
    where?: user_progressWhereInput
    /**
     * Limit how many user_progresses to delete.
     */
    limit?: number
  }

  /**
   * user_progress without action
   */
  export type user_progressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    balance: number | null
  }

  export type UsersSumAggregateOutputType = {
    balance: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    username: string | null
    passwordhash: string | null
    birthday: Date | null
    gender: boolean | null
    fullname: string | null
    address: string | null
    email: string | null
    phonenumber: string | null
    created_date: Date | null
    isactive: boolean | null
    isadmin: boolean | null
    balance: number | null
    image_url: string | null
    is_block: boolean | null
    is_verified: boolean | null
    firebase_uid: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    username: string | null
    passwordhash: string | null
    birthday: Date | null
    gender: boolean | null
    fullname: string | null
    address: string | null
    email: string | null
    phonenumber: string | null
    created_date: Date | null
    isactive: boolean | null
    isadmin: boolean | null
    balance: number | null
    image_url: string | null
    is_block: boolean | null
    is_verified: boolean | null
    firebase_uid: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    passwordhash: number
    birthday: number
    gender: number
    fullname: number
    address: number
    email: number
    phonenumber: number
    created_date: number
    isactive: number
    isadmin: number
    balance: number
    image_url: number
    is_block: number
    is_verified: number
    firebase_uid: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    balance?: true
  }

  export type UsersSumAggregateInputType = {
    balance?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    passwordhash?: true
    birthday?: true
    gender?: true
    fullname?: true
    address?: true
    email?: true
    phonenumber?: true
    created_date?: true
    isactive?: true
    isadmin?: true
    balance?: true
    image_url?: true
    is_block?: true
    is_verified?: true
    firebase_uid?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    passwordhash?: true
    birthday?: true
    gender?: true
    fullname?: true
    address?: true
    email?: true
    phonenumber?: true
    created_date?: true
    isactive?: true
    isadmin?: true
    balance?: true
    image_url?: true
    is_block?: true
    is_verified?: true
    firebase_uid?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    passwordhash?: true
    birthday?: true
    gender?: true
    fullname?: true
    address?: true
    email?: true
    phonenumber?: true
    created_date?: true
    isactive?: true
    isadmin?: true
    balance?: true
    image_url?: true
    is_block?: true
    is_verified?: true
    firebase_uid?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    username: string
    passwordhash: string
    birthday: Date | null
    gender: boolean | null
    fullname: string | null
    address: string | null
    email: string | null
    phonenumber: string | null
    created_date: Date | null
    isactive: boolean | null
    isadmin: boolean | null
    balance: number | null
    image_url: string | null
    is_block: boolean | null
    is_verified: boolean | null
    firebase_uid: string | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    passwordhash?: boolean
    birthday?: boolean
    gender?: boolean
    fullname?: boolean
    address?: boolean
    email?: boolean
    phonenumber?: boolean
    created_date?: boolean
    isactive?: boolean
    isadmin?: boolean
    balance?: boolean
    image_url?: boolean
    is_block?: boolean
    is_verified?: boolean
    firebase_uid?: boolean
    abuse_report_feedbacks?: boolean | users$abuse_report_feedbacksArgs<ExtArgs>
    attendance?: boolean | users$attendanceArgs<ExtArgs>
    coin_transaction?: boolean | users$coin_transactionArgs<ExtArgs>
    comments?: boolean | users$commentsArgs<ExtArgs>
    comments_group?: boolean | users$comments_groupArgs<ExtArgs>
    error_report_feedbacks?: boolean | users$error_report_feedbacksArgs<ExtArgs>
    group_members?: boolean | users$group_membersArgs<ExtArgs>
    group_posts?: boolean | users$group_postsArgs<ExtArgs>
    groups?: boolean | users$groupsArgs<ExtArgs>
    messages?: boolean | users$messagesArgs<ExtArgs>
    posts?: boolean | users$postsArgs<ExtArgs>
    react_comments?: boolean | users$react_commentsArgs<ExtArgs>
    react_posts?: boolean | users$react_postsArgs<ExtArgs>
    shared_post?: boolean | users$shared_postArgs<ExtArgs>
    study_access_topic?: boolean | users$study_access_topicArgs<ExtArgs>
    transaction_history?: boolean | users$transaction_historyArgs<ExtArgs>
    user_abuse_reports?: boolean | users$user_abuse_reportsArgs<ExtArgs>
    user_courses?: boolean | users$user_coursesArgs<ExtArgs>
    user_error_reports?: boolean | users$user_error_reportsArgs<ExtArgs>
    user_packages?: boolean | users$user_packagesArgs<ExtArgs>
    user_profile_history_user_profile_history_changed_byTousers?: boolean | users$user_profile_history_user_profile_history_changed_byTousersArgs<ExtArgs>
    user_profile_history_user_profile_history_user_idTousers?: boolean | users$user_profile_history_user_profile_history_user_idTousersArgs<ExtArgs>
    user_progress?: boolean | users$user_progressArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    passwordhash?: boolean
    birthday?: boolean
    gender?: boolean
    fullname?: boolean
    address?: boolean
    email?: boolean
    phonenumber?: boolean
    created_date?: boolean
    isactive?: boolean
    isadmin?: boolean
    balance?: boolean
    image_url?: boolean
    is_block?: boolean
    is_verified?: boolean
    firebase_uid?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    passwordhash?: boolean
    birthday?: boolean
    gender?: boolean
    fullname?: boolean
    address?: boolean
    email?: boolean
    phonenumber?: boolean
    created_date?: boolean
    isactive?: boolean
    isadmin?: boolean
    balance?: boolean
    image_url?: boolean
    is_block?: boolean
    is_verified?: boolean
    firebase_uid?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    passwordhash?: boolean
    birthday?: boolean
    gender?: boolean
    fullname?: boolean
    address?: boolean
    email?: boolean
    phonenumber?: boolean
    created_date?: boolean
    isactive?: boolean
    isadmin?: boolean
    balance?: boolean
    image_url?: boolean
    is_block?: boolean
    is_verified?: boolean
    firebase_uid?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "passwordhash" | "birthday" | "gender" | "fullname" | "address" | "email" | "phonenumber" | "created_date" | "isactive" | "isadmin" | "balance" | "image_url" | "is_block" | "is_verified" | "firebase_uid", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abuse_report_feedbacks?: boolean | users$abuse_report_feedbacksArgs<ExtArgs>
    attendance?: boolean | users$attendanceArgs<ExtArgs>
    coin_transaction?: boolean | users$coin_transactionArgs<ExtArgs>
    comments?: boolean | users$commentsArgs<ExtArgs>
    comments_group?: boolean | users$comments_groupArgs<ExtArgs>
    error_report_feedbacks?: boolean | users$error_report_feedbacksArgs<ExtArgs>
    group_members?: boolean | users$group_membersArgs<ExtArgs>
    group_posts?: boolean | users$group_postsArgs<ExtArgs>
    groups?: boolean | users$groupsArgs<ExtArgs>
    messages?: boolean | users$messagesArgs<ExtArgs>
    posts?: boolean | users$postsArgs<ExtArgs>
    react_comments?: boolean | users$react_commentsArgs<ExtArgs>
    react_posts?: boolean | users$react_postsArgs<ExtArgs>
    shared_post?: boolean | users$shared_postArgs<ExtArgs>
    study_access_topic?: boolean | users$study_access_topicArgs<ExtArgs>
    transaction_history?: boolean | users$transaction_historyArgs<ExtArgs>
    user_abuse_reports?: boolean | users$user_abuse_reportsArgs<ExtArgs>
    user_courses?: boolean | users$user_coursesArgs<ExtArgs>
    user_error_reports?: boolean | users$user_error_reportsArgs<ExtArgs>
    user_packages?: boolean | users$user_packagesArgs<ExtArgs>
    user_profile_history_user_profile_history_changed_byTousers?: boolean | users$user_profile_history_user_profile_history_changed_byTousersArgs<ExtArgs>
    user_profile_history_user_profile_history_user_idTousers?: boolean | users$user_profile_history_user_profile_history_user_idTousersArgs<ExtArgs>
    user_progress?: boolean | users$user_progressArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      abuse_report_feedbacks: Prisma.$abuse_report_feedbacksPayload<ExtArgs>[]
      attendance: Prisma.$attendancePayload<ExtArgs>[]
      coin_transaction: Prisma.$coin_transactionPayload<ExtArgs>[]
      comments: Prisma.$commentsPayload<ExtArgs>[]
      comments_group: Prisma.$comments_groupPayload<ExtArgs>[]
      error_report_feedbacks: Prisma.$error_report_feedbacksPayload<ExtArgs>[]
      group_members: Prisma.$group_membersPayload<ExtArgs>[]
      group_posts: Prisma.$group_postsPayload<ExtArgs>[]
      groups: Prisma.$groupsPayload<ExtArgs>[]
      messages: Prisma.$messagesPayload<ExtArgs>[]
      posts: Prisma.$postsPayload<ExtArgs>[]
      react_comments: Prisma.$react_commentsPayload<ExtArgs>[]
      react_posts: Prisma.$react_postsPayload<ExtArgs>[]
      shared_post: Prisma.$shared_postPayload<ExtArgs>[]
      study_access_topic: Prisma.$study_access_topicPayload<ExtArgs>[]
      transaction_history: Prisma.$transaction_historyPayload<ExtArgs>[]
      user_abuse_reports: Prisma.$user_abuse_reportsPayload<ExtArgs>[]
      user_courses: Prisma.$user_coursesPayload<ExtArgs>[]
      user_error_reports: Prisma.$user_error_reportsPayload<ExtArgs>[]
      user_packages: Prisma.$user_packagesPayload<ExtArgs>[]
      user_profile_history_user_profile_history_changed_byTousers: Prisma.$user_profile_historyPayload<ExtArgs>[]
      user_profile_history_user_profile_history_user_idTousers: Prisma.$user_profile_historyPayload<ExtArgs>[]
      user_progress: Prisma.$user_progressPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      passwordhash: string
      birthday: Date | null
      gender: boolean | null
      fullname: string | null
      address: string | null
      email: string | null
      phonenumber: string | null
      created_date: Date | null
      isactive: boolean | null
      isadmin: boolean | null
      balance: number | null
      image_url: string | null
      is_block: boolean | null
      is_verified: boolean | null
      firebase_uid: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    abuse_report_feedbacks<T extends users$abuse_report_feedbacksArgs<ExtArgs> = {}>(args?: Subset<T, users$abuse_report_feedbacksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abuse_report_feedbacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    attendance<T extends users$attendanceArgs<ExtArgs> = {}>(args?: Subset<T, users$attendanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    coin_transaction<T extends users$coin_transactionArgs<ExtArgs> = {}>(args?: Subset<T, users$coin_transactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coin_transactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends users$commentsArgs<ExtArgs> = {}>(args?: Subset<T, users$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments_group<T extends users$comments_groupArgs<ExtArgs> = {}>(args?: Subset<T, users$comments_groupArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comments_groupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    error_report_feedbacks<T extends users$error_report_feedbacksArgs<ExtArgs> = {}>(args?: Subset<T, users$error_report_feedbacksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$error_report_feedbacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    group_members<T extends users$group_membersArgs<ExtArgs> = {}>(args?: Subset<T, users$group_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    group_posts<T extends users$group_postsArgs<ExtArgs> = {}>(args?: Subset<T, users$group_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    groups<T extends users$groupsArgs<ExtArgs> = {}>(args?: Subset<T, users$groupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends users$messagesArgs<ExtArgs> = {}>(args?: Subset<T, users$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    posts<T extends users$postsArgs<ExtArgs> = {}>(args?: Subset<T, users$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    react_comments<T extends users$react_commentsArgs<ExtArgs> = {}>(args?: Subset<T, users$react_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    react_posts<T extends users$react_postsArgs<ExtArgs> = {}>(args?: Subset<T, users$react_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$react_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shared_post<T extends users$shared_postArgs<ExtArgs> = {}>(args?: Subset<T, users$shared_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shared_postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    study_access_topic<T extends users$study_access_topicArgs<ExtArgs> = {}>(args?: Subset<T, users$study_access_topicArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_access_topicPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaction_history<T extends users$transaction_historyArgs<ExtArgs> = {}>(args?: Subset<T, users$transaction_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaction_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_abuse_reports<T extends users$user_abuse_reportsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_abuse_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_abuse_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_courses<T extends users$user_coursesArgs<ExtArgs> = {}>(args?: Subset<T, users$user_coursesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_error_reports<T extends users$user_error_reportsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_error_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_error_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_packages<T extends users$user_packagesArgs<ExtArgs> = {}>(args?: Subset<T, users$user_packagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_packagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_profile_history_user_profile_history_changed_byTousers<T extends users$user_profile_history_user_profile_history_changed_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$user_profile_history_user_profile_history_changed_byTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_profile_history_user_profile_history_user_idTousers<T extends users$user_profile_history_user_profile_history_user_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$user_profile_history_user_profile_history_user_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profile_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_progress<T extends users$user_progressArgs<ExtArgs> = {}>(args?: Subset<T, users$user_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly passwordhash: FieldRef<"users", 'String'>
    readonly birthday: FieldRef<"users", 'DateTime'>
    readonly gender: FieldRef<"users", 'Boolean'>
    readonly fullname: FieldRef<"users", 'String'>
    readonly address: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly phonenumber: FieldRef<"users", 'String'>
    readonly created_date: FieldRef<"users", 'DateTime'>
    readonly isactive: FieldRef<"users", 'Boolean'>
    readonly isadmin: FieldRef<"users", 'Boolean'>
    readonly balance: FieldRef<"users", 'Int'>
    readonly image_url: FieldRef<"users", 'String'>
    readonly is_block: FieldRef<"users", 'Boolean'>
    readonly is_verified: FieldRef<"users", 'Boolean'>
    readonly firebase_uid: FieldRef<"users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.abuse_report_feedbacks
   */
  export type users$abuse_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abuse_report_feedbacks
     */
    select?: abuse_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the abuse_report_feedbacks
     */
    omit?: abuse_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abuse_report_feedbacksInclude<ExtArgs> | null
    where?: abuse_report_feedbacksWhereInput
    orderBy?: abuse_report_feedbacksOrderByWithRelationInput | abuse_report_feedbacksOrderByWithRelationInput[]
    cursor?: abuse_report_feedbacksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Abuse_report_feedbacksScalarFieldEnum | Abuse_report_feedbacksScalarFieldEnum[]
  }

  /**
   * users.attendance
   */
  export type users$attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    where?: attendanceWhereInput
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    cursor?: attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * users.coin_transaction
   */
  export type users$coin_transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coin_transaction
     */
    select?: coin_transactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the coin_transaction
     */
    omit?: coin_transactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coin_transactionInclude<ExtArgs> | null
    where?: coin_transactionWhereInput
    orderBy?: coin_transactionOrderByWithRelationInput | coin_transactionOrderByWithRelationInput[]
    cursor?: coin_transactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Coin_transactionScalarFieldEnum | Coin_transactionScalarFieldEnum[]
  }

  /**
   * users.comments
   */
  export type users$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments
     */
    select?: commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments
     */
    omit?: commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentsInclude<ExtArgs> | null
    where?: commentsWhereInput
    orderBy?: commentsOrderByWithRelationInput | commentsOrderByWithRelationInput[]
    cursor?: commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }

  /**
   * users.comments_group
   */
  export type users$comments_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comments_group
     */
    select?: comments_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comments_group
     */
    omit?: comments_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comments_groupInclude<ExtArgs> | null
    where?: comments_groupWhereInput
    orderBy?: comments_groupOrderByWithRelationInput | comments_groupOrderByWithRelationInput[]
    cursor?: comments_groupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Comments_groupScalarFieldEnum | Comments_groupScalarFieldEnum[]
  }

  /**
   * users.error_report_feedbacks
   */
  export type users$error_report_feedbacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the error_report_feedbacks
     */
    select?: error_report_feedbacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the error_report_feedbacks
     */
    omit?: error_report_feedbacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: error_report_feedbacksInclude<ExtArgs> | null
    where?: error_report_feedbacksWhereInput
    orderBy?: error_report_feedbacksOrderByWithRelationInput | error_report_feedbacksOrderByWithRelationInput[]
    cursor?: error_report_feedbacksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Error_report_feedbacksScalarFieldEnum | Error_report_feedbacksScalarFieldEnum[]
  }

  /**
   * users.group_members
   */
  export type users$group_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    where?: group_membersWhereInput
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    cursor?: group_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * users.group_posts
   */
  export type users$group_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_posts
     */
    select?: group_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_posts
     */
    omit?: group_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_postsInclude<ExtArgs> | null
    where?: group_postsWhereInput
    orderBy?: group_postsOrderByWithRelationInput | group_postsOrderByWithRelationInput[]
    cursor?: group_postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Group_postsScalarFieldEnum | Group_postsScalarFieldEnum[]
  }

  /**
   * users.groups
   */
  export type users$groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    where?: groupsWhereInput
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    cursor?: groupsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * users.messages
   */
  export type users$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * users.posts
   */
  export type users$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    where?: postsWhereInput
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    cursor?: postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * users.react_comments
   */
  export type users$react_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_comments
     */
    select?: react_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_comments
     */
    omit?: react_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_commentsInclude<ExtArgs> | null
    where?: react_commentsWhereInput
    orderBy?: react_commentsOrderByWithRelationInput | react_commentsOrderByWithRelationInput[]
    cursor?: react_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: React_commentsScalarFieldEnum | React_commentsScalarFieldEnum[]
  }

  /**
   * users.react_posts
   */
  export type users$react_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the react_posts
     */
    select?: react_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the react_posts
     */
    omit?: react_postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: react_postsInclude<ExtArgs> | null
    where?: react_postsWhereInput
    orderBy?: react_postsOrderByWithRelationInput | react_postsOrderByWithRelationInput[]
    cursor?: react_postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: React_postsScalarFieldEnum | React_postsScalarFieldEnum[]
  }

  /**
   * users.shared_post
   */
  export type users$shared_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shared_post
     */
    select?: shared_postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shared_post
     */
    omit?: shared_postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shared_postInclude<ExtArgs> | null
    where?: shared_postWhereInput
    orderBy?: shared_postOrderByWithRelationInput | shared_postOrderByWithRelationInput[]
    cursor?: shared_postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Shared_postScalarFieldEnum | Shared_postScalarFieldEnum[]
  }

  /**
   * users.study_access_topic
   */
  export type users$study_access_topicArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the study_access_topic
     */
    select?: study_access_topicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the study_access_topic
     */
    omit?: study_access_topicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: study_access_topicInclude<ExtArgs> | null
    where?: study_access_topicWhereInput
    orderBy?: study_access_topicOrderByWithRelationInput | study_access_topicOrderByWithRelationInput[]
    cursor?: study_access_topicWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Study_access_topicScalarFieldEnum | Study_access_topicScalarFieldEnum[]
  }

  /**
   * users.transaction_history
   */
  export type users$transaction_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction_history
     */
    select?: transaction_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaction_history
     */
    omit?: transaction_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaction_historyInclude<ExtArgs> | null
    where?: transaction_historyWhereInput
    orderBy?: transaction_historyOrderByWithRelationInput | transaction_historyOrderByWithRelationInput[]
    cursor?: transaction_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Transaction_historyScalarFieldEnum | Transaction_historyScalarFieldEnum[]
  }

  /**
   * users.user_abuse_reports
   */
  export type users$user_abuse_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_abuse_reports
     */
    select?: user_abuse_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_abuse_reports
     */
    omit?: user_abuse_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_abuse_reportsInclude<ExtArgs> | null
    where?: user_abuse_reportsWhereInput
    orderBy?: user_abuse_reportsOrderByWithRelationInput | user_abuse_reportsOrderByWithRelationInput[]
    cursor?: user_abuse_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_abuse_reportsScalarFieldEnum | User_abuse_reportsScalarFieldEnum[]
  }

  /**
   * users.user_courses
   */
  export type users$user_coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_courses
     */
    select?: user_coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_courses
     */
    omit?: user_coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_coursesInclude<ExtArgs> | null
    where?: user_coursesWhereInput
    orderBy?: user_coursesOrderByWithRelationInput | user_coursesOrderByWithRelationInput[]
    cursor?: user_coursesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_coursesScalarFieldEnum | User_coursesScalarFieldEnum[]
  }

  /**
   * users.user_error_reports
   */
  export type users$user_error_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_error_reports
     */
    select?: user_error_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_error_reports
     */
    omit?: user_error_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_error_reportsInclude<ExtArgs> | null
    where?: user_error_reportsWhereInput
    orderBy?: user_error_reportsOrderByWithRelationInput | user_error_reportsOrderByWithRelationInput[]
    cursor?: user_error_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_error_reportsScalarFieldEnum | User_error_reportsScalarFieldEnum[]
  }

  /**
   * users.user_packages
   */
  export type users$user_packagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_packages
     */
    select?: user_packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_packages
     */
    omit?: user_packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_packagesInclude<ExtArgs> | null
    where?: user_packagesWhereInput
    orderBy?: user_packagesOrderByWithRelationInput | user_packagesOrderByWithRelationInput[]
    cursor?: user_packagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_packagesScalarFieldEnum | User_packagesScalarFieldEnum[]
  }

  /**
   * users.user_profile_history_user_profile_history_changed_byTousers
   */
  export type users$user_profile_history_user_profile_history_changed_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    where?: user_profile_historyWhereInput
    orderBy?: user_profile_historyOrderByWithRelationInput | user_profile_historyOrderByWithRelationInput[]
    cursor?: user_profile_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_profile_historyScalarFieldEnum | User_profile_historyScalarFieldEnum[]
  }

  /**
   * users.user_profile_history_user_profile_history_user_idTousers
   */
  export type users$user_profile_history_user_profile_history_user_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile_history
     */
    select?: user_profile_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile_history
     */
    omit?: user_profile_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profile_historyInclude<ExtArgs> | null
    where?: user_profile_historyWhereInput
    orderBy?: user_profile_historyOrderByWithRelationInput | user_profile_historyOrderByWithRelationInput[]
    cursor?: user_profile_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_profile_historyScalarFieldEnum | User_profile_historyScalarFieldEnum[]
  }

  /**
   * users.user_progress
   */
  export type users$user_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    where?: user_progressWhereInput
    orderBy?: user_progressOrderByWithRelationInput | user_progressOrderByWithRelationInput[]
    cursor?: user_progressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_progressScalarFieldEnum | User_progressScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model words
   */

  export type AggregateWords = {
    _count: WordsCountAggregateOutputType | null
    _min: WordsMinAggregateOutputType | null
    _max: WordsMaxAggregateOutputType | null
  }

  export type WordsMinAggregateOutputType = {
    id: string | null
    englishname: string | null
    vietnamesename: string | null
    type: string | null
    examplesentence: string | null
    imageurl: string | null
    transcription: string | null
    course_id: string | null
  }

  export type WordsMaxAggregateOutputType = {
    id: string | null
    englishname: string | null
    vietnamesename: string | null
    type: string | null
    examplesentence: string | null
    imageurl: string | null
    transcription: string | null
    course_id: string | null
  }

  export type WordsCountAggregateOutputType = {
    id: number
    englishname: number
    vietnamesename: number
    type: number
    examplesentence: number
    imageurl: number
    transcription: number
    course_id: number
    _all: number
  }


  export type WordsMinAggregateInputType = {
    id?: true
    englishname?: true
    vietnamesename?: true
    type?: true
    examplesentence?: true
    imageurl?: true
    transcription?: true
    course_id?: true
  }

  export type WordsMaxAggregateInputType = {
    id?: true
    englishname?: true
    vietnamesename?: true
    type?: true
    examplesentence?: true
    imageurl?: true
    transcription?: true
    course_id?: true
  }

  export type WordsCountAggregateInputType = {
    id?: true
    englishname?: true
    vietnamesename?: true
    type?: true
    examplesentence?: true
    imageurl?: true
    transcription?: true
    course_id?: true
    _all?: true
  }

  export type WordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which words to aggregate.
     */
    where?: wordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of words to fetch.
     */
    orderBy?: wordsOrderByWithRelationInput | wordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` words from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` words.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned words
    **/
    _count?: true | WordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WordsMaxAggregateInputType
  }

  export type GetWordsAggregateType<T extends WordsAggregateArgs> = {
        [P in keyof T & keyof AggregateWords]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWords[P]>
      : GetScalarType<T[P], AggregateWords[P]>
  }




  export type wordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wordsWhereInput
    orderBy?: wordsOrderByWithAggregationInput | wordsOrderByWithAggregationInput[]
    by: WordsScalarFieldEnum[] | WordsScalarFieldEnum
    having?: wordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WordsCountAggregateInputType | true
    _min?: WordsMinAggregateInputType
    _max?: WordsMaxAggregateInputType
  }

  export type WordsGroupByOutputType = {
    id: string
    englishname: string
    vietnamesename: string
    type: string | null
    examplesentence: string | null
    imageurl: string | null
    transcription: string | null
    course_id: string | null
    _count: WordsCountAggregateOutputType | null
    _min: WordsMinAggregateOutputType | null
    _max: WordsMaxAggregateOutputType | null
  }

  type GetWordsGroupByPayload<T extends wordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WordsGroupByOutputType[P]>
            : GetScalarType<T[P], WordsGroupByOutputType[P]>
        }
      >
    >


  export type wordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    englishname?: boolean
    vietnamesename?: boolean
    type?: boolean
    examplesentence?: boolean
    imageurl?: boolean
    transcription?: boolean
    course_id?: boolean
    user_progress?: boolean | words$user_progressArgs<ExtArgs>
    courses?: boolean | words$coursesArgs<ExtArgs>
    _count?: boolean | WordsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["words"]>

  export type wordsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    englishname?: boolean
    vietnamesename?: boolean
    type?: boolean
    examplesentence?: boolean
    imageurl?: boolean
    transcription?: boolean
    course_id?: boolean
    courses?: boolean | words$coursesArgs<ExtArgs>
  }, ExtArgs["result"]["words"]>

  export type wordsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    englishname?: boolean
    vietnamesename?: boolean
    type?: boolean
    examplesentence?: boolean
    imageurl?: boolean
    transcription?: boolean
    course_id?: boolean
    courses?: boolean | words$coursesArgs<ExtArgs>
  }, ExtArgs["result"]["words"]>

  export type wordsSelectScalar = {
    id?: boolean
    englishname?: boolean
    vietnamesename?: boolean
    type?: boolean
    examplesentence?: boolean
    imageurl?: boolean
    transcription?: boolean
    course_id?: boolean
  }

  export type wordsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "englishname" | "vietnamesename" | "type" | "examplesentence" | "imageurl" | "transcription" | "course_id", ExtArgs["result"]["words"]>
  export type wordsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_progress?: boolean | words$user_progressArgs<ExtArgs>
    courses?: boolean | words$coursesArgs<ExtArgs>
    _count?: boolean | WordsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type wordsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | words$coursesArgs<ExtArgs>
  }
  export type wordsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courses?: boolean | words$coursesArgs<ExtArgs>
  }

  export type $wordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "words"
    objects: {
      user_progress: Prisma.$user_progressPayload<ExtArgs>[]
      courses: Prisma.$coursesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      englishname: string
      vietnamesename: string
      type: string | null
      examplesentence: string | null
      imageurl: string | null
      transcription: string | null
      course_id: string | null
    }, ExtArgs["result"]["words"]>
    composites: {}
  }

  type wordsGetPayload<S extends boolean | null | undefined | wordsDefaultArgs> = $Result.GetResult<Prisma.$wordsPayload, S>

  type wordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wordsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WordsCountAggregateInputType | true
    }

  export interface wordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['words'], meta: { name: 'words' } }
    /**
     * Find zero or one Words that matches the filter.
     * @param {wordsFindUniqueArgs} args - Arguments to find a Words
     * @example
     * // Get one Words
     * const words = await prisma.words.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wordsFindUniqueArgs>(args: SelectSubset<T, wordsFindUniqueArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Words that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wordsFindUniqueOrThrowArgs} args - Arguments to find a Words
     * @example
     * // Get one Words
     * const words = await prisma.words.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wordsFindUniqueOrThrowArgs>(args: SelectSubset<T, wordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Words that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wordsFindFirstArgs} args - Arguments to find a Words
     * @example
     * // Get one Words
     * const words = await prisma.words.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wordsFindFirstArgs>(args?: SelectSubset<T, wordsFindFirstArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Words that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wordsFindFirstOrThrowArgs} args - Arguments to find a Words
     * @example
     * // Get one Words
     * const words = await prisma.words.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wordsFindFirstOrThrowArgs>(args?: SelectSubset<T, wordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Words that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Words
     * const words = await prisma.words.findMany()
     * 
     * // Get first 10 Words
     * const words = await prisma.words.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wordsWithIdOnly = await prisma.words.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wordsFindManyArgs>(args?: SelectSubset<T, wordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Words.
     * @param {wordsCreateArgs} args - Arguments to create a Words.
     * @example
     * // Create one Words
     * const Words = await prisma.words.create({
     *   data: {
     *     // ... data to create a Words
     *   }
     * })
     * 
     */
    create<T extends wordsCreateArgs>(args: SelectSubset<T, wordsCreateArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Words.
     * @param {wordsCreateManyArgs} args - Arguments to create many Words.
     * @example
     * // Create many Words
     * const words = await prisma.words.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wordsCreateManyArgs>(args?: SelectSubset<T, wordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Words and returns the data saved in the database.
     * @param {wordsCreateManyAndReturnArgs} args - Arguments to create many Words.
     * @example
     * // Create many Words
     * const words = await prisma.words.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Words and only return the `id`
     * const wordsWithIdOnly = await prisma.words.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends wordsCreateManyAndReturnArgs>(args?: SelectSubset<T, wordsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Words.
     * @param {wordsDeleteArgs} args - Arguments to delete one Words.
     * @example
     * // Delete one Words
     * const Words = await prisma.words.delete({
     *   where: {
     *     // ... filter to delete one Words
     *   }
     * })
     * 
     */
    delete<T extends wordsDeleteArgs>(args: SelectSubset<T, wordsDeleteArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Words.
     * @param {wordsUpdateArgs} args - Arguments to update one Words.
     * @example
     * // Update one Words
     * const words = await prisma.words.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wordsUpdateArgs>(args: SelectSubset<T, wordsUpdateArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Words.
     * @param {wordsDeleteManyArgs} args - Arguments to filter Words to delete.
     * @example
     * // Delete a few Words
     * const { count } = await prisma.words.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wordsDeleteManyArgs>(args?: SelectSubset<T, wordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Words.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Words
     * const words = await prisma.words.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wordsUpdateManyArgs>(args: SelectSubset<T, wordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Words and returns the data updated in the database.
     * @param {wordsUpdateManyAndReturnArgs} args - Arguments to update many Words.
     * @example
     * // Update many Words
     * const words = await prisma.words.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Words and only return the `id`
     * const wordsWithIdOnly = await prisma.words.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends wordsUpdateManyAndReturnArgs>(args: SelectSubset<T, wordsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Words.
     * @param {wordsUpsertArgs} args - Arguments to update or create a Words.
     * @example
     * // Update or create a Words
     * const words = await prisma.words.upsert({
     *   create: {
     *     // ... data to create a Words
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Words we want to update
     *   }
     * })
     */
    upsert<T extends wordsUpsertArgs>(args: SelectSubset<T, wordsUpsertArgs<ExtArgs>>): Prisma__wordsClient<$Result.GetResult<Prisma.$wordsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Words.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wordsCountArgs} args - Arguments to filter Words to count.
     * @example
     * // Count the number of Words
     * const count = await prisma.words.count({
     *   where: {
     *     // ... the filter for the Words we want to count
     *   }
     * })
    **/
    count<T extends wordsCountArgs>(
      args?: Subset<T, wordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Words.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WordsAggregateArgs>(args: Subset<T, WordsAggregateArgs>): Prisma.PrismaPromise<GetWordsAggregateType<T>>

    /**
     * Group by Words.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wordsGroupByArgs['orderBy'] }
        : { orderBy?: wordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the words model
   */
  readonly fields: wordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for words.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_progress<T extends words$user_progressArgs<ExtArgs> = {}>(args?: Subset<T, words$user_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_progressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    courses<T extends words$coursesArgs<ExtArgs> = {}>(args?: Subset<T, words$coursesArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the words model
   */
  interface wordsFieldRefs {
    readonly id: FieldRef<"words", 'String'>
    readonly englishname: FieldRef<"words", 'String'>
    readonly vietnamesename: FieldRef<"words", 'String'>
    readonly type: FieldRef<"words", 'String'>
    readonly examplesentence: FieldRef<"words", 'String'>
    readonly imageurl: FieldRef<"words", 'String'>
    readonly transcription: FieldRef<"words", 'String'>
    readonly course_id: FieldRef<"words", 'String'>
  }
    

  // Custom InputTypes
  /**
   * words findUnique
   */
  export type wordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * Filter, which words to fetch.
     */
    where: wordsWhereUniqueInput
  }

  /**
   * words findUniqueOrThrow
   */
  export type wordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * Filter, which words to fetch.
     */
    where: wordsWhereUniqueInput
  }

  /**
   * words findFirst
   */
  export type wordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * Filter, which words to fetch.
     */
    where?: wordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of words to fetch.
     */
    orderBy?: wordsOrderByWithRelationInput | wordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for words.
     */
    cursor?: wordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` words from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` words.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of words.
     */
    distinct?: WordsScalarFieldEnum | WordsScalarFieldEnum[]
  }

  /**
   * words findFirstOrThrow
   */
  export type wordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * Filter, which words to fetch.
     */
    where?: wordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of words to fetch.
     */
    orderBy?: wordsOrderByWithRelationInput | wordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for words.
     */
    cursor?: wordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` words from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` words.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of words.
     */
    distinct?: WordsScalarFieldEnum | WordsScalarFieldEnum[]
  }

  /**
   * words findMany
   */
  export type wordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * Filter, which words to fetch.
     */
    where?: wordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of words to fetch.
     */
    orderBy?: wordsOrderByWithRelationInput | wordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing words.
     */
    cursor?: wordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` words from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` words.
     */
    skip?: number
    distinct?: WordsScalarFieldEnum | WordsScalarFieldEnum[]
  }

  /**
   * words create
   */
  export type wordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * The data needed to create a words.
     */
    data: XOR<wordsCreateInput, wordsUncheckedCreateInput>
  }

  /**
   * words createMany
   */
  export type wordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many words.
     */
    data: wordsCreateManyInput | wordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * words createManyAndReturn
   */
  export type wordsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * The data used to create many words.
     */
    data: wordsCreateManyInput | wordsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * words update
   */
  export type wordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * The data needed to update a words.
     */
    data: XOR<wordsUpdateInput, wordsUncheckedUpdateInput>
    /**
     * Choose, which words to update.
     */
    where: wordsWhereUniqueInput
  }

  /**
   * words updateMany
   */
  export type wordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update words.
     */
    data: XOR<wordsUpdateManyMutationInput, wordsUncheckedUpdateManyInput>
    /**
     * Filter which words to update
     */
    where?: wordsWhereInput
    /**
     * Limit how many words to update.
     */
    limit?: number
  }

  /**
   * words updateManyAndReturn
   */
  export type wordsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * The data used to update words.
     */
    data: XOR<wordsUpdateManyMutationInput, wordsUncheckedUpdateManyInput>
    /**
     * Filter which words to update
     */
    where?: wordsWhereInput
    /**
     * Limit how many words to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * words upsert
   */
  export type wordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * The filter to search for the words to update in case it exists.
     */
    where: wordsWhereUniqueInput
    /**
     * In case the words found by the `where` argument doesn't exist, create a new words with this data.
     */
    create: XOR<wordsCreateInput, wordsUncheckedCreateInput>
    /**
     * In case the words was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wordsUpdateInput, wordsUncheckedUpdateInput>
  }

  /**
   * words delete
   */
  export type wordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
    /**
     * Filter which words to delete.
     */
    where: wordsWhereUniqueInput
  }

  /**
   * words deleteMany
   */
  export type wordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which words to delete
     */
    where?: wordsWhereInput
    /**
     * Limit how many words to delete.
     */
    limit?: number
  }

  /**
   * words.user_progress
   */
  export type words$user_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_progress
     */
    select?: user_progressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_progress
     */
    omit?: user_progressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_progressInclude<ExtArgs> | null
    where?: user_progressWhereInput
    orderBy?: user_progressOrderByWithRelationInput | user_progressOrderByWithRelationInput[]
    cursor?: user_progressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_progressScalarFieldEnum | User_progressScalarFieldEnum[]
  }

  /**
   * words.courses
   */
  export type words$coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    where?: coursesWhereInput
  }

  /**
   * words without action
   */
  export type wordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the words
     */
    select?: wordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the words
     */
    omit?: wordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wordsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Abuse_report_feedbacksScalarFieldEnum: {
    id: 'id',
    report_id: 'report_id',
    admin_id: 'admin_id',
    feedback: 'feedback',
    responded_at: 'responded_at'
  };

  export type Abuse_report_feedbacksScalarFieldEnum = (typeof Abuse_report_feedbacksScalarFieldEnum)[keyof typeof Abuse_report_feedbacksScalarFieldEnum]


  export const AttendanceScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    checkin_date: 'checkin_date'
  };

  export type AttendanceScalarFieldEnum = (typeof AttendanceScalarFieldEnum)[keyof typeof AttendanceScalarFieldEnum]


  export const Coin_transactionScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    amount: 'amount',
    reason: 'reason',
    reference_id: 'reference_id',
    reference_table: 'reference_table',
    created_at: 'created_at'
  };

  export type Coin_transactionScalarFieldEnum = (typeof Coin_transactionScalarFieldEnum)[keyof typeof Coin_transactionScalarFieldEnum]


  export const CommentsScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    user_id: 'user_id',
    react_count: 'react_count',
    content: 'content',
    created_date: 'created_date',
    parent_comment: 'parent_comment',
    root_comment: 'root_comment',
    shared_post_id: 'shared_post_id'
  };

  export type CommentsScalarFieldEnum = (typeof CommentsScalarFieldEnum)[keyof typeof CommentsScalarFieldEnum]


  export const Comments_groupScalarFieldEnum: {
    id: 'id',
    group_id: 'group_id',
    post_id: 'post_id',
    user_id: 'user_id',
    react_count: 'react_count',
    content: 'content',
    created_date: 'created_date',
    parent_comments: 'parent_comments'
  };

  export type Comments_groupScalarFieldEnum = (typeof Comments_groupScalarFieldEnum)[keyof typeof Comments_groupScalarFieldEnum]


  export const CoursesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    topic_id: 'topic_id',
    level: 'level',
    description: 'description',
    image_url: 'image_url',
    price: 'price',
    created_date: 'created_date'
  };

  export type CoursesScalarFieldEnum = (typeof CoursesScalarFieldEnum)[keyof typeof CoursesScalarFieldEnum]


  export const Error_report_feedbacksScalarFieldEnum: {
    id: 'id',
    report_id: 'report_id',
    admin_id: 'admin_id',
    feedback: 'feedback',
    responded_at: 'responded_at'
  };

  export type Error_report_feedbacksScalarFieldEnum = (typeof Error_report_feedbacksScalarFieldEnum)[keyof typeof Error_report_feedbacksScalarFieldEnum]


  export const Group_membersScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    group_id: 'group_id',
    is_admin: 'is_admin',
    joined_date: 'joined_date'
  };

  export type Group_membersScalarFieldEnum = (typeof Group_membersScalarFieldEnum)[keyof typeof Group_membersScalarFieldEnum]


  export const Group_postsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    group_id: 'group_id',
    content: 'content',
    image_url: 'image_url',
    react_count: 'react_count',
    created_date: 'created_date',
    updated_date: 'updated_date'
  };

  export type Group_postsScalarFieldEnum = (typeof Group_postsScalarFieldEnum)[keyof typeof Group_postsScalarFieldEnum]


  export const GroupsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    image_url: 'image_url',
    created_by: 'created_by',
    created_date: 'created_date',
    count_member: 'count_member'
  };

  export type GroupsScalarFieldEnum = (typeof GroupsScalarFieldEnum)[keyof typeof GroupsScalarFieldEnum]


  export const MessagesScalarFieldEnum: {
    id: 'id',
    sender_id: 'sender_id',
    group_id: 'group_id',
    created_date: 'created_date',
    content: 'content'
  };

  export type MessagesScalarFieldEnum = (typeof MessagesScalarFieldEnum)[keyof typeof MessagesScalarFieldEnum]


  export const PackagesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    duration_days: 'duration_days',
    price: 'price',
    is_premium: 'is_premium'
  };

  export type PackagesScalarFieldEnum = (typeof PackagesScalarFieldEnum)[keyof typeof PackagesScalarFieldEnum]


  export const PostsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    react_count: 'react_count',
    content: 'content',
    created_date: 'created_date',
    image_url: 'image_url',
    shared_user_id_count: 'shared_user_id_count',
    comment_count: 'comment_count'
  };

  export type PostsScalarFieldEnum = (typeof PostsScalarFieldEnum)[keyof typeof PostsScalarFieldEnum]


  export const React_commentsScalarFieldEnum: {
    id: 'id',
    comment_id: 'comment_id',
    user_id: 'user_id',
    created_date: 'created_date'
  };

  export type React_commentsScalarFieldEnum = (typeof React_commentsScalarFieldEnum)[keyof typeof React_commentsScalarFieldEnum]


  export const React_postsScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    user_id: 'user_id',
    created_date: 'created_date'
  };

  export type React_postsScalarFieldEnum = (typeof React_postsScalarFieldEnum)[keyof typeof React_postsScalarFieldEnum]


  export const Shared_postScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    user_id: 'user_id',
    react_count: 'react_count',
    content: 'content',
    created_date: 'created_date',
    comment_count: 'comment_count',
    shared_post_id: 'shared_post_id',
    shared_count: 'shared_count'
  };

  export type Shared_postScalarFieldEnum = (typeof Shared_postScalarFieldEnum)[keyof typeof Shared_postScalarFieldEnum]


  export const Study_access_topicScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    topic_id: 'topic_id',
    access_type: 'access_type',
    access_date: 'access_date',
    expire_date: 'expire_date'
  };

  export type Study_access_topicScalarFieldEnum = (typeof Study_access_topicScalarFieldEnum)[keyof typeof Study_access_topicScalarFieldEnum]


  export const TopicsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description'
  };

  export type TopicsScalarFieldEnum = (typeof TopicsScalarFieldEnum)[keyof typeof TopicsScalarFieldEnum]


  export const Transaction_historyScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    price: 'price',
    createddate: 'createddate'
  };

  export type Transaction_historyScalarFieldEnum = (typeof Transaction_historyScalarFieldEnum)[keyof typeof Transaction_historyScalarFieldEnum]


  export const User_abuse_reportsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    content: 'content',
    created_date: 'created_date'
  };

  export type User_abuse_reportsScalarFieldEnum = (typeof User_abuse_reportsScalarFieldEnum)[keyof typeof User_abuse_reportsScalarFieldEnum]


  export const User_coursesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    course_id: 'course_id',
    purchase_date: 'purchase_date'
  };

  export type User_coursesScalarFieldEnum = (typeof User_coursesScalarFieldEnum)[keyof typeof User_coursesScalarFieldEnum]


  export const User_error_reportsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    content: 'content',
    created_date: 'created_date',
    title: 'title',
    post_id: 'post_id',
    status: 'status'
  };

  export type User_error_reportsScalarFieldEnum = (typeof User_error_reportsScalarFieldEnum)[keyof typeof User_error_reportsScalarFieldEnum]


  export const User_packagesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    package_id: 'package_id',
    start_date: 'start_date',
    end_date: 'end_date',
    is_active: 'is_active'
  };

  export type User_packagesScalarFieldEnum = (typeof User_packagesScalarFieldEnum)[keyof typeof User_packagesScalarFieldEnum]


  export const User_profile_historyScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    old_data: 'old_data',
    new_data: 'new_data',
    changed_by: 'changed_by',
    changed_at: 'changed_at'
  };

  export type User_profile_historyScalarFieldEnum = (typeof User_profile_historyScalarFieldEnum)[keyof typeof User_profile_historyScalarFieldEnum]


  export const User_progressScalarFieldEnum: {
    id: 'id',
    word_id: 'word_id',
    user_id: 'user_id',
    level: 'level',
    createdstudydate: 'createdstudydate',
    updatedstudydate: 'updatedstudydate'
  };

  export type User_progressScalarFieldEnum = (typeof User_progressScalarFieldEnum)[keyof typeof User_progressScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    passwordhash: 'passwordhash',
    birthday: 'birthday',
    gender: 'gender',
    fullname: 'fullname',
    address: 'address',
    email: 'email',
    phonenumber: 'phonenumber',
    created_date: 'created_date',
    isactive: 'isactive',
    isadmin: 'isadmin',
    balance: 'balance',
    image_url: 'image_url',
    is_block: 'is_block',
    is_verified: 'is_verified',
    firebase_uid: 'firebase_uid'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const WordsScalarFieldEnum: {
    id: 'id',
    englishname: 'englishname',
    vietnamesename: 'vietnamesename',
    type: 'type',
    examplesentence: 'examplesentence',
    imageurl: 'imageurl',
    transcription: 'transcription',
    course_id: 'course_id'
  };

  export type WordsScalarFieldEnum = (typeof WordsScalarFieldEnum)[keyof typeof WordsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type abuse_report_feedbacksWhereInput = {
    AND?: abuse_report_feedbacksWhereInput | abuse_report_feedbacksWhereInput[]
    OR?: abuse_report_feedbacksWhereInput[]
    NOT?: abuse_report_feedbacksWhereInput | abuse_report_feedbacksWhereInput[]
    id?: UuidFilter<"abuse_report_feedbacks"> | string
    report_id?: UuidFilter<"abuse_report_feedbacks"> | string
    admin_id?: UuidNullableFilter<"abuse_report_feedbacks"> | string | null
    feedback?: StringNullableFilter<"abuse_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableFilter<"abuse_report_feedbacks"> | Date | string | null
    user_abuse_reports?: XOR<User_abuse_reportsScalarRelationFilter, user_abuse_reportsWhereInput>
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type abuse_report_feedbacksOrderByWithRelationInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    responded_at?: SortOrderInput | SortOrder
    user_abuse_reports?: user_abuse_reportsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type abuse_report_feedbacksWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: abuse_report_feedbacksWhereInput | abuse_report_feedbacksWhereInput[]
    OR?: abuse_report_feedbacksWhereInput[]
    NOT?: abuse_report_feedbacksWhereInput | abuse_report_feedbacksWhereInput[]
    report_id?: UuidFilter<"abuse_report_feedbacks"> | string
    admin_id?: UuidNullableFilter<"abuse_report_feedbacks"> | string | null
    feedback?: StringNullableFilter<"abuse_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableFilter<"abuse_report_feedbacks"> | Date | string | null
    user_abuse_reports?: XOR<User_abuse_reportsScalarRelationFilter, user_abuse_reportsWhereInput>
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type abuse_report_feedbacksOrderByWithAggregationInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    responded_at?: SortOrderInput | SortOrder
    _count?: abuse_report_feedbacksCountOrderByAggregateInput
    _max?: abuse_report_feedbacksMaxOrderByAggregateInput
    _min?: abuse_report_feedbacksMinOrderByAggregateInput
  }

  export type abuse_report_feedbacksScalarWhereWithAggregatesInput = {
    AND?: abuse_report_feedbacksScalarWhereWithAggregatesInput | abuse_report_feedbacksScalarWhereWithAggregatesInput[]
    OR?: abuse_report_feedbacksScalarWhereWithAggregatesInput[]
    NOT?: abuse_report_feedbacksScalarWhereWithAggregatesInput | abuse_report_feedbacksScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"abuse_report_feedbacks"> | string
    report_id?: UuidWithAggregatesFilter<"abuse_report_feedbacks"> | string
    admin_id?: UuidNullableWithAggregatesFilter<"abuse_report_feedbacks"> | string | null
    feedback?: StringNullableWithAggregatesFilter<"abuse_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableWithAggregatesFilter<"abuse_report_feedbacks"> | Date | string | null
  }

  export type attendanceWhereInput = {
    AND?: attendanceWhereInput | attendanceWhereInput[]
    OR?: attendanceWhereInput[]
    NOT?: attendanceWhereInput | attendanceWhereInput[]
    id?: UuidFilter<"attendance"> | string
    user_id?: UuidFilter<"attendance"> | string
    checkin_date?: DateTimeFilter<"attendance"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type attendanceOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    checkin_date?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type attendanceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_checkin_date?: attendanceUser_idCheckin_dateCompoundUniqueInput
    AND?: attendanceWhereInput | attendanceWhereInput[]
    OR?: attendanceWhereInput[]
    NOT?: attendanceWhereInput | attendanceWhereInput[]
    user_id?: UuidFilter<"attendance"> | string
    checkin_date?: DateTimeFilter<"attendance"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "user_id_checkin_date">

  export type attendanceOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    checkin_date?: SortOrder
    _count?: attendanceCountOrderByAggregateInput
    _max?: attendanceMaxOrderByAggregateInput
    _min?: attendanceMinOrderByAggregateInput
  }

  export type attendanceScalarWhereWithAggregatesInput = {
    AND?: attendanceScalarWhereWithAggregatesInput | attendanceScalarWhereWithAggregatesInput[]
    OR?: attendanceScalarWhereWithAggregatesInput[]
    NOT?: attendanceScalarWhereWithAggregatesInput | attendanceScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"attendance"> | string
    user_id?: UuidWithAggregatesFilter<"attendance"> | string
    checkin_date?: DateTimeWithAggregatesFilter<"attendance"> | Date | string
  }

  export type coin_transactionWhereInput = {
    AND?: coin_transactionWhereInput | coin_transactionWhereInput[]
    OR?: coin_transactionWhereInput[]
    NOT?: coin_transactionWhereInput | coin_transactionWhereInput[]
    id?: UuidFilter<"coin_transaction"> | string
    user_id?: UuidFilter<"coin_transaction"> | string
    amount?: IntFilter<"coin_transaction"> | number
    reason?: StringFilter<"coin_transaction"> | string
    reference_id?: UuidNullableFilter<"coin_transaction"> | string | null
    reference_table?: StringNullableFilter<"coin_transaction"> | string | null
    created_at?: DateTimeNullableFilter<"coin_transaction"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type coin_transactionOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    reference_id?: SortOrderInput | SortOrder
    reference_table?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type coin_transactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: coin_transactionWhereInput | coin_transactionWhereInput[]
    OR?: coin_transactionWhereInput[]
    NOT?: coin_transactionWhereInput | coin_transactionWhereInput[]
    user_id?: UuidFilter<"coin_transaction"> | string
    amount?: IntFilter<"coin_transaction"> | number
    reason?: StringFilter<"coin_transaction"> | string
    reference_id?: UuidNullableFilter<"coin_transaction"> | string | null
    reference_table?: StringNullableFilter<"coin_transaction"> | string | null
    created_at?: DateTimeNullableFilter<"coin_transaction"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type coin_transactionOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    reference_id?: SortOrderInput | SortOrder
    reference_table?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: coin_transactionCountOrderByAggregateInput
    _avg?: coin_transactionAvgOrderByAggregateInput
    _max?: coin_transactionMaxOrderByAggregateInput
    _min?: coin_transactionMinOrderByAggregateInput
    _sum?: coin_transactionSumOrderByAggregateInput
  }

  export type coin_transactionScalarWhereWithAggregatesInput = {
    AND?: coin_transactionScalarWhereWithAggregatesInput | coin_transactionScalarWhereWithAggregatesInput[]
    OR?: coin_transactionScalarWhereWithAggregatesInput[]
    NOT?: coin_transactionScalarWhereWithAggregatesInput | coin_transactionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"coin_transaction"> | string
    user_id?: UuidWithAggregatesFilter<"coin_transaction"> | string
    amount?: IntWithAggregatesFilter<"coin_transaction"> | number
    reason?: StringWithAggregatesFilter<"coin_transaction"> | string
    reference_id?: UuidNullableWithAggregatesFilter<"coin_transaction"> | string | null
    reference_table?: StringNullableWithAggregatesFilter<"coin_transaction"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"coin_transaction"> | Date | string | null
  }

  export type commentsWhereInput = {
    AND?: commentsWhereInput | commentsWhereInput[]
    OR?: commentsWhereInput[]
    NOT?: commentsWhereInput | commentsWhereInput[]
    id?: UuidFilter<"comments"> | string
    post_id?: UuidNullableFilter<"comments"> | string | null
    user_id?: UuidFilter<"comments"> | string
    react_count?: IntNullableFilter<"comments"> | number | null
    content?: StringNullableFilter<"comments"> | string | null
    created_date?: DateTimeNullableFilter<"comments"> | Date | string | null
    parent_comment?: UuidNullableFilter<"comments"> | string | null
    root_comment?: UuidNullableFilter<"comments"> | string | null
    shared_post_id?: UuidNullableFilter<"comments"> | string | null
    posts?: XOR<PostsNullableScalarRelationFilter, postsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    shared_post?: XOR<Shared_postNullableScalarRelationFilter, shared_postWhereInput> | null
    react_comments?: React_commentsListRelationFilter
  }

  export type commentsOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    parent_comment?: SortOrderInput | SortOrder
    root_comment?: SortOrderInput | SortOrder
    shared_post_id?: SortOrderInput | SortOrder
    posts?: postsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    shared_post?: shared_postOrderByWithRelationInput
    react_comments?: react_commentsOrderByRelationAggregateInput
  }

  export type commentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: commentsWhereInput | commentsWhereInput[]
    OR?: commentsWhereInput[]
    NOT?: commentsWhereInput | commentsWhereInput[]
    post_id?: UuidNullableFilter<"comments"> | string | null
    user_id?: UuidFilter<"comments"> | string
    react_count?: IntNullableFilter<"comments"> | number | null
    content?: StringNullableFilter<"comments"> | string | null
    created_date?: DateTimeNullableFilter<"comments"> | Date | string | null
    parent_comment?: UuidNullableFilter<"comments"> | string | null
    root_comment?: UuidNullableFilter<"comments"> | string | null
    shared_post_id?: UuidNullableFilter<"comments"> | string | null
    posts?: XOR<PostsNullableScalarRelationFilter, postsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    shared_post?: XOR<Shared_postNullableScalarRelationFilter, shared_postWhereInput> | null
    react_comments?: React_commentsListRelationFilter
  }, "id">

  export type commentsOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    parent_comment?: SortOrderInput | SortOrder
    root_comment?: SortOrderInput | SortOrder
    shared_post_id?: SortOrderInput | SortOrder
    _count?: commentsCountOrderByAggregateInput
    _avg?: commentsAvgOrderByAggregateInput
    _max?: commentsMaxOrderByAggregateInput
    _min?: commentsMinOrderByAggregateInput
    _sum?: commentsSumOrderByAggregateInput
  }

  export type commentsScalarWhereWithAggregatesInput = {
    AND?: commentsScalarWhereWithAggregatesInput | commentsScalarWhereWithAggregatesInput[]
    OR?: commentsScalarWhereWithAggregatesInput[]
    NOT?: commentsScalarWhereWithAggregatesInput | commentsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"comments"> | string
    post_id?: UuidNullableWithAggregatesFilter<"comments"> | string | null
    user_id?: UuidWithAggregatesFilter<"comments"> | string
    react_count?: IntNullableWithAggregatesFilter<"comments"> | number | null
    content?: StringNullableWithAggregatesFilter<"comments"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"comments"> | Date | string | null
    parent_comment?: UuidNullableWithAggregatesFilter<"comments"> | string | null
    root_comment?: UuidNullableWithAggregatesFilter<"comments"> | string | null
    shared_post_id?: UuidNullableWithAggregatesFilter<"comments"> | string | null
  }

  export type comments_groupWhereInput = {
    AND?: comments_groupWhereInput | comments_groupWhereInput[]
    OR?: comments_groupWhereInput[]
    NOT?: comments_groupWhereInput | comments_groupWhereInput[]
    id?: UuidFilter<"comments_group"> | string
    group_id?: UuidFilter<"comments_group"> | string
    post_id?: UuidFilter<"comments_group"> | string
    user_id?: UuidFilter<"comments_group"> | string
    react_count?: IntNullableFilter<"comments_group"> | number | null
    content?: StringNullableFilter<"comments_group"> | string | null
    created_date?: DateTimeNullableFilter<"comments_group"> | Date | string | null
    parent_comments?: UuidNullableFilter<"comments_group"> | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    posts?: XOR<PostsScalarRelationFilter, postsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type comments_groupOrderByWithRelationInput = {
    id?: SortOrder
    group_id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    parent_comments?: SortOrderInput | SortOrder
    groups?: groupsOrderByWithRelationInput
    posts?: postsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type comments_groupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: comments_groupWhereInput | comments_groupWhereInput[]
    OR?: comments_groupWhereInput[]
    NOT?: comments_groupWhereInput | comments_groupWhereInput[]
    group_id?: UuidFilter<"comments_group"> | string
    post_id?: UuidFilter<"comments_group"> | string
    user_id?: UuidFilter<"comments_group"> | string
    react_count?: IntNullableFilter<"comments_group"> | number | null
    content?: StringNullableFilter<"comments_group"> | string | null
    created_date?: DateTimeNullableFilter<"comments_group"> | Date | string | null
    parent_comments?: UuidNullableFilter<"comments_group"> | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    posts?: XOR<PostsScalarRelationFilter, postsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type comments_groupOrderByWithAggregationInput = {
    id?: SortOrder
    group_id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    parent_comments?: SortOrderInput | SortOrder
    _count?: comments_groupCountOrderByAggregateInput
    _avg?: comments_groupAvgOrderByAggregateInput
    _max?: comments_groupMaxOrderByAggregateInput
    _min?: comments_groupMinOrderByAggregateInput
    _sum?: comments_groupSumOrderByAggregateInput
  }

  export type comments_groupScalarWhereWithAggregatesInput = {
    AND?: comments_groupScalarWhereWithAggregatesInput | comments_groupScalarWhereWithAggregatesInput[]
    OR?: comments_groupScalarWhereWithAggregatesInput[]
    NOT?: comments_groupScalarWhereWithAggregatesInput | comments_groupScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"comments_group"> | string
    group_id?: UuidWithAggregatesFilter<"comments_group"> | string
    post_id?: UuidWithAggregatesFilter<"comments_group"> | string
    user_id?: UuidWithAggregatesFilter<"comments_group"> | string
    react_count?: IntNullableWithAggregatesFilter<"comments_group"> | number | null
    content?: StringNullableWithAggregatesFilter<"comments_group"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"comments_group"> | Date | string | null
    parent_comments?: UuidNullableWithAggregatesFilter<"comments_group"> | string | null
  }

  export type coursesWhereInput = {
    AND?: coursesWhereInput | coursesWhereInput[]
    OR?: coursesWhereInput[]
    NOT?: coursesWhereInput | coursesWhereInput[]
    id?: UuidFilter<"courses"> | string
    title?: StringFilter<"courses"> | string
    topic_id?: UuidNullableFilter<"courses"> | string | null
    level?: StringNullableFilter<"courses"> | string | null
    description?: StringNullableFilter<"courses"> | string | null
    image_url?: StringNullableFilter<"courses"> | string | null
    price?: IntFilter<"courses"> | number
    created_date?: DateTimeFilter<"courses"> | Date | string
    topics?: XOR<TopicsNullableScalarRelationFilter, topicsWhereInput> | null
    user_courses?: User_coursesListRelationFilter
    words?: WordsListRelationFilter
  }

  export type coursesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    topic_id?: SortOrderInput | SortOrder
    level?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    price?: SortOrder
    created_date?: SortOrder
    topics?: topicsOrderByWithRelationInput
    user_courses?: user_coursesOrderByRelationAggregateInput
    words?: wordsOrderByRelationAggregateInput
  }

  export type coursesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: coursesWhereInput | coursesWhereInput[]
    OR?: coursesWhereInput[]
    NOT?: coursesWhereInput | coursesWhereInput[]
    title?: StringFilter<"courses"> | string
    topic_id?: UuidNullableFilter<"courses"> | string | null
    level?: StringNullableFilter<"courses"> | string | null
    description?: StringNullableFilter<"courses"> | string | null
    image_url?: StringNullableFilter<"courses"> | string | null
    price?: IntFilter<"courses"> | number
    created_date?: DateTimeFilter<"courses"> | Date | string
    topics?: XOR<TopicsNullableScalarRelationFilter, topicsWhereInput> | null
    user_courses?: User_coursesListRelationFilter
    words?: WordsListRelationFilter
  }, "id">

  export type coursesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    topic_id?: SortOrderInput | SortOrder
    level?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    price?: SortOrder
    created_date?: SortOrder
    _count?: coursesCountOrderByAggregateInput
    _avg?: coursesAvgOrderByAggregateInput
    _max?: coursesMaxOrderByAggregateInput
    _min?: coursesMinOrderByAggregateInput
    _sum?: coursesSumOrderByAggregateInput
  }

  export type coursesScalarWhereWithAggregatesInput = {
    AND?: coursesScalarWhereWithAggregatesInput | coursesScalarWhereWithAggregatesInput[]
    OR?: coursesScalarWhereWithAggregatesInput[]
    NOT?: coursesScalarWhereWithAggregatesInput | coursesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"courses"> | string
    title?: StringWithAggregatesFilter<"courses"> | string
    topic_id?: UuidNullableWithAggregatesFilter<"courses"> | string | null
    level?: StringNullableWithAggregatesFilter<"courses"> | string | null
    description?: StringNullableWithAggregatesFilter<"courses"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"courses"> | string | null
    price?: IntWithAggregatesFilter<"courses"> | number
    created_date?: DateTimeWithAggregatesFilter<"courses"> | Date | string
  }

  export type error_report_feedbacksWhereInput = {
    AND?: error_report_feedbacksWhereInput | error_report_feedbacksWhereInput[]
    OR?: error_report_feedbacksWhereInput[]
    NOT?: error_report_feedbacksWhereInput | error_report_feedbacksWhereInput[]
    id?: UuidFilter<"error_report_feedbacks"> | string
    report_id?: UuidFilter<"error_report_feedbacks"> | string
    admin_id?: UuidNullableFilter<"error_report_feedbacks"> | string | null
    feedback?: StringNullableFilter<"error_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableFilter<"error_report_feedbacks"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    user_error_reports?: XOR<User_error_reportsScalarRelationFilter, user_error_reportsWhereInput>
  }

  export type error_report_feedbacksOrderByWithRelationInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    responded_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    user_error_reports?: user_error_reportsOrderByWithRelationInput
  }

  export type error_report_feedbacksWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: error_report_feedbacksWhereInput | error_report_feedbacksWhereInput[]
    OR?: error_report_feedbacksWhereInput[]
    NOT?: error_report_feedbacksWhereInput | error_report_feedbacksWhereInput[]
    report_id?: UuidFilter<"error_report_feedbacks"> | string
    admin_id?: UuidNullableFilter<"error_report_feedbacks"> | string | null
    feedback?: StringNullableFilter<"error_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableFilter<"error_report_feedbacks"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    user_error_reports?: XOR<User_error_reportsScalarRelationFilter, user_error_reportsWhereInput>
  }, "id">

  export type error_report_feedbacksOrderByWithAggregationInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    responded_at?: SortOrderInput | SortOrder
    _count?: error_report_feedbacksCountOrderByAggregateInput
    _max?: error_report_feedbacksMaxOrderByAggregateInput
    _min?: error_report_feedbacksMinOrderByAggregateInput
  }

  export type error_report_feedbacksScalarWhereWithAggregatesInput = {
    AND?: error_report_feedbacksScalarWhereWithAggregatesInput | error_report_feedbacksScalarWhereWithAggregatesInput[]
    OR?: error_report_feedbacksScalarWhereWithAggregatesInput[]
    NOT?: error_report_feedbacksScalarWhereWithAggregatesInput | error_report_feedbacksScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"error_report_feedbacks"> | string
    report_id?: UuidWithAggregatesFilter<"error_report_feedbacks"> | string
    admin_id?: UuidNullableWithAggregatesFilter<"error_report_feedbacks"> | string | null
    feedback?: StringNullableWithAggregatesFilter<"error_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableWithAggregatesFilter<"error_report_feedbacks"> | Date | string | null
  }

  export type group_membersWhereInput = {
    AND?: group_membersWhereInput | group_membersWhereInput[]
    OR?: group_membersWhereInput[]
    NOT?: group_membersWhereInput | group_membersWhereInput[]
    id?: UuidFilter<"group_members"> | string
    user_id?: UuidFilter<"group_members"> | string
    group_id?: UuidFilter<"group_members"> | string
    is_admin?: BoolFilter<"group_members"> | boolean
    joined_date?: DateTimeNullableFilter<"group_members"> | Date | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type group_membersOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    is_admin?: SortOrder
    joined_date?: SortOrderInput | SortOrder
    groups?: groupsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type group_membersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    group_id_user_id?: group_membersGroup_idUser_idCompoundUniqueInput
    AND?: group_membersWhereInput | group_membersWhereInput[]
    OR?: group_membersWhereInput[]
    NOT?: group_membersWhereInput | group_membersWhereInput[]
    user_id?: UuidFilter<"group_members"> | string
    group_id?: UuidFilter<"group_members"> | string
    is_admin?: BoolFilter<"group_members"> | boolean
    joined_date?: DateTimeNullableFilter<"group_members"> | Date | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "group_id_user_id">

  export type group_membersOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    is_admin?: SortOrder
    joined_date?: SortOrderInput | SortOrder
    _count?: group_membersCountOrderByAggregateInput
    _max?: group_membersMaxOrderByAggregateInput
    _min?: group_membersMinOrderByAggregateInput
  }

  export type group_membersScalarWhereWithAggregatesInput = {
    AND?: group_membersScalarWhereWithAggregatesInput | group_membersScalarWhereWithAggregatesInput[]
    OR?: group_membersScalarWhereWithAggregatesInput[]
    NOT?: group_membersScalarWhereWithAggregatesInput | group_membersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"group_members"> | string
    user_id?: UuidWithAggregatesFilter<"group_members"> | string
    group_id?: UuidWithAggregatesFilter<"group_members"> | string
    is_admin?: BoolWithAggregatesFilter<"group_members"> | boolean
    joined_date?: DateTimeNullableWithAggregatesFilter<"group_members"> | Date | string | null
  }

  export type group_postsWhereInput = {
    AND?: group_postsWhereInput | group_postsWhereInput[]
    OR?: group_postsWhereInput[]
    NOT?: group_postsWhereInput | group_postsWhereInput[]
    id?: UuidFilter<"group_posts"> | string
    user_id?: UuidFilter<"group_posts"> | string
    group_id?: UuidFilter<"group_posts"> | string
    content?: StringNullableFilter<"group_posts"> | string | null
    image_url?: StringNullableFilter<"group_posts"> | string | null
    react_count?: IntNullableFilter<"group_posts"> | number | null
    created_date?: DateTimeNullableFilter<"group_posts"> | Date | string | null
    updated_date?: DateTimeNullableFilter<"group_posts"> | Date | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type group_postsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    content?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    react_count?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    groups?: groupsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type group_postsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: group_postsWhereInput | group_postsWhereInput[]
    OR?: group_postsWhereInput[]
    NOT?: group_postsWhereInput | group_postsWhereInput[]
    user_id?: UuidFilter<"group_posts"> | string
    group_id?: UuidFilter<"group_posts"> | string
    content?: StringNullableFilter<"group_posts"> | string | null
    image_url?: StringNullableFilter<"group_posts"> | string | null
    react_count?: IntNullableFilter<"group_posts"> | number | null
    created_date?: DateTimeNullableFilter<"group_posts"> | Date | string | null
    updated_date?: DateTimeNullableFilter<"group_posts"> | Date | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type group_postsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    content?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    react_count?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: group_postsCountOrderByAggregateInput
    _avg?: group_postsAvgOrderByAggregateInput
    _max?: group_postsMaxOrderByAggregateInput
    _min?: group_postsMinOrderByAggregateInput
    _sum?: group_postsSumOrderByAggregateInput
  }

  export type group_postsScalarWhereWithAggregatesInput = {
    AND?: group_postsScalarWhereWithAggregatesInput | group_postsScalarWhereWithAggregatesInput[]
    OR?: group_postsScalarWhereWithAggregatesInput[]
    NOT?: group_postsScalarWhereWithAggregatesInput | group_postsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"group_posts"> | string
    user_id?: UuidWithAggregatesFilter<"group_posts"> | string
    group_id?: UuidWithAggregatesFilter<"group_posts"> | string
    content?: StringNullableWithAggregatesFilter<"group_posts"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"group_posts"> | string | null
    react_count?: IntNullableWithAggregatesFilter<"group_posts"> | number | null
    created_date?: DateTimeNullableWithAggregatesFilter<"group_posts"> | Date | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"group_posts"> | Date | string | null
  }

  export type groupsWhereInput = {
    AND?: groupsWhereInput | groupsWhereInput[]
    OR?: groupsWhereInput[]
    NOT?: groupsWhereInput | groupsWhereInput[]
    id?: UuidFilter<"groups"> | string
    name?: StringFilter<"groups"> | string
    image_url?: StringNullableFilter<"groups"> | string | null
    created_by?: UuidFilter<"groups"> | string
    created_date?: DateTimeNullableFilter<"groups"> | Date | string | null
    count_member?: IntNullableFilter<"groups"> | number | null
    comments_group?: Comments_groupListRelationFilter
    group_members?: Group_membersListRelationFilter
    group_posts?: Group_postsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    messages?: MessagesListRelationFilter
  }

  export type groupsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    image_url?: SortOrderInput | SortOrder
    created_by?: SortOrder
    created_date?: SortOrderInput | SortOrder
    count_member?: SortOrderInput | SortOrder
    comments_group?: comments_groupOrderByRelationAggregateInput
    group_members?: group_membersOrderByRelationAggregateInput
    group_posts?: group_postsOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    messages?: messagesOrderByRelationAggregateInput
  }

  export type groupsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: groupsWhereInput | groupsWhereInput[]
    OR?: groupsWhereInput[]
    NOT?: groupsWhereInput | groupsWhereInput[]
    name?: StringFilter<"groups"> | string
    image_url?: StringNullableFilter<"groups"> | string | null
    created_by?: UuidFilter<"groups"> | string
    created_date?: DateTimeNullableFilter<"groups"> | Date | string | null
    count_member?: IntNullableFilter<"groups"> | number | null
    comments_group?: Comments_groupListRelationFilter
    group_members?: Group_membersListRelationFilter
    group_posts?: Group_postsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    messages?: MessagesListRelationFilter
  }, "id">

  export type groupsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    image_url?: SortOrderInput | SortOrder
    created_by?: SortOrder
    created_date?: SortOrderInput | SortOrder
    count_member?: SortOrderInput | SortOrder
    _count?: groupsCountOrderByAggregateInput
    _avg?: groupsAvgOrderByAggregateInput
    _max?: groupsMaxOrderByAggregateInput
    _min?: groupsMinOrderByAggregateInput
    _sum?: groupsSumOrderByAggregateInput
  }

  export type groupsScalarWhereWithAggregatesInput = {
    AND?: groupsScalarWhereWithAggregatesInput | groupsScalarWhereWithAggregatesInput[]
    OR?: groupsScalarWhereWithAggregatesInput[]
    NOT?: groupsScalarWhereWithAggregatesInput | groupsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"groups"> | string
    name?: StringWithAggregatesFilter<"groups"> | string
    image_url?: StringNullableWithAggregatesFilter<"groups"> | string | null
    created_by?: UuidWithAggregatesFilter<"groups"> | string
    created_date?: DateTimeNullableWithAggregatesFilter<"groups"> | Date | string | null
    count_member?: IntNullableWithAggregatesFilter<"groups"> | number | null
  }

  export type messagesWhereInput = {
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    id?: UuidFilter<"messages"> | string
    sender_id?: UuidFilter<"messages"> | string
    group_id?: UuidFilter<"messages"> | string
    created_date?: DateTimeNullableFilter<"messages"> | Date | string | null
    content?: StringNullableFilter<"messages"> | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type messagesOrderByWithRelationInput = {
    id?: SortOrder
    sender_id?: SortOrder
    group_id?: SortOrder
    created_date?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    groups?: groupsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    sender_id?: UuidFilter<"messages"> | string
    group_id?: UuidFilter<"messages"> | string
    created_date?: DateTimeNullableFilter<"messages"> | Date | string | null
    content?: StringNullableFilter<"messages"> | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type messagesOrderByWithAggregationInput = {
    id?: SortOrder
    sender_id?: SortOrder
    group_id?: SortOrder
    created_date?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    _count?: messagesCountOrderByAggregateInput
    _max?: messagesMaxOrderByAggregateInput
    _min?: messagesMinOrderByAggregateInput
  }

  export type messagesScalarWhereWithAggregatesInput = {
    AND?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    OR?: messagesScalarWhereWithAggregatesInput[]
    NOT?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"messages"> | string
    sender_id?: UuidWithAggregatesFilter<"messages"> | string
    group_id?: UuidWithAggregatesFilter<"messages"> | string
    created_date?: DateTimeNullableWithAggregatesFilter<"messages"> | Date | string | null
    content?: StringNullableWithAggregatesFilter<"messages"> | string | null
  }

  export type packagesWhereInput = {
    AND?: packagesWhereInput | packagesWhereInput[]
    OR?: packagesWhereInput[]
    NOT?: packagesWhereInput | packagesWhereInput[]
    id?: UuidFilter<"packages"> | string
    name?: StringFilter<"packages"> | string
    duration_days?: IntFilter<"packages"> | number
    price?: IntFilter<"packages"> | number
    is_premium?: BoolNullableFilter<"packages"> | boolean | null
    user_packages?: User_packagesListRelationFilter
  }

  export type packagesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    is_premium?: SortOrderInput | SortOrder
    user_packages?: user_packagesOrderByRelationAggregateInput
  }

  export type packagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: packagesWhereInput | packagesWhereInput[]
    OR?: packagesWhereInput[]
    NOT?: packagesWhereInput | packagesWhereInput[]
    name?: StringFilter<"packages"> | string
    duration_days?: IntFilter<"packages"> | number
    price?: IntFilter<"packages"> | number
    is_premium?: BoolNullableFilter<"packages"> | boolean | null
    user_packages?: User_packagesListRelationFilter
  }, "id">

  export type packagesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    is_premium?: SortOrderInput | SortOrder
    _count?: packagesCountOrderByAggregateInput
    _avg?: packagesAvgOrderByAggregateInput
    _max?: packagesMaxOrderByAggregateInput
    _min?: packagesMinOrderByAggregateInput
    _sum?: packagesSumOrderByAggregateInput
  }

  export type packagesScalarWhereWithAggregatesInput = {
    AND?: packagesScalarWhereWithAggregatesInput | packagesScalarWhereWithAggregatesInput[]
    OR?: packagesScalarWhereWithAggregatesInput[]
    NOT?: packagesScalarWhereWithAggregatesInput | packagesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"packages"> | string
    name?: StringWithAggregatesFilter<"packages"> | string
    duration_days?: IntWithAggregatesFilter<"packages"> | number
    price?: IntWithAggregatesFilter<"packages"> | number
    is_premium?: BoolNullableWithAggregatesFilter<"packages"> | boolean | null
  }

  export type postsWhereInput = {
    AND?: postsWhereInput | postsWhereInput[]
    OR?: postsWhereInput[]
    NOT?: postsWhereInput | postsWhereInput[]
    id?: UuidFilter<"posts"> | string
    user_id?: UuidFilter<"posts"> | string
    react_count?: IntNullableFilter<"posts"> | number | null
    content?: StringNullableFilter<"posts"> | string | null
    created_date?: DateTimeNullableFilter<"posts"> | Date | string | null
    image_url?: StringNullableFilter<"posts"> | string | null
    shared_user_id_count?: IntNullableFilter<"posts"> | number | null
    comment_count?: IntNullableFilter<"posts"> | number | null
    comments?: CommentsListRelationFilter
    comments_group?: Comments_groupListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    react_posts?: React_postsListRelationFilter
    shared_post?: Shared_postListRelationFilter
  }

  export type postsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    shared_user_id_count?: SortOrderInput | SortOrder
    comment_count?: SortOrderInput | SortOrder
    comments?: commentsOrderByRelationAggregateInput
    comments_group?: comments_groupOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    react_posts?: react_postsOrderByRelationAggregateInput
    shared_post?: shared_postOrderByRelationAggregateInput
  }

  export type postsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: postsWhereInput | postsWhereInput[]
    OR?: postsWhereInput[]
    NOT?: postsWhereInput | postsWhereInput[]
    user_id?: UuidFilter<"posts"> | string
    react_count?: IntNullableFilter<"posts"> | number | null
    content?: StringNullableFilter<"posts"> | string | null
    created_date?: DateTimeNullableFilter<"posts"> | Date | string | null
    image_url?: StringNullableFilter<"posts"> | string | null
    shared_user_id_count?: IntNullableFilter<"posts"> | number | null
    comment_count?: IntNullableFilter<"posts"> | number | null
    comments?: CommentsListRelationFilter
    comments_group?: Comments_groupListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    react_posts?: React_postsListRelationFilter
    shared_post?: Shared_postListRelationFilter
  }, "id">

  export type postsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    shared_user_id_count?: SortOrderInput | SortOrder
    comment_count?: SortOrderInput | SortOrder
    _count?: postsCountOrderByAggregateInput
    _avg?: postsAvgOrderByAggregateInput
    _max?: postsMaxOrderByAggregateInput
    _min?: postsMinOrderByAggregateInput
    _sum?: postsSumOrderByAggregateInput
  }

  export type postsScalarWhereWithAggregatesInput = {
    AND?: postsScalarWhereWithAggregatesInput | postsScalarWhereWithAggregatesInput[]
    OR?: postsScalarWhereWithAggregatesInput[]
    NOT?: postsScalarWhereWithAggregatesInput | postsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"posts"> | string
    user_id?: UuidWithAggregatesFilter<"posts"> | string
    react_count?: IntNullableWithAggregatesFilter<"posts"> | number | null
    content?: StringNullableWithAggregatesFilter<"posts"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"posts"> | Date | string | null
    image_url?: StringNullableWithAggregatesFilter<"posts"> | string | null
    shared_user_id_count?: IntNullableWithAggregatesFilter<"posts"> | number | null
    comment_count?: IntNullableWithAggregatesFilter<"posts"> | number | null
  }

  export type react_commentsWhereInput = {
    AND?: react_commentsWhereInput | react_commentsWhereInput[]
    OR?: react_commentsWhereInput[]
    NOT?: react_commentsWhereInput | react_commentsWhereInput[]
    id?: UuidFilter<"react_comments"> | string
    comment_id?: UuidFilter<"react_comments"> | string
    user_id?: UuidFilter<"react_comments"> | string
    created_date?: DateTimeFilter<"react_comments"> | Date | string
    comments?: XOR<CommentsScalarRelationFilter, commentsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type react_commentsOrderByWithRelationInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
    comments?: commentsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type react_commentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: react_commentsWhereInput | react_commentsWhereInput[]
    OR?: react_commentsWhereInput[]
    NOT?: react_commentsWhereInput | react_commentsWhereInput[]
    comment_id?: UuidFilter<"react_comments"> | string
    user_id?: UuidFilter<"react_comments"> | string
    created_date?: DateTimeFilter<"react_comments"> | Date | string
    comments?: XOR<CommentsScalarRelationFilter, commentsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type react_commentsOrderByWithAggregationInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
    _count?: react_commentsCountOrderByAggregateInput
    _max?: react_commentsMaxOrderByAggregateInput
    _min?: react_commentsMinOrderByAggregateInput
  }

  export type react_commentsScalarWhereWithAggregatesInput = {
    AND?: react_commentsScalarWhereWithAggregatesInput | react_commentsScalarWhereWithAggregatesInput[]
    OR?: react_commentsScalarWhereWithAggregatesInput[]
    NOT?: react_commentsScalarWhereWithAggregatesInput | react_commentsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"react_comments"> | string
    comment_id?: UuidWithAggregatesFilter<"react_comments"> | string
    user_id?: UuidWithAggregatesFilter<"react_comments"> | string
    created_date?: DateTimeWithAggregatesFilter<"react_comments"> | Date | string
  }

  export type react_postsWhereInput = {
    AND?: react_postsWhereInput | react_postsWhereInput[]
    OR?: react_postsWhereInput[]
    NOT?: react_postsWhereInput | react_postsWhereInput[]
    id?: UuidFilter<"react_posts"> | string
    post_id?: UuidFilter<"react_posts"> | string
    user_id?: UuidFilter<"react_posts"> | string
    created_date?: DateTimeNullableFilter<"react_posts"> | Date | string | null
    posts?: XOR<PostsScalarRelationFilter, postsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type react_postsOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrderInput | SortOrder
    posts?: postsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type react_postsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: react_postsWhereInput | react_postsWhereInput[]
    OR?: react_postsWhereInput[]
    NOT?: react_postsWhereInput | react_postsWhereInput[]
    post_id?: UuidFilter<"react_posts"> | string
    user_id?: UuidFilter<"react_posts"> | string
    created_date?: DateTimeNullableFilter<"react_posts"> | Date | string | null
    posts?: XOR<PostsScalarRelationFilter, postsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type react_postsOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrderInput | SortOrder
    _count?: react_postsCountOrderByAggregateInput
    _max?: react_postsMaxOrderByAggregateInput
    _min?: react_postsMinOrderByAggregateInput
  }

  export type react_postsScalarWhereWithAggregatesInput = {
    AND?: react_postsScalarWhereWithAggregatesInput | react_postsScalarWhereWithAggregatesInput[]
    OR?: react_postsScalarWhereWithAggregatesInput[]
    NOT?: react_postsScalarWhereWithAggregatesInput | react_postsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"react_posts"> | string
    post_id?: UuidWithAggregatesFilter<"react_posts"> | string
    user_id?: UuidWithAggregatesFilter<"react_posts"> | string
    created_date?: DateTimeNullableWithAggregatesFilter<"react_posts"> | Date | string | null
  }

  export type shared_postWhereInput = {
    AND?: shared_postWhereInput | shared_postWhereInput[]
    OR?: shared_postWhereInput[]
    NOT?: shared_postWhereInput | shared_postWhereInput[]
    id?: UuidFilter<"shared_post"> | string
    post_id?: UuidNullableFilter<"shared_post"> | string | null
    user_id?: UuidFilter<"shared_post"> | string
    react_count?: IntNullableFilter<"shared_post"> | number | null
    content?: StringNullableFilter<"shared_post"> | string | null
    created_date?: DateTimeNullableFilter<"shared_post"> | Date | string | null
    comment_count?: IntNullableFilter<"shared_post"> | number | null
    shared_post_id?: UuidNullableFilter<"shared_post"> | string | null
    shared_count?: IntNullableFilter<"shared_post"> | number | null
    comments?: CommentsListRelationFilter
    shared_post?: XOR<Shared_postNullableScalarRelationFilter, shared_postWhereInput> | null
    other_shared_post?: Shared_postListRelationFilter
    posts?: XOR<PostsNullableScalarRelationFilter, postsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type shared_postOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    comment_count?: SortOrderInput | SortOrder
    shared_post_id?: SortOrderInput | SortOrder
    shared_count?: SortOrderInput | SortOrder
    comments?: commentsOrderByRelationAggregateInput
    shared_post?: shared_postOrderByWithRelationInput
    other_shared_post?: shared_postOrderByRelationAggregateInput
    posts?: postsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type shared_postWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: shared_postWhereInput | shared_postWhereInput[]
    OR?: shared_postWhereInput[]
    NOT?: shared_postWhereInput | shared_postWhereInput[]
    post_id?: UuidNullableFilter<"shared_post"> | string | null
    user_id?: UuidFilter<"shared_post"> | string
    react_count?: IntNullableFilter<"shared_post"> | number | null
    content?: StringNullableFilter<"shared_post"> | string | null
    created_date?: DateTimeNullableFilter<"shared_post"> | Date | string | null
    comment_count?: IntNullableFilter<"shared_post"> | number | null
    shared_post_id?: UuidNullableFilter<"shared_post"> | string | null
    shared_count?: IntNullableFilter<"shared_post"> | number | null
    comments?: CommentsListRelationFilter
    shared_post?: XOR<Shared_postNullableScalarRelationFilter, shared_postWhereInput> | null
    other_shared_post?: Shared_postListRelationFilter
    posts?: XOR<PostsNullableScalarRelationFilter, postsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type shared_postOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    react_count?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    comment_count?: SortOrderInput | SortOrder
    shared_post_id?: SortOrderInput | SortOrder
    shared_count?: SortOrderInput | SortOrder
    _count?: shared_postCountOrderByAggregateInput
    _avg?: shared_postAvgOrderByAggregateInput
    _max?: shared_postMaxOrderByAggregateInput
    _min?: shared_postMinOrderByAggregateInput
    _sum?: shared_postSumOrderByAggregateInput
  }

  export type shared_postScalarWhereWithAggregatesInput = {
    AND?: shared_postScalarWhereWithAggregatesInput | shared_postScalarWhereWithAggregatesInput[]
    OR?: shared_postScalarWhereWithAggregatesInput[]
    NOT?: shared_postScalarWhereWithAggregatesInput | shared_postScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"shared_post"> | string
    post_id?: UuidNullableWithAggregatesFilter<"shared_post"> | string | null
    user_id?: UuidWithAggregatesFilter<"shared_post"> | string
    react_count?: IntNullableWithAggregatesFilter<"shared_post"> | number | null
    content?: StringNullableWithAggregatesFilter<"shared_post"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"shared_post"> | Date | string | null
    comment_count?: IntNullableWithAggregatesFilter<"shared_post"> | number | null
    shared_post_id?: UuidNullableWithAggregatesFilter<"shared_post"> | string | null
    shared_count?: IntNullableWithAggregatesFilter<"shared_post"> | number | null
  }

  export type study_access_topicWhereInput = {
    AND?: study_access_topicWhereInput | study_access_topicWhereInput[]
    OR?: study_access_topicWhereInput[]
    NOT?: study_access_topicWhereInput | study_access_topicWhereInput[]
    id?: UuidFilter<"study_access_topic"> | string
    user_id?: UuidFilter<"study_access_topic"> | string
    topic_id?: UuidFilter<"study_access_topic"> | string
    access_type?: StringNullableFilter<"study_access_topic"> | string | null
    access_date?: DateTimeNullableFilter<"study_access_topic"> | Date | string | null
    expire_date?: DateTimeFilter<"study_access_topic"> | Date | string
    topics?: XOR<TopicsScalarRelationFilter, topicsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type study_access_topicOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    topic_id?: SortOrder
    access_type?: SortOrderInput | SortOrder
    access_date?: SortOrderInput | SortOrder
    expire_date?: SortOrder
    topics?: topicsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type study_access_topicWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_topic_id_access_date?: study_access_topicUser_idTopic_idAccess_dateCompoundUniqueInput
    AND?: study_access_topicWhereInput | study_access_topicWhereInput[]
    OR?: study_access_topicWhereInput[]
    NOT?: study_access_topicWhereInput | study_access_topicWhereInput[]
    user_id?: UuidFilter<"study_access_topic"> | string
    topic_id?: UuidFilter<"study_access_topic"> | string
    access_type?: StringNullableFilter<"study_access_topic"> | string | null
    access_date?: DateTimeNullableFilter<"study_access_topic"> | Date | string | null
    expire_date?: DateTimeFilter<"study_access_topic"> | Date | string
    topics?: XOR<TopicsScalarRelationFilter, topicsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "user_id_topic_id_access_date">

  export type study_access_topicOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    topic_id?: SortOrder
    access_type?: SortOrderInput | SortOrder
    access_date?: SortOrderInput | SortOrder
    expire_date?: SortOrder
    _count?: study_access_topicCountOrderByAggregateInput
    _max?: study_access_topicMaxOrderByAggregateInput
    _min?: study_access_topicMinOrderByAggregateInput
  }

  export type study_access_topicScalarWhereWithAggregatesInput = {
    AND?: study_access_topicScalarWhereWithAggregatesInput | study_access_topicScalarWhereWithAggregatesInput[]
    OR?: study_access_topicScalarWhereWithAggregatesInput[]
    NOT?: study_access_topicScalarWhereWithAggregatesInput | study_access_topicScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"study_access_topic"> | string
    user_id?: UuidWithAggregatesFilter<"study_access_topic"> | string
    topic_id?: UuidWithAggregatesFilter<"study_access_topic"> | string
    access_type?: StringNullableWithAggregatesFilter<"study_access_topic"> | string | null
    access_date?: DateTimeNullableWithAggregatesFilter<"study_access_topic"> | Date | string | null
    expire_date?: DateTimeWithAggregatesFilter<"study_access_topic"> | Date | string
  }

  export type topicsWhereInput = {
    AND?: topicsWhereInput | topicsWhereInput[]
    OR?: topicsWhereInput[]
    NOT?: topicsWhereInput | topicsWhereInput[]
    id?: UuidFilter<"topics"> | string
    name?: StringFilter<"topics"> | string
    description?: StringNullableFilter<"topics"> | string | null
    courses?: CoursesListRelationFilter
    study_access_topic?: Study_access_topicListRelationFilter
  }

  export type topicsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    courses?: coursesOrderByRelationAggregateInput
    study_access_topic?: study_access_topicOrderByRelationAggregateInput
  }

  export type topicsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: topicsWhereInput | topicsWhereInput[]
    OR?: topicsWhereInput[]
    NOT?: topicsWhereInput | topicsWhereInput[]
    name?: StringFilter<"topics"> | string
    description?: StringNullableFilter<"topics"> | string | null
    courses?: CoursesListRelationFilter
    study_access_topic?: Study_access_topicListRelationFilter
  }, "id">

  export type topicsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: topicsCountOrderByAggregateInput
    _max?: topicsMaxOrderByAggregateInput
    _min?: topicsMinOrderByAggregateInput
  }

  export type topicsScalarWhereWithAggregatesInput = {
    AND?: topicsScalarWhereWithAggregatesInput | topicsScalarWhereWithAggregatesInput[]
    OR?: topicsScalarWhereWithAggregatesInput[]
    NOT?: topicsScalarWhereWithAggregatesInput | topicsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"topics"> | string
    name?: StringWithAggregatesFilter<"topics"> | string
    description?: StringNullableWithAggregatesFilter<"topics"> | string | null
  }

  export type transaction_historyWhereInput = {
    AND?: transaction_historyWhereInput | transaction_historyWhereInput[]
    OR?: transaction_historyWhereInput[]
    NOT?: transaction_historyWhereInput | transaction_historyWhereInput[]
    id?: UuidFilter<"transaction_history"> | string
    user_id?: UuidFilter<"transaction_history"> | string
    price?: DecimalNullableFilter<"transaction_history"> | Decimal | DecimalJsLike | number | string | null
    createddate?: DateTimeNullableFilter<"transaction_history"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type transaction_historyOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    price?: SortOrderInput | SortOrder
    createddate?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type transaction_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: transaction_historyWhereInput | transaction_historyWhereInput[]
    OR?: transaction_historyWhereInput[]
    NOT?: transaction_historyWhereInput | transaction_historyWhereInput[]
    user_id?: UuidFilter<"transaction_history"> | string
    price?: DecimalNullableFilter<"transaction_history"> | Decimal | DecimalJsLike | number | string | null
    createddate?: DateTimeNullableFilter<"transaction_history"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type transaction_historyOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    price?: SortOrderInput | SortOrder
    createddate?: SortOrderInput | SortOrder
    _count?: transaction_historyCountOrderByAggregateInput
    _avg?: transaction_historyAvgOrderByAggregateInput
    _max?: transaction_historyMaxOrderByAggregateInput
    _min?: transaction_historyMinOrderByAggregateInput
    _sum?: transaction_historySumOrderByAggregateInput
  }

  export type transaction_historyScalarWhereWithAggregatesInput = {
    AND?: transaction_historyScalarWhereWithAggregatesInput | transaction_historyScalarWhereWithAggregatesInput[]
    OR?: transaction_historyScalarWhereWithAggregatesInput[]
    NOT?: transaction_historyScalarWhereWithAggregatesInput | transaction_historyScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"transaction_history"> | string
    user_id?: UuidWithAggregatesFilter<"transaction_history"> | string
    price?: DecimalNullableWithAggregatesFilter<"transaction_history"> | Decimal | DecimalJsLike | number | string | null
    createddate?: DateTimeNullableWithAggregatesFilter<"transaction_history"> | Date | string | null
  }

  export type user_abuse_reportsWhereInput = {
    AND?: user_abuse_reportsWhereInput | user_abuse_reportsWhereInput[]
    OR?: user_abuse_reportsWhereInput[]
    NOT?: user_abuse_reportsWhereInput | user_abuse_reportsWhereInput[]
    id?: UuidFilter<"user_abuse_reports"> | string
    user_id?: UuidFilter<"user_abuse_reports"> | string
    content?: StringFilter<"user_abuse_reports"> | string
    created_date?: DateTimeFilter<"user_abuse_reports"> | Date | string
    abuse_report_feedbacks?: Abuse_report_feedbacksListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_abuse_reportsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    abuse_report_feedbacks?: abuse_report_feedbacksOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type user_abuse_reportsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_abuse_reportsWhereInput | user_abuse_reportsWhereInput[]
    OR?: user_abuse_reportsWhereInput[]
    NOT?: user_abuse_reportsWhereInput | user_abuse_reportsWhereInput[]
    user_id?: UuidFilter<"user_abuse_reports"> | string
    content?: StringFilter<"user_abuse_reports"> | string
    created_date?: DateTimeFilter<"user_abuse_reports"> | Date | string
    abuse_report_feedbacks?: Abuse_report_feedbacksListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type user_abuse_reportsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    _count?: user_abuse_reportsCountOrderByAggregateInput
    _max?: user_abuse_reportsMaxOrderByAggregateInput
    _min?: user_abuse_reportsMinOrderByAggregateInput
  }

  export type user_abuse_reportsScalarWhereWithAggregatesInput = {
    AND?: user_abuse_reportsScalarWhereWithAggregatesInput | user_abuse_reportsScalarWhereWithAggregatesInput[]
    OR?: user_abuse_reportsScalarWhereWithAggregatesInput[]
    NOT?: user_abuse_reportsScalarWhereWithAggregatesInput | user_abuse_reportsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_abuse_reports"> | string
    user_id?: UuidWithAggregatesFilter<"user_abuse_reports"> | string
    content?: StringWithAggregatesFilter<"user_abuse_reports"> | string
    created_date?: DateTimeWithAggregatesFilter<"user_abuse_reports"> | Date | string
  }

  export type user_coursesWhereInput = {
    AND?: user_coursesWhereInput | user_coursesWhereInput[]
    OR?: user_coursesWhereInput[]
    NOT?: user_coursesWhereInput | user_coursesWhereInput[]
    id?: UuidFilter<"user_courses"> | string
    user_id?: UuidFilter<"user_courses"> | string
    course_id?: UuidFilter<"user_courses"> | string
    purchase_date?: DateTimeNullableFilter<"user_courses"> | Date | string | null
    courses?: XOR<CoursesScalarRelationFilter, coursesWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_coursesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    purchase_date?: SortOrderInput | SortOrder
    courses?: coursesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type user_coursesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_course_id?: user_coursesUser_idCourse_idCompoundUniqueInput
    AND?: user_coursesWhereInput | user_coursesWhereInput[]
    OR?: user_coursesWhereInput[]
    NOT?: user_coursesWhereInput | user_coursesWhereInput[]
    user_id?: UuidFilter<"user_courses"> | string
    course_id?: UuidFilter<"user_courses"> | string
    purchase_date?: DateTimeNullableFilter<"user_courses"> | Date | string | null
    courses?: XOR<CoursesScalarRelationFilter, coursesWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "user_id_course_id">

  export type user_coursesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    purchase_date?: SortOrderInput | SortOrder
    _count?: user_coursesCountOrderByAggregateInput
    _max?: user_coursesMaxOrderByAggregateInput
    _min?: user_coursesMinOrderByAggregateInput
  }

  export type user_coursesScalarWhereWithAggregatesInput = {
    AND?: user_coursesScalarWhereWithAggregatesInput | user_coursesScalarWhereWithAggregatesInput[]
    OR?: user_coursesScalarWhereWithAggregatesInput[]
    NOT?: user_coursesScalarWhereWithAggregatesInput | user_coursesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_courses"> | string
    user_id?: UuidWithAggregatesFilter<"user_courses"> | string
    course_id?: UuidWithAggregatesFilter<"user_courses"> | string
    purchase_date?: DateTimeNullableWithAggregatesFilter<"user_courses"> | Date | string | null
  }

  export type user_error_reportsWhereInput = {
    AND?: user_error_reportsWhereInput | user_error_reportsWhereInput[]
    OR?: user_error_reportsWhereInput[]
    NOT?: user_error_reportsWhereInput | user_error_reportsWhereInput[]
    id?: UuidFilter<"user_error_reports"> | string
    user_id?: UuidFilter<"user_error_reports"> | string
    content?: StringFilter<"user_error_reports"> | string
    created_date?: DateTimeFilter<"user_error_reports"> | Date | string
    title?: StringFilter<"user_error_reports"> | string
    post_id?: UuidFilter<"user_error_reports"> | string
    status?: StringNullableFilter<"user_error_reports"> | string | null
    error_report_feedbacks?: Error_report_feedbacksListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_error_reportsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    title?: SortOrder
    post_id?: SortOrder
    status?: SortOrderInput | SortOrder
    error_report_feedbacks?: error_report_feedbacksOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type user_error_reportsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_error_reportsWhereInput | user_error_reportsWhereInput[]
    OR?: user_error_reportsWhereInput[]
    NOT?: user_error_reportsWhereInput | user_error_reportsWhereInput[]
    user_id?: UuidFilter<"user_error_reports"> | string
    content?: StringFilter<"user_error_reports"> | string
    created_date?: DateTimeFilter<"user_error_reports"> | Date | string
    title?: StringFilter<"user_error_reports"> | string
    post_id?: UuidFilter<"user_error_reports"> | string
    status?: StringNullableFilter<"user_error_reports"> | string | null
    error_report_feedbacks?: Error_report_feedbacksListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type user_error_reportsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    title?: SortOrder
    post_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: user_error_reportsCountOrderByAggregateInput
    _max?: user_error_reportsMaxOrderByAggregateInput
    _min?: user_error_reportsMinOrderByAggregateInput
  }

  export type user_error_reportsScalarWhereWithAggregatesInput = {
    AND?: user_error_reportsScalarWhereWithAggregatesInput | user_error_reportsScalarWhereWithAggregatesInput[]
    OR?: user_error_reportsScalarWhereWithAggregatesInput[]
    NOT?: user_error_reportsScalarWhereWithAggregatesInput | user_error_reportsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_error_reports"> | string
    user_id?: UuidWithAggregatesFilter<"user_error_reports"> | string
    content?: StringWithAggregatesFilter<"user_error_reports"> | string
    created_date?: DateTimeWithAggregatesFilter<"user_error_reports"> | Date | string
    title?: StringWithAggregatesFilter<"user_error_reports"> | string
    post_id?: UuidWithAggregatesFilter<"user_error_reports"> | string
    status?: StringNullableWithAggregatesFilter<"user_error_reports"> | string | null
  }

  export type user_packagesWhereInput = {
    AND?: user_packagesWhereInput | user_packagesWhereInput[]
    OR?: user_packagesWhereInput[]
    NOT?: user_packagesWhereInput | user_packagesWhereInput[]
    id?: UuidFilter<"user_packages"> | string
    user_id?: UuidFilter<"user_packages"> | string
    package_id?: UuidFilter<"user_packages"> | string
    start_date?: DateTimeNullableFilter<"user_packages"> | Date | string | null
    end_date?: DateTimeFilter<"user_packages"> | Date | string
    is_active?: BoolNullableFilter<"user_packages"> | boolean | null
    packages?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_packagesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    package_id?: SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrder
    is_active?: SortOrderInput | SortOrder
    packages?: packagesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type user_packagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_packagesWhereInput | user_packagesWhereInput[]
    OR?: user_packagesWhereInput[]
    NOT?: user_packagesWhereInput | user_packagesWhereInput[]
    user_id?: UuidFilter<"user_packages"> | string
    package_id?: UuidFilter<"user_packages"> | string
    start_date?: DateTimeNullableFilter<"user_packages"> | Date | string | null
    end_date?: DateTimeFilter<"user_packages"> | Date | string
    is_active?: BoolNullableFilter<"user_packages"> | boolean | null
    packages?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type user_packagesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    package_id?: SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: user_packagesCountOrderByAggregateInput
    _max?: user_packagesMaxOrderByAggregateInput
    _min?: user_packagesMinOrderByAggregateInput
  }

  export type user_packagesScalarWhereWithAggregatesInput = {
    AND?: user_packagesScalarWhereWithAggregatesInput | user_packagesScalarWhereWithAggregatesInput[]
    OR?: user_packagesScalarWhereWithAggregatesInput[]
    NOT?: user_packagesScalarWhereWithAggregatesInput | user_packagesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_packages"> | string
    user_id?: UuidWithAggregatesFilter<"user_packages"> | string
    package_id?: UuidWithAggregatesFilter<"user_packages"> | string
    start_date?: DateTimeNullableWithAggregatesFilter<"user_packages"> | Date | string | null
    end_date?: DateTimeWithAggregatesFilter<"user_packages"> | Date | string
    is_active?: BoolNullableWithAggregatesFilter<"user_packages"> | boolean | null
  }

  export type user_profile_historyWhereInput = {
    AND?: user_profile_historyWhereInput | user_profile_historyWhereInput[]
    OR?: user_profile_historyWhereInput[]
    NOT?: user_profile_historyWhereInput | user_profile_historyWhereInput[]
    id?: UuidFilter<"user_profile_history"> | string
    user_id?: UuidFilter<"user_profile_history"> | string
    old_data?: JsonNullableFilter<"user_profile_history">
    new_data?: JsonNullableFilter<"user_profile_history">
    changed_by?: UuidNullableFilter<"user_profile_history"> | string | null
    changed_at?: DateTimeNullableFilter<"user_profile_history"> | Date | string | null
    users_user_profile_history_changed_byTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    users_user_profile_history_user_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_profile_historyOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    old_data?: SortOrderInput | SortOrder
    new_data?: SortOrderInput | SortOrder
    changed_by?: SortOrderInput | SortOrder
    changed_at?: SortOrderInput | SortOrder
    users_user_profile_history_changed_byTousers?: usersOrderByWithRelationInput
    users_user_profile_history_user_idTousers?: usersOrderByWithRelationInput
  }

  export type user_profile_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_profile_historyWhereInput | user_profile_historyWhereInput[]
    OR?: user_profile_historyWhereInput[]
    NOT?: user_profile_historyWhereInput | user_profile_historyWhereInput[]
    user_id?: UuidFilter<"user_profile_history"> | string
    old_data?: JsonNullableFilter<"user_profile_history">
    new_data?: JsonNullableFilter<"user_profile_history">
    changed_by?: UuidNullableFilter<"user_profile_history"> | string | null
    changed_at?: DateTimeNullableFilter<"user_profile_history"> | Date | string | null
    users_user_profile_history_changed_byTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    users_user_profile_history_user_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type user_profile_historyOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    old_data?: SortOrderInput | SortOrder
    new_data?: SortOrderInput | SortOrder
    changed_by?: SortOrderInput | SortOrder
    changed_at?: SortOrderInput | SortOrder
    _count?: user_profile_historyCountOrderByAggregateInput
    _max?: user_profile_historyMaxOrderByAggregateInput
    _min?: user_profile_historyMinOrderByAggregateInput
  }

  export type user_profile_historyScalarWhereWithAggregatesInput = {
    AND?: user_profile_historyScalarWhereWithAggregatesInput | user_profile_historyScalarWhereWithAggregatesInput[]
    OR?: user_profile_historyScalarWhereWithAggregatesInput[]
    NOT?: user_profile_historyScalarWhereWithAggregatesInput | user_profile_historyScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_profile_history"> | string
    user_id?: UuidWithAggregatesFilter<"user_profile_history"> | string
    old_data?: JsonNullableWithAggregatesFilter<"user_profile_history">
    new_data?: JsonNullableWithAggregatesFilter<"user_profile_history">
    changed_by?: UuidNullableWithAggregatesFilter<"user_profile_history"> | string | null
    changed_at?: DateTimeNullableWithAggregatesFilter<"user_profile_history"> | Date | string | null
  }

  export type user_progressWhereInput = {
    AND?: user_progressWhereInput | user_progressWhereInput[]
    OR?: user_progressWhereInput[]
    NOT?: user_progressWhereInput | user_progressWhereInput[]
    id?: UuidFilter<"user_progress"> | string
    word_id?: UuidFilter<"user_progress"> | string
    user_id?: UuidFilter<"user_progress"> | string
    level?: IntFilter<"user_progress"> | number
    createdstudydate?: DateTimeNullableFilter<"user_progress"> | Date | string | null
    updatedstudydate?: DateTimeNullableFilter<"user_progress"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    words?: XOR<WordsScalarRelationFilter, wordsWhereInput>
  }

  export type user_progressOrderByWithRelationInput = {
    id?: SortOrder
    word_id?: SortOrder
    user_id?: SortOrder
    level?: SortOrder
    createdstudydate?: SortOrderInput | SortOrder
    updatedstudydate?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    words?: wordsOrderByWithRelationInput
  }

  export type user_progressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_progressWhereInput | user_progressWhereInput[]
    OR?: user_progressWhereInput[]
    NOT?: user_progressWhereInput | user_progressWhereInput[]
    word_id?: UuidFilter<"user_progress"> | string
    user_id?: UuidFilter<"user_progress"> | string
    level?: IntFilter<"user_progress"> | number
    createdstudydate?: DateTimeNullableFilter<"user_progress"> | Date | string | null
    updatedstudydate?: DateTimeNullableFilter<"user_progress"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    words?: XOR<WordsScalarRelationFilter, wordsWhereInput>
  }, "id">

  export type user_progressOrderByWithAggregationInput = {
    id?: SortOrder
    word_id?: SortOrder
    user_id?: SortOrder
    level?: SortOrder
    createdstudydate?: SortOrderInput | SortOrder
    updatedstudydate?: SortOrderInput | SortOrder
    _count?: user_progressCountOrderByAggregateInput
    _avg?: user_progressAvgOrderByAggregateInput
    _max?: user_progressMaxOrderByAggregateInput
    _min?: user_progressMinOrderByAggregateInput
    _sum?: user_progressSumOrderByAggregateInput
  }

  export type user_progressScalarWhereWithAggregatesInput = {
    AND?: user_progressScalarWhereWithAggregatesInput | user_progressScalarWhereWithAggregatesInput[]
    OR?: user_progressScalarWhereWithAggregatesInput[]
    NOT?: user_progressScalarWhereWithAggregatesInput | user_progressScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_progress"> | string
    word_id?: UuidWithAggregatesFilter<"user_progress"> | string
    user_id?: UuidWithAggregatesFilter<"user_progress"> | string
    level?: IntWithAggregatesFilter<"user_progress"> | number
    createdstudydate?: DateTimeNullableWithAggregatesFilter<"user_progress"> | Date | string | null
    updatedstudydate?: DateTimeNullableWithAggregatesFilter<"user_progress"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: UuidFilter<"users"> | string
    username?: StringFilter<"users"> | string
    passwordhash?: StringFilter<"users"> | string
    birthday?: DateTimeNullableFilter<"users"> | Date | string | null
    gender?: BoolNullableFilter<"users"> | boolean | null
    fullname?: StringNullableFilter<"users"> | string | null
    address?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    phonenumber?: StringNullableFilter<"users"> | string | null
    created_date?: DateTimeNullableFilter<"users"> | Date | string | null
    isactive?: BoolNullableFilter<"users"> | boolean | null
    isadmin?: BoolNullableFilter<"users"> | boolean | null
    balance?: IntNullableFilter<"users"> | number | null
    image_url?: StringNullableFilter<"users"> | string | null
    is_block?: BoolNullableFilter<"users"> | boolean | null
    is_verified?: BoolNullableFilter<"users"> | boolean | null
    firebase_uid?: StringNullableFilter<"users"> | string | null
    abuse_report_feedbacks?: Abuse_report_feedbacksListRelationFilter
    attendance?: AttendanceListRelationFilter
    coin_transaction?: Coin_transactionListRelationFilter
    comments?: CommentsListRelationFilter
    comments_group?: Comments_groupListRelationFilter
    error_report_feedbacks?: Error_report_feedbacksListRelationFilter
    group_members?: Group_membersListRelationFilter
    group_posts?: Group_postsListRelationFilter
    groups?: GroupsListRelationFilter
    messages?: MessagesListRelationFilter
    posts?: PostsListRelationFilter
    react_comments?: React_commentsListRelationFilter
    react_posts?: React_postsListRelationFilter
    shared_post?: Shared_postListRelationFilter
    study_access_topic?: Study_access_topicListRelationFilter
    transaction_history?: Transaction_historyListRelationFilter
    user_abuse_reports?: User_abuse_reportsListRelationFilter
    user_courses?: User_coursesListRelationFilter
    user_error_reports?: User_error_reportsListRelationFilter
    user_packages?: User_packagesListRelationFilter
    user_profile_history_user_profile_history_changed_byTousers?: User_profile_historyListRelationFilter
    user_profile_history_user_profile_history_user_idTousers?: User_profile_historyListRelationFilter
    user_progress?: User_progressListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    passwordhash?: SortOrder
    birthday?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    fullname?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phonenumber?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    isactive?: SortOrderInput | SortOrder
    isadmin?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    is_block?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    firebase_uid?: SortOrderInput | SortOrder
    abuse_report_feedbacks?: abuse_report_feedbacksOrderByRelationAggregateInput
    attendance?: attendanceOrderByRelationAggregateInput
    coin_transaction?: coin_transactionOrderByRelationAggregateInput
    comments?: commentsOrderByRelationAggregateInput
    comments_group?: comments_groupOrderByRelationAggregateInput
    error_report_feedbacks?: error_report_feedbacksOrderByRelationAggregateInput
    group_members?: group_membersOrderByRelationAggregateInput
    group_posts?: group_postsOrderByRelationAggregateInput
    groups?: groupsOrderByRelationAggregateInput
    messages?: messagesOrderByRelationAggregateInput
    posts?: postsOrderByRelationAggregateInput
    react_comments?: react_commentsOrderByRelationAggregateInput
    react_posts?: react_postsOrderByRelationAggregateInput
    shared_post?: shared_postOrderByRelationAggregateInput
    study_access_topic?: study_access_topicOrderByRelationAggregateInput
    transaction_history?: transaction_historyOrderByRelationAggregateInput
    user_abuse_reports?: user_abuse_reportsOrderByRelationAggregateInput
    user_courses?: user_coursesOrderByRelationAggregateInput
    user_error_reports?: user_error_reportsOrderByRelationAggregateInput
    user_packages?: user_packagesOrderByRelationAggregateInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyOrderByRelationAggregateInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyOrderByRelationAggregateInput
    user_progress?: user_progressOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    username?: StringFilter<"users"> | string
    passwordhash?: StringFilter<"users"> | string
    birthday?: DateTimeNullableFilter<"users"> | Date | string | null
    gender?: BoolNullableFilter<"users"> | boolean | null
    fullname?: StringNullableFilter<"users"> | string | null
    address?: StringNullableFilter<"users"> | string | null
    phonenumber?: StringNullableFilter<"users"> | string | null
    created_date?: DateTimeNullableFilter<"users"> | Date | string | null
    isactive?: BoolNullableFilter<"users"> | boolean | null
    isadmin?: BoolNullableFilter<"users"> | boolean | null
    balance?: IntNullableFilter<"users"> | number | null
    image_url?: StringNullableFilter<"users"> | string | null
    is_block?: BoolNullableFilter<"users"> | boolean | null
    is_verified?: BoolNullableFilter<"users"> | boolean | null
    firebase_uid?: StringNullableFilter<"users"> | string | null
    abuse_report_feedbacks?: Abuse_report_feedbacksListRelationFilter
    attendance?: AttendanceListRelationFilter
    coin_transaction?: Coin_transactionListRelationFilter
    comments?: CommentsListRelationFilter
    comments_group?: Comments_groupListRelationFilter
    error_report_feedbacks?: Error_report_feedbacksListRelationFilter
    group_members?: Group_membersListRelationFilter
    group_posts?: Group_postsListRelationFilter
    groups?: GroupsListRelationFilter
    messages?: MessagesListRelationFilter
    posts?: PostsListRelationFilter
    react_comments?: React_commentsListRelationFilter
    react_posts?: React_postsListRelationFilter
    shared_post?: Shared_postListRelationFilter
    study_access_topic?: Study_access_topicListRelationFilter
    transaction_history?: Transaction_historyListRelationFilter
    user_abuse_reports?: User_abuse_reportsListRelationFilter
    user_courses?: User_coursesListRelationFilter
    user_error_reports?: User_error_reportsListRelationFilter
    user_packages?: User_packagesListRelationFilter
    user_profile_history_user_profile_history_changed_byTousers?: User_profile_historyListRelationFilter
    user_profile_history_user_profile_history_user_idTousers?: User_profile_historyListRelationFilter
    user_progress?: User_progressListRelationFilter
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    passwordhash?: SortOrder
    birthday?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    fullname?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phonenumber?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    isactive?: SortOrderInput | SortOrder
    isadmin?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    is_block?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    firebase_uid?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"users"> | string
    username?: StringWithAggregatesFilter<"users"> | string
    passwordhash?: StringWithAggregatesFilter<"users"> | string
    birthday?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    gender?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    fullname?: StringNullableWithAggregatesFilter<"users"> | string | null
    address?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    phonenumber?: StringNullableWithAggregatesFilter<"users"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    isactive?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    isadmin?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    balance?: IntNullableWithAggregatesFilter<"users"> | number | null
    image_url?: StringNullableWithAggregatesFilter<"users"> | string | null
    is_block?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    is_verified?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    firebase_uid?: StringNullableWithAggregatesFilter<"users"> | string | null
  }

  export type wordsWhereInput = {
    AND?: wordsWhereInput | wordsWhereInput[]
    OR?: wordsWhereInput[]
    NOT?: wordsWhereInput | wordsWhereInput[]
    id?: UuidFilter<"words"> | string
    englishname?: StringFilter<"words"> | string
    vietnamesename?: StringFilter<"words"> | string
    type?: StringNullableFilter<"words"> | string | null
    examplesentence?: StringNullableFilter<"words"> | string | null
    imageurl?: StringNullableFilter<"words"> | string | null
    transcription?: StringNullableFilter<"words"> | string | null
    course_id?: UuidNullableFilter<"words"> | string | null
    user_progress?: User_progressListRelationFilter
    courses?: XOR<CoursesNullableScalarRelationFilter, coursesWhereInput> | null
  }

  export type wordsOrderByWithRelationInput = {
    id?: SortOrder
    englishname?: SortOrder
    vietnamesename?: SortOrder
    type?: SortOrderInput | SortOrder
    examplesentence?: SortOrderInput | SortOrder
    imageurl?: SortOrderInput | SortOrder
    transcription?: SortOrderInput | SortOrder
    course_id?: SortOrderInput | SortOrder
    user_progress?: user_progressOrderByRelationAggregateInput
    courses?: coursesOrderByWithRelationInput
  }

  export type wordsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: wordsWhereInput | wordsWhereInput[]
    OR?: wordsWhereInput[]
    NOT?: wordsWhereInput | wordsWhereInput[]
    englishname?: StringFilter<"words"> | string
    vietnamesename?: StringFilter<"words"> | string
    type?: StringNullableFilter<"words"> | string | null
    examplesentence?: StringNullableFilter<"words"> | string | null
    imageurl?: StringNullableFilter<"words"> | string | null
    transcription?: StringNullableFilter<"words"> | string | null
    course_id?: UuidNullableFilter<"words"> | string | null
    user_progress?: User_progressListRelationFilter
    courses?: XOR<CoursesNullableScalarRelationFilter, coursesWhereInput> | null
  }, "id">

  export type wordsOrderByWithAggregationInput = {
    id?: SortOrder
    englishname?: SortOrder
    vietnamesename?: SortOrder
    type?: SortOrderInput | SortOrder
    examplesentence?: SortOrderInput | SortOrder
    imageurl?: SortOrderInput | SortOrder
    transcription?: SortOrderInput | SortOrder
    course_id?: SortOrderInput | SortOrder
    _count?: wordsCountOrderByAggregateInput
    _max?: wordsMaxOrderByAggregateInput
    _min?: wordsMinOrderByAggregateInput
  }

  export type wordsScalarWhereWithAggregatesInput = {
    AND?: wordsScalarWhereWithAggregatesInput | wordsScalarWhereWithAggregatesInput[]
    OR?: wordsScalarWhereWithAggregatesInput[]
    NOT?: wordsScalarWhereWithAggregatesInput | wordsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"words"> | string
    englishname?: StringWithAggregatesFilter<"words"> | string
    vietnamesename?: StringWithAggregatesFilter<"words"> | string
    type?: StringNullableWithAggregatesFilter<"words"> | string | null
    examplesentence?: StringNullableWithAggregatesFilter<"words"> | string | null
    imageurl?: StringNullableWithAggregatesFilter<"words"> | string | null
    transcription?: StringNullableWithAggregatesFilter<"words"> | string | null
    course_id?: UuidNullableWithAggregatesFilter<"words"> | string | null
  }

  export type abuse_report_feedbacksCreateInput = {
    id?: string
    feedback?: string | null
    responded_at?: Date | string | null
    user_abuse_reports: user_abuse_reportsCreateNestedOneWithoutAbuse_report_feedbacksInput
    users?: usersCreateNestedOneWithoutAbuse_report_feedbacksInput
  }

  export type abuse_report_feedbacksUncheckedCreateInput = {
    id?: string
    report_id: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type abuse_report_feedbacksUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_abuse_reports?: user_abuse_reportsUpdateOneRequiredWithoutAbuse_report_feedbacksNestedInput
    users?: usersUpdateOneWithoutAbuse_report_feedbacksNestedInput
  }

  export type abuse_report_feedbacksUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type abuse_report_feedbacksCreateManyInput = {
    id?: string
    report_id: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type abuse_report_feedbacksUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type abuse_report_feedbacksUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type attendanceCreateInput = {
    id?: string
    checkin_date?: Date | string
    users: usersCreateNestedOneWithoutAttendanceInput
  }

  export type attendanceUncheckedCreateInput = {
    id?: string
    user_id: string
    checkin_date?: Date | string
  }

  export type attendanceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutAttendanceNestedInput
  }

  export type attendanceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceCreateManyInput = {
    id?: string
    user_id: string
    checkin_date?: Date | string
  }

  export type attendanceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coin_transactionCreateInput = {
    id?: string
    amount: number
    reason: string
    reference_id?: string | null
    reference_table?: string | null
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutCoin_transactionInput
  }

  export type coin_transactionUncheckedCreateInput = {
    id?: string
    user_id: string
    amount: number
    reason: string
    reference_id?: string | null
    reference_table?: string | null
    created_at?: Date | string | null
  }

  export type coin_transactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutCoin_transactionNestedInput
  }

  export type coin_transactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type coin_transactionCreateManyInput = {
    id?: string
    user_id: string
    amount: number
    reason: string
    reference_id?: string | null
    reference_table?: string | null
    created_at?: Date | string | null
  }

  export type coin_transactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type coin_transactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type commentsCreateInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    posts?: postsCreateNestedOneWithoutCommentsInput
    users: usersCreateNestedOneWithoutCommentsInput
    shared_post?: shared_postCreateNestedOneWithoutCommentsInput
    react_comments?: react_commentsCreateNestedManyWithoutCommentsInput
  }

  export type commentsUncheckedCreateInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutCommentsInput
  }

  export type commentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: postsUpdateOneWithoutCommentsNestedInput
    users?: usersUpdateOneRequiredWithoutCommentsNestedInput
    shared_post?: shared_postUpdateOneWithoutCommentsNestedInput
    react_comments?: react_commentsUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_comments?: react_commentsUncheckedUpdateManyWithoutCommentsNestedInput
  }

  export type commentsCreateManyInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
  }

  export type commentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type commentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupCreateInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
    groups: groupsCreateNestedOneWithoutComments_groupInput
    posts: postsCreateNestedOneWithoutComments_groupInput
    users: usersCreateNestedOneWithoutComments_groupInput
  }

  export type comments_groupUncheckedCreateInput = {
    id?: string
    group_id: string
    post_id: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type comments_groupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
    groups?: groupsUpdateOneRequiredWithoutComments_groupNestedInput
    posts?: postsUpdateOneRequiredWithoutComments_groupNestedInput
    users?: usersUpdateOneRequiredWithoutComments_groupNestedInput
  }

  export type comments_groupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupCreateManyInput = {
    id?: string
    group_id: string
    post_id: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type comments_groupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type coursesCreateInput = {
    id?: string
    title: string
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    topics?: topicsCreateNestedOneWithoutCoursesInput
    user_courses?: user_coursesCreateNestedManyWithoutCoursesInput
    words?: wordsCreateNestedManyWithoutCoursesInput
  }

  export type coursesUncheckedCreateInput = {
    id?: string
    title: string
    topic_id?: string | null
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutCoursesInput
    words?: wordsUncheckedCreateNestedManyWithoutCoursesInput
  }

  export type coursesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    topics?: topicsUpdateOneWithoutCoursesNestedInput
    user_courses?: user_coursesUpdateManyWithoutCoursesNestedInput
    words?: wordsUpdateManyWithoutCoursesNestedInput
  }

  export type coursesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    topic_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_courses?: user_coursesUncheckedUpdateManyWithoutCoursesNestedInput
    words?: wordsUncheckedUpdateManyWithoutCoursesNestedInput
  }

  export type coursesCreateManyInput = {
    id?: string
    title: string
    topic_id?: string | null
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
  }

  export type coursesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coursesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    topic_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type error_report_feedbacksCreateInput = {
    id?: string
    feedback?: string | null
    responded_at?: Date | string | null
    users?: usersCreateNestedOneWithoutError_report_feedbacksInput
    user_error_reports: user_error_reportsCreateNestedOneWithoutError_report_feedbacksInput
  }

  export type error_report_feedbacksUncheckedCreateInput = {
    id?: string
    report_id: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type error_report_feedbacksUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutError_report_feedbacksNestedInput
    user_error_reports?: user_error_reportsUpdateOneRequiredWithoutError_report_feedbacksNestedInput
  }

  export type error_report_feedbacksUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type error_report_feedbacksCreateManyInput = {
    id?: string
    report_id: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type error_report_feedbacksUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type error_report_feedbacksUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersCreateInput = {
    id?: string
    is_admin?: boolean
    joined_date?: Date | string | null
    groups: groupsCreateNestedOneWithoutGroup_membersInput
    users: usersCreateNestedOneWithoutGroup_membersInput
  }

  export type group_membersUncheckedCreateInput = {
    id?: string
    user_id: string
    group_id: string
    is_admin?: boolean
    joined_date?: Date | string | null
  }

  export type group_membersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    groups?: groupsUpdateOneRequiredWithoutGroup_membersNestedInput
    users?: usersUpdateOneRequiredWithoutGroup_membersNestedInput
  }

  export type group_membersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersCreateManyInput = {
    id?: string
    user_id: string
    group_id: string
    is_admin?: boolean
    joined_date?: Date | string | null
  }

  export type group_membersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsCreateInput = {
    id?: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
    groups: groupsCreateNestedOneWithoutGroup_postsInput
    users: usersCreateNestedOneWithoutGroup_postsInput
  }

  export type group_postsUncheckedCreateInput = {
    id?: string
    user_id: string
    group_id: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
  }

  export type group_postsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    groups?: groupsUpdateOneRequiredWithoutGroup_postsNestedInput
    users?: usersUpdateOneRequiredWithoutGroup_postsNestedInput
  }

  export type group_postsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsCreateManyInput = {
    id?: string
    user_id: string
    group_id: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
  }

  export type group_postsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type groupsCreateInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupCreateNestedManyWithoutGroupsInput
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsCreateNestedManyWithoutGroupsInput
    users: usersCreateNestedOneWithoutGroupsInput
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateInput = {
    id?: string
    name: string
    image_url?: string | null
    created_by: string
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutGroupsInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutGroupsInput
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUpdateManyWithoutGroupsNestedInput
    users?: usersUpdateOneRequiredWithoutGroupsNestedInput
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUncheckedUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutGroupsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type groupsCreateManyInput = {
    id?: string
    name: string
    image_url?: string | null
    created_by: string
    created_date?: Date | string | null
    count_member?: number | null
  }

  export type groupsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type groupsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type messagesCreateInput = {
    id?: string
    created_date?: Date | string | null
    content?: string | null
    groups: groupsCreateNestedOneWithoutMessagesInput
    users: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateInput = {
    id?: string
    sender_id: string
    group_id: string
    created_date?: Date | string | null
    content?: string | null
  }

  export type messagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    groups?: groupsUpdateOneRequiredWithoutMessagesNestedInput
    users?: usersUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sender_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type messagesCreateManyInput = {
    id?: string
    sender_id: string
    group_id: string
    created_date?: Date | string | null
    content?: string | null
  }

  export type messagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type messagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sender_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type packagesCreateInput = {
    id?: string
    name: string
    duration_days: number
    price: number
    is_premium?: boolean | null
    user_packages?: user_packagesCreateNestedManyWithoutPackagesInput
  }

  export type packagesUncheckedCreateInput = {
    id?: string
    name: string
    duration_days: number
    price: number
    is_premium?: boolean | null
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutPackagesInput
  }

  export type packagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    is_premium?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_packages?: user_packagesUpdateManyWithoutPackagesNestedInput
  }

  export type packagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    is_premium?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_packages?: user_packagesUncheckedUpdateManyWithoutPackagesNestedInput
  }

  export type packagesCreateManyInput = {
    id?: string
    name: string
    duration_days: number
    price: number
    is_premium?: boolean | null
  }

  export type packagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    is_premium?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type packagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    is_premium?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type postsCreateInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupCreateNestedManyWithoutPostsInput
    users: usersCreateNestedOneWithoutPostsInput
    react_posts?: react_postsCreateNestedManyWithoutPostsInput
    shared_post?: shared_postCreateNestedManyWithoutPostsInput
  }

  export type postsUncheckedCreateInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutPostsInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutPostsInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutPostsInput
  }

  export type postsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUpdateManyWithoutPostsNestedInput
    users?: usersUpdateOneRequiredWithoutPostsNestedInput
    react_posts?: react_postsUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutPostsNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutPostsNestedInput
  }

  export type postsCreateManyInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
  }

  export type postsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type postsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type react_commentsCreateInput = {
    id?: string
    created_date?: Date | string
    comments: commentsCreateNestedOneWithoutReact_commentsInput
    users: usersCreateNestedOneWithoutReact_commentsInput
  }

  export type react_commentsUncheckedCreateInput = {
    id?: string
    comment_id: string
    user_id: string
    created_date?: Date | string
  }

  export type react_commentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: commentsUpdateOneRequiredWithoutReact_commentsNestedInput
    users?: usersUpdateOneRequiredWithoutReact_commentsNestedInput
  }

  export type react_commentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type react_commentsCreateManyInput = {
    id?: string
    comment_id: string
    user_id: string
    created_date?: Date | string
  }

  export type react_commentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type react_commentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type react_postsCreateInput = {
    id?: string
    created_date?: Date | string | null
    posts: postsCreateNestedOneWithoutReact_postsInput
    users: usersCreateNestedOneWithoutReact_postsInput
  }

  export type react_postsUncheckedCreateInput = {
    id?: string
    post_id: string
    user_id: string
    created_date?: Date | string | null
  }

  export type react_postsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posts?: postsUpdateOneRequiredWithoutReact_postsNestedInput
    users?: usersUpdateOneRequiredWithoutReact_postsNestedInput
  }

  export type react_postsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type react_postsCreateManyInput = {
    id?: string
    post_id: string
    user_id: string
    created_date?: Date | string | null
  }

  export type react_postsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type react_postsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shared_postCreateInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    comments?: commentsCreateNestedManyWithoutShared_postInput
    shared_post?: shared_postCreateNestedOneWithoutOther_shared_postInput
    other_shared_post?: shared_postCreateNestedManyWithoutShared_postInput
    posts?: postsCreateNestedOneWithoutShared_postInput
    users: usersCreateNestedOneWithoutShared_postInput
  }

  export type shared_postUncheckedCreateInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutShared_postInput
    other_shared_post?: shared_postUncheckedCreateNestedManyWithoutShared_postInput
  }

  export type shared_postUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutShared_postNestedInput
    shared_post?: shared_postUpdateOneWithoutOther_shared_postNestedInput
    other_shared_post?: shared_postUpdateManyWithoutShared_postNestedInput
    posts?: postsUpdateOneWithoutShared_postNestedInput
    users?: usersUpdateOneRequiredWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutShared_postNestedInput
    other_shared_post?: shared_postUncheckedUpdateManyWithoutShared_postNestedInput
  }

  export type shared_postCreateManyInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
  }

  export type shared_postUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shared_postUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type study_access_topicCreateInput = {
    id?: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
    topics: topicsCreateNestedOneWithoutStudy_access_topicInput
    users: usersCreateNestedOneWithoutStudy_access_topicInput
  }

  export type study_access_topicUncheckedCreateInput = {
    id?: string
    user_id: string
    topic_id: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
  }

  export type study_access_topicUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    topics?: topicsUpdateOneRequiredWithoutStudy_access_topicNestedInput
    users?: usersUpdateOneRequiredWithoutStudy_access_topicNestedInput
  }

  export type study_access_topicUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    topic_id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type study_access_topicCreateManyInput = {
    id?: string
    user_id: string
    topic_id: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
  }

  export type study_access_topicUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type study_access_topicUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    topic_id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type topicsCreateInput = {
    id?: string
    name: string
    description?: string | null
    courses?: coursesCreateNestedManyWithoutTopicsInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutTopicsInput
  }

  export type topicsUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    courses?: coursesUncheckedCreateNestedManyWithoutTopicsInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutTopicsInput
  }

  export type topicsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    courses?: coursesUpdateManyWithoutTopicsNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutTopicsNestedInput
  }

  export type topicsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    courses?: coursesUncheckedUpdateManyWithoutTopicsNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutTopicsNestedInput
  }

  export type topicsCreateManyInput = {
    id?: string
    name: string
    description?: string | null
  }

  export type topicsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type topicsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transaction_historyCreateInput = {
    id?: string
    price?: Decimal | DecimalJsLike | number | string | null
    createddate?: Date | string | null
    users: usersCreateNestedOneWithoutTransaction_historyInput
  }

  export type transaction_historyUncheckedCreateInput = {
    id?: string
    user_id: string
    price?: Decimal | DecimalJsLike | number | string | null
    createddate?: Date | string | null
  }

  export type transaction_historyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutTransaction_historyNestedInput
  }

  export type transaction_historyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaction_historyCreateManyInput = {
    id?: string
    user_id: string
    price?: Decimal | DecimalJsLike | number | string | null
    createddate?: Date | string | null
  }

  export type transaction_historyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaction_historyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_abuse_reportsCreateInput = {
    id?: string
    content: string
    created_date?: Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUser_abuse_reportsInput
    users: usersCreateNestedOneWithoutUser_abuse_reportsInput
  }

  export type user_abuse_reportsUncheckedCreateInput = {
    id?: string
    user_id: string
    content: string
    created_date?: Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUser_abuse_reportsInput
  }

  export type user_abuse_reportsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUser_abuse_reportsNestedInput
    users?: usersUpdateOneRequiredWithoutUser_abuse_reportsNestedInput
  }

  export type user_abuse_reportsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUser_abuse_reportsNestedInput
  }

  export type user_abuse_reportsCreateManyInput = {
    id?: string
    user_id: string
    content: string
    created_date?: Date | string
  }

  export type user_abuse_reportsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_abuse_reportsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_coursesCreateInput = {
    id?: string
    purchase_date?: Date | string | null
    courses: coursesCreateNestedOneWithoutUser_coursesInput
    users: usersCreateNestedOneWithoutUser_coursesInput
  }

  export type user_coursesUncheckedCreateInput = {
    id?: string
    user_id: string
    course_id: string
    purchase_date?: Date | string | null
  }

  export type user_coursesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courses?: coursesUpdateOneRequiredWithoutUser_coursesNestedInput
    users?: usersUpdateOneRequiredWithoutUser_coursesNestedInput
  }

  export type user_coursesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    course_id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_coursesCreateManyInput = {
    id?: string
    user_id: string
    course_id: string
    purchase_date?: Date | string | null
  }

  export type user_coursesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_coursesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    course_id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_error_reportsCreateInput = {
    id?: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUser_error_reportsInput
    users: usersCreateNestedOneWithoutUser_error_reportsInput
  }

  export type user_error_reportsUncheckedCreateInput = {
    id?: string
    user_id: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUser_error_reportsInput
  }

  export type user_error_reportsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUser_error_reportsNestedInput
    users?: usersUpdateOneRequiredWithoutUser_error_reportsNestedInput
  }

  export type user_error_reportsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUser_error_reportsNestedInput
  }

  export type user_error_reportsCreateManyInput = {
    id?: string
    user_id: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
  }

  export type user_error_reportsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_error_reportsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_packagesCreateInput = {
    id?: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
    packages: packagesCreateNestedOneWithoutUser_packagesInput
    users: usersCreateNestedOneWithoutUser_packagesInput
  }

  export type user_packagesUncheckedCreateInput = {
    id?: string
    user_id: string
    package_id: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
  }

  export type user_packagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    packages?: packagesUpdateOneRequiredWithoutUser_packagesNestedInput
    users?: usersUpdateOneRequiredWithoutUser_packagesNestedInput
  }

  export type user_packagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    package_id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_packagesCreateManyInput = {
    id?: string
    user_id: string
    package_id: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
  }

  export type user_packagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_packagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    package_id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_profile_historyCreateInput = {
    id?: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: Date | string | null
    users_user_profile_history_changed_byTousers?: usersCreateNestedOneWithoutUser_profile_history_user_profile_history_changed_byTousersInput
    users_user_profile_history_user_idTousers: usersCreateNestedOneWithoutUser_profile_history_user_profile_history_user_idTousersInput
  }

  export type user_profile_historyUncheckedCreateInput = {
    id?: string
    user_id: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: string | null
    changed_at?: Date | string | null
  }

  export type user_profile_historyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_user_profile_history_changed_byTousers?: usersUpdateOneWithoutUser_profile_history_user_profile_history_changed_byTousersNestedInput
    users_user_profile_history_user_idTousers?: usersUpdateOneRequiredWithoutUser_profile_history_user_profile_history_user_idTousersNestedInput
  }

  export type user_profile_historyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profile_historyCreateManyInput = {
    id?: string
    user_id: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: string | null
    changed_at?: Date | string | null
  }

  export type user_profile_historyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profile_historyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressCreateInput = {
    id?: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
    users: usersCreateNestedOneWithoutUser_progressInput
    words: wordsCreateNestedOneWithoutUser_progressInput
  }

  export type user_progressUncheckedCreateInput = {
    id?: string
    word_id: string
    user_id: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
  }

  export type user_progressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutUser_progressNestedInput
    words?: wordsUpdateOneRequiredWithoutUser_progressNestedInput
  }

  export type user_progressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    word_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressCreateManyInput = {
    id?: string
    word_id: string
    user_id: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
  }

  export type user_progressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    word_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wordsCreateInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    user_progress?: user_progressCreateNestedManyWithoutWordsInput
    courses?: coursesCreateNestedOneWithoutWordsInput
  }

  export type wordsUncheckedCreateInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    course_id?: string | null
    user_progress?: user_progressUncheckedCreateNestedManyWithoutWordsInput
  }

  export type wordsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    user_progress?: user_progressUpdateManyWithoutWordsNestedInput
    courses?: coursesUpdateOneWithoutWordsNestedInput
  }

  export type wordsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_progress?: user_progressUncheckedUpdateManyWithoutWordsNestedInput
  }

  export type wordsCreateManyInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    course_id?: string | null
  }

  export type wordsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wordsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type User_abuse_reportsScalarRelationFilter = {
    is?: user_abuse_reportsWhereInput
    isNot?: user_abuse_reportsWhereInput
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type abuse_report_feedbacksCountOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrder
    feedback?: SortOrder
    responded_at?: SortOrder
  }

  export type abuse_report_feedbacksMaxOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrder
    feedback?: SortOrder
    responded_at?: SortOrder
  }

  export type abuse_report_feedbacksMinOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrder
    feedback?: SortOrder
    responded_at?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type attendanceUser_idCheckin_dateCompoundUniqueInput = {
    user_id: string
    checkin_date: Date | string
  }

  export type attendanceCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    checkin_date?: SortOrder
  }

  export type attendanceMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    checkin_date?: SortOrder
  }

  export type attendanceMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    checkin_date?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type coin_transactionCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    reference_id?: SortOrder
    reference_table?: SortOrder
    created_at?: SortOrder
  }

  export type coin_transactionAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type coin_transactionMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    reference_id?: SortOrder
    reference_table?: SortOrder
    created_at?: SortOrder
  }

  export type coin_transactionMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    reference_id?: SortOrder
    reference_table?: SortOrder
    created_at?: SortOrder
  }

  export type coin_transactionSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type PostsNullableScalarRelationFilter = {
    is?: postsWhereInput | null
    isNot?: postsWhereInput | null
  }

  export type Shared_postNullableScalarRelationFilter = {
    is?: shared_postWhereInput | null
    isNot?: shared_postWhereInput | null
  }

  export type React_commentsListRelationFilter = {
    every?: react_commentsWhereInput
    some?: react_commentsWhereInput
    none?: react_commentsWhereInput
  }

  export type react_commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type commentsCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    parent_comment?: SortOrder
    root_comment?: SortOrder
    shared_post_id?: SortOrder
  }

  export type commentsAvgOrderByAggregateInput = {
    react_count?: SortOrder
  }

  export type commentsMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    parent_comment?: SortOrder
    root_comment?: SortOrder
    shared_post_id?: SortOrder
  }

  export type commentsMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    parent_comment?: SortOrder
    root_comment?: SortOrder
    shared_post_id?: SortOrder
  }

  export type commentsSumOrderByAggregateInput = {
    react_count?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type GroupsScalarRelationFilter = {
    is?: groupsWhereInput
    isNot?: groupsWhereInput
  }

  export type PostsScalarRelationFilter = {
    is?: postsWhereInput
    isNot?: postsWhereInput
  }

  export type comments_groupCountOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    parent_comments?: SortOrder
  }

  export type comments_groupAvgOrderByAggregateInput = {
    react_count?: SortOrder
  }

  export type comments_groupMaxOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    parent_comments?: SortOrder
  }

  export type comments_groupMinOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    parent_comments?: SortOrder
  }

  export type comments_groupSumOrderByAggregateInput = {
    react_count?: SortOrder
  }

  export type TopicsNullableScalarRelationFilter = {
    is?: topicsWhereInput | null
    isNot?: topicsWhereInput | null
  }

  export type User_coursesListRelationFilter = {
    every?: user_coursesWhereInput
    some?: user_coursesWhereInput
    none?: user_coursesWhereInput
  }

  export type WordsListRelationFilter = {
    every?: wordsWhereInput
    some?: wordsWhereInput
    none?: wordsWhereInput
  }

  export type user_coursesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type wordsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type coursesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    topic_id?: SortOrder
    level?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    price?: SortOrder
    created_date?: SortOrder
  }

  export type coursesAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type coursesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    topic_id?: SortOrder
    level?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    price?: SortOrder
    created_date?: SortOrder
  }

  export type coursesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    topic_id?: SortOrder
    level?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    price?: SortOrder
    created_date?: SortOrder
  }

  export type coursesSumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type User_error_reportsScalarRelationFilter = {
    is?: user_error_reportsWhereInput
    isNot?: user_error_reportsWhereInput
  }

  export type error_report_feedbacksCountOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrder
    feedback?: SortOrder
    responded_at?: SortOrder
  }

  export type error_report_feedbacksMaxOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrder
    feedback?: SortOrder
    responded_at?: SortOrder
  }

  export type error_report_feedbacksMinOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    admin_id?: SortOrder
    feedback?: SortOrder
    responded_at?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type group_membersGroup_idUser_idCompoundUniqueInput = {
    group_id: string
    user_id: string
  }

  export type group_membersCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    is_admin?: SortOrder
    joined_date?: SortOrder
  }

  export type group_membersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    is_admin?: SortOrder
    joined_date?: SortOrder
  }

  export type group_membersMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    is_admin?: SortOrder
    joined_date?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type group_postsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    content?: SortOrder
    image_url?: SortOrder
    react_count?: SortOrder
    created_date?: SortOrder
    updated_date?: SortOrder
  }

  export type group_postsAvgOrderByAggregateInput = {
    react_count?: SortOrder
  }

  export type group_postsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    content?: SortOrder
    image_url?: SortOrder
    react_count?: SortOrder
    created_date?: SortOrder
    updated_date?: SortOrder
  }

  export type group_postsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    content?: SortOrder
    image_url?: SortOrder
    react_count?: SortOrder
    created_date?: SortOrder
    updated_date?: SortOrder
  }

  export type group_postsSumOrderByAggregateInput = {
    react_count?: SortOrder
  }

  export type Comments_groupListRelationFilter = {
    every?: comments_groupWhereInput
    some?: comments_groupWhereInput
    none?: comments_groupWhereInput
  }

  export type Group_membersListRelationFilter = {
    every?: group_membersWhereInput
    some?: group_membersWhereInput
    none?: group_membersWhereInput
  }

  export type Group_postsListRelationFilter = {
    every?: group_postsWhereInput
    some?: group_postsWhereInput
    none?: group_postsWhereInput
  }

  export type MessagesListRelationFilter = {
    every?: messagesWhereInput
    some?: messagesWhereInput
    none?: messagesWhereInput
  }

  export type comments_groupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type group_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type group_postsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type groupsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    image_url?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    count_member?: SortOrder
  }

  export type groupsAvgOrderByAggregateInput = {
    count_member?: SortOrder
  }

  export type groupsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    image_url?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    count_member?: SortOrder
  }

  export type groupsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    image_url?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    count_member?: SortOrder
  }

  export type groupsSumOrderByAggregateInput = {
    count_member?: SortOrder
  }

  export type messagesCountOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    group_id?: SortOrder
    created_date?: SortOrder
    content?: SortOrder
  }

  export type messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    group_id?: SortOrder
    created_date?: SortOrder
    content?: SortOrder
  }

  export type messagesMinOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    group_id?: SortOrder
    created_date?: SortOrder
    content?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type User_packagesListRelationFilter = {
    every?: user_packagesWhereInput
    some?: user_packagesWhereInput
    none?: user_packagesWhereInput
  }

  export type user_packagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type packagesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    is_premium?: SortOrder
  }

  export type packagesAvgOrderByAggregateInput = {
    duration_days?: SortOrder
    price?: SortOrder
  }

  export type packagesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    is_premium?: SortOrder
  }

  export type packagesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    is_premium?: SortOrder
  }

  export type packagesSumOrderByAggregateInput = {
    duration_days?: SortOrder
    price?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CommentsListRelationFilter = {
    every?: commentsWhereInput
    some?: commentsWhereInput
    none?: commentsWhereInput
  }

  export type React_postsListRelationFilter = {
    every?: react_postsWhereInput
    some?: react_postsWhereInput
    none?: react_postsWhereInput
  }

  export type Shared_postListRelationFilter = {
    every?: shared_postWhereInput
    some?: shared_postWhereInput
    none?: shared_postWhereInput
  }

  export type commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type react_postsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type shared_postOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type postsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    image_url?: SortOrder
    shared_user_id_count?: SortOrder
    comment_count?: SortOrder
  }

  export type postsAvgOrderByAggregateInput = {
    react_count?: SortOrder
    shared_user_id_count?: SortOrder
    comment_count?: SortOrder
  }

  export type postsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    image_url?: SortOrder
    shared_user_id_count?: SortOrder
    comment_count?: SortOrder
  }

  export type postsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    image_url?: SortOrder
    shared_user_id_count?: SortOrder
    comment_count?: SortOrder
  }

  export type postsSumOrderByAggregateInput = {
    react_count?: SortOrder
    shared_user_id_count?: SortOrder
    comment_count?: SortOrder
  }

  export type CommentsScalarRelationFilter = {
    is?: commentsWhereInput
    isNot?: commentsWhereInput
  }

  export type react_commentsCountOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
  }

  export type react_commentsMaxOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
  }

  export type react_commentsMinOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
  }

  export type react_postsCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
  }

  export type react_postsMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
  }

  export type react_postsMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_date?: SortOrder
  }

  export type shared_postCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    comment_count?: SortOrder
    shared_post_id?: SortOrder
    shared_count?: SortOrder
  }

  export type shared_postAvgOrderByAggregateInput = {
    react_count?: SortOrder
    comment_count?: SortOrder
    shared_count?: SortOrder
  }

  export type shared_postMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    comment_count?: SortOrder
    shared_post_id?: SortOrder
    shared_count?: SortOrder
  }

  export type shared_postMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    react_count?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    comment_count?: SortOrder
    shared_post_id?: SortOrder
    shared_count?: SortOrder
  }

  export type shared_postSumOrderByAggregateInput = {
    react_count?: SortOrder
    comment_count?: SortOrder
    shared_count?: SortOrder
  }

  export type TopicsScalarRelationFilter = {
    is?: topicsWhereInput
    isNot?: topicsWhereInput
  }

  export type study_access_topicUser_idTopic_idAccess_dateCompoundUniqueInput = {
    user_id: string
    topic_id: string
    access_date: Date | string
  }

  export type study_access_topicCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    topic_id?: SortOrder
    access_type?: SortOrder
    access_date?: SortOrder
    expire_date?: SortOrder
  }

  export type study_access_topicMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    topic_id?: SortOrder
    access_type?: SortOrder
    access_date?: SortOrder
    expire_date?: SortOrder
  }

  export type study_access_topicMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    topic_id?: SortOrder
    access_type?: SortOrder
    access_date?: SortOrder
    expire_date?: SortOrder
  }

  export type CoursesListRelationFilter = {
    every?: coursesWhereInput
    some?: coursesWhereInput
    none?: coursesWhereInput
  }

  export type Study_access_topicListRelationFilter = {
    every?: study_access_topicWhereInput
    some?: study_access_topicWhereInput
    none?: study_access_topicWhereInput
  }

  export type coursesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type study_access_topicOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type topicsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type topicsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type topicsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type transaction_historyCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    price?: SortOrder
    createddate?: SortOrder
  }

  export type transaction_historyAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type transaction_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    price?: SortOrder
    createddate?: SortOrder
  }

  export type transaction_historyMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    price?: SortOrder
    createddate?: SortOrder
  }

  export type transaction_historySumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Abuse_report_feedbacksListRelationFilter = {
    every?: abuse_report_feedbacksWhereInput
    some?: abuse_report_feedbacksWhereInput
    none?: abuse_report_feedbacksWhereInput
  }

  export type abuse_report_feedbacksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_abuse_reportsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
  }

  export type user_abuse_reportsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
  }

  export type user_abuse_reportsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
  }

  export type CoursesScalarRelationFilter = {
    is?: coursesWhereInput
    isNot?: coursesWhereInput
  }

  export type user_coursesUser_idCourse_idCompoundUniqueInput = {
    user_id: string
    course_id: string
  }

  export type user_coursesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    purchase_date?: SortOrder
  }

  export type user_coursesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    purchase_date?: SortOrder
  }

  export type user_coursesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    purchase_date?: SortOrder
  }

  export type Error_report_feedbacksListRelationFilter = {
    every?: error_report_feedbacksWhereInput
    some?: error_report_feedbacksWhereInput
    none?: error_report_feedbacksWhereInput
  }

  export type error_report_feedbacksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_error_reportsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    title?: SortOrder
    post_id?: SortOrder
    status?: SortOrder
  }

  export type user_error_reportsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    title?: SortOrder
    post_id?: SortOrder
    status?: SortOrder
  }

  export type user_error_reportsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    created_date?: SortOrder
    title?: SortOrder
    post_id?: SortOrder
    status?: SortOrder
  }

  export type PackagesScalarRelationFilter = {
    is?: packagesWhereInput
    isNot?: packagesWhereInput
  }

  export type user_packagesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    package_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
  }

  export type user_packagesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    package_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
  }

  export type user_packagesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    package_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type user_profile_historyCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    old_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    changed_at?: SortOrder
  }

  export type user_profile_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    changed_by?: SortOrder
    changed_at?: SortOrder
  }

  export type user_profile_historyMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    changed_by?: SortOrder
    changed_at?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type WordsScalarRelationFilter = {
    is?: wordsWhereInput
    isNot?: wordsWhereInput
  }

  export type user_progressCountOrderByAggregateInput = {
    id?: SortOrder
    word_id?: SortOrder
    user_id?: SortOrder
    level?: SortOrder
    createdstudydate?: SortOrder
    updatedstudydate?: SortOrder
  }

  export type user_progressAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type user_progressMaxOrderByAggregateInput = {
    id?: SortOrder
    word_id?: SortOrder
    user_id?: SortOrder
    level?: SortOrder
    createdstudydate?: SortOrder
    updatedstudydate?: SortOrder
  }

  export type user_progressMinOrderByAggregateInput = {
    id?: SortOrder
    word_id?: SortOrder
    user_id?: SortOrder
    level?: SortOrder
    createdstudydate?: SortOrder
    updatedstudydate?: SortOrder
  }

  export type user_progressSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type AttendanceListRelationFilter = {
    every?: attendanceWhereInput
    some?: attendanceWhereInput
    none?: attendanceWhereInput
  }

  export type Coin_transactionListRelationFilter = {
    every?: coin_transactionWhereInput
    some?: coin_transactionWhereInput
    none?: coin_transactionWhereInput
  }

  export type GroupsListRelationFilter = {
    every?: groupsWhereInput
    some?: groupsWhereInput
    none?: groupsWhereInput
  }

  export type PostsListRelationFilter = {
    every?: postsWhereInput
    some?: postsWhereInput
    none?: postsWhereInput
  }

  export type Transaction_historyListRelationFilter = {
    every?: transaction_historyWhereInput
    some?: transaction_historyWhereInput
    none?: transaction_historyWhereInput
  }

  export type User_abuse_reportsListRelationFilter = {
    every?: user_abuse_reportsWhereInput
    some?: user_abuse_reportsWhereInput
    none?: user_abuse_reportsWhereInput
  }

  export type User_error_reportsListRelationFilter = {
    every?: user_error_reportsWhereInput
    some?: user_error_reportsWhereInput
    none?: user_error_reportsWhereInput
  }

  export type User_profile_historyListRelationFilter = {
    every?: user_profile_historyWhereInput
    some?: user_profile_historyWhereInput
    none?: user_profile_historyWhereInput
  }

  export type User_progressListRelationFilter = {
    every?: user_progressWhereInput
    some?: user_progressWhereInput
    none?: user_progressWhereInput
  }

  export type attendanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type coin_transactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type groupsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type postsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transaction_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_abuse_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_error_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_profile_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_progressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    passwordhash?: SortOrder
    birthday?: SortOrder
    gender?: SortOrder
    fullname?: SortOrder
    address?: SortOrder
    email?: SortOrder
    phonenumber?: SortOrder
    created_date?: SortOrder
    isactive?: SortOrder
    isadmin?: SortOrder
    balance?: SortOrder
    image_url?: SortOrder
    is_block?: SortOrder
    is_verified?: SortOrder
    firebase_uid?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    balance?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    passwordhash?: SortOrder
    birthday?: SortOrder
    gender?: SortOrder
    fullname?: SortOrder
    address?: SortOrder
    email?: SortOrder
    phonenumber?: SortOrder
    created_date?: SortOrder
    isactive?: SortOrder
    isadmin?: SortOrder
    balance?: SortOrder
    image_url?: SortOrder
    is_block?: SortOrder
    is_verified?: SortOrder
    firebase_uid?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    passwordhash?: SortOrder
    birthday?: SortOrder
    gender?: SortOrder
    fullname?: SortOrder
    address?: SortOrder
    email?: SortOrder
    phonenumber?: SortOrder
    created_date?: SortOrder
    isactive?: SortOrder
    isadmin?: SortOrder
    balance?: SortOrder
    image_url?: SortOrder
    is_block?: SortOrder
    is_verified?: SortOrder
    firebase_uid?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    balance?: SortOrder
  }

  export type CoursesNullableScalarRelationFilter = {
    is?: coursesWhereInput | null
    isNot?: coursesWhereInput | null
  }

  export type wordsCountOrderByAggregateInput = {
    id?: SortOrder
    englishname?: SortOrder
    vietnamesename?: SortOrder
    type?: SortOrder
    examplesentence?: SortOrder
    imageurl?: SortOrder
    transcription?: SortOrder
    course_id?: SortOrder
  }

  export type wordsMaxOrderByAggregateInput = {
    id?: SortOrder
    englishname?: SortOrder
    vietnamesename?: SortOrder
    type?: SortOrder
    examplesentence?: SortOrder
    imageurl?: SortOrder
    transcription?: SortOrder
    course_id?: SortOrder
  }

  export type wordsMinOrderByAggregateInput = {
    id?: SortOrder
    englishname?: SortOrder
    vietnamesename?: SortOrder
    type?: SortOrder
    examplesentence?: SortOrder
    imageurl?: SortOrder
    transcription?: SortOrder
    course_id?: SortOrder
  }

  export type user_abuse_reportsCreateNestedOneWithoutAbuse_report_feedbacksInput = {
    create?: XOR<user_abuse_reportsCreateWithoutAbuse_report_feedbacksInput, user_abuse_reportsUncheckedCreateWithoutAbuse_report_feedbacksInput>
    connectOrCreate?: user_abuse_reportsCreateOrConnectWithoutAbuse_report_feedbacksInput
    connect?: user_abuse_reportsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutAbuse_report_feedbacksInput = {
    create?: XOR<usersCreateWithoutAbuse_report_feedbacksInput, usersUncheckedCreateWithoutAbuse_report_feedbacksInput>
    connectOrCreate?: usersCreateOrConnectWithoutAbuse_report_feedbacksInput
    connect?: usersWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type user_abuse_reportsUpdateOneRequiredWithoutAbuse_report_feedbacksNestedInput = {
    create?: XOR<user_abuse_reportsCreateWithoutAbuse_report_feedbacksInput, user_abuse_reportsUncheckedCreateWithoutAbuse_report_feedbacksInput>
    connectOrCreate?: user_abuse_reportsCreateOrConnectWithoutAbuse_report_feedbacksInput
    upsert?: user_abuse_reportsUpsertWithoutAbuse_report_feedbacksInput
    connect?: user_abuse_reportsWhereUniqueInput
    update?: XOR<XOR<user_abuse_reportsUpdateToOneWithWhereWithoutAbuse_report_feedbacksInput, user_abuse_reportsUpdateWithoutAbuse_report_feedbacksInput>, user_abuse_reportsUncheckedUpdateWithoutAbuse_report_feedbacksInput>
  }

  export type usersUpdateOneWithoutAbuse_report_feedbacksNestedInput = {
    create?: XOR<usersCreateWithoutAbuse_report_feedbacksInput, usersUncheckedCreateWithoutAbuse_report_feedbacksInput>
    connectOrCreate?: usersCreateOrConnectWithoutAbuse_report_feedbacksInput
    upsert?: usersUpsertWithoutAbuse_report_feedbacksInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAbuse_report_feedbacksInput, usersUpdateWithoutAbuse_report_feedbacksInput>, usersUncheckedUpdateWithoutAbuse_report_feedbacksInput>
  }

  export type usersCreateNestedOneWithoutAttendanceInput = {
    create?: XOR<usersCreateWithoutAttendanceInput, usersUncheckedCreateWithoutAttendanceInput>
    connectOrCreate?: usersCreateOrConnectWithoutAttendanceInput
    connect?: usersWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type usersUpdateOneRequiredWithoutAttendanceNestedInput = {
    create?: XOR<usersCreateWithoutAttendanceInput, usersUncheckedCreateWithoutAttendanceInput>
    connectOrCreate?: usersCreateOrConnectWithoutAttendanceInput
    upsert?: usersUpsertWithoutAttendanceInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAttendanceInput, usersUpdateWithoutAttendanceInput>, usersUncheckedUpdateWithoutAttendanceInput>
  }

  export type usersCreateNestedOneWithoutCoin_transactionInput = {
    create?: XOR<usersCreateWithoutCoin_transactionInput, usersUncheckedCreateWithoutCoin_transactionInput>
    connectOrCreate?: usersCreateOrConnectWithoutCoin_transactionInput
    connect?: usersWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usersUpdateOneRequiredWithoutCoin_transactionNestedInput = {
    create?: XOR<usersCreateWithoutCoin_transactionInput, usersUncheckedCreateWithoutCoin_transactionInput>
    connectOrCreate?: usersCreateOrConnectWithoutCoin_transactionInput
    upsert?: usersUpsertWithoutCoin_transactionInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCoin_transactionInput, usersUpdateWithoutCoin_transactionInput>, usersUncheckedUpdateWithoutCoin_transactionInput>
  }

  export type postsCreateNestedOneWithoutCommentsInput = {
    create?: XOR<postsCreateWithoutCommentsInput, postsUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: postsCreateOrConnectWithoutCommentsInput
    connect?: postsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutCommentsInput = {
    create?: XOR<usersCreateWithoutCommentsInput, usersUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCommentsInput
    connect?: usersWhereUniqueInput
  }

  export type shared_postCreateNestedOneWithoutCommentsInput = {
    create?: XOR<shared_postCreateWithoutCommentsInput, shared_postUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: shared_postCreateOrConnectWithoutCommentsInput
    connect?: shared_postWhereUniqueInput
  }

  export type react_commentsCreateNestedManyWithoutCommentsInput = {
    create?: XOR<react_commentsCreateWithoutCommentsInput, react_commentsUncheckedCreateWithoutCommentsInput> | react_commentsCreateWithoutCommentsInput[] | react_commentsUncheckedCreateWithoutCommentsInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutCommentsInput | react_commentsCreateOrConnectWithoutCommentsInput[]
    createMany?: react_commentsCreateManyCommentsInputEnvelope
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
  }

  export type react_commentsUncheckedCreateNestedManyWithoutCommentsInput = {
    create?: XOR<react_commentsCreateWithoutCommentsInput, react_commentsUncheckedCreateWithoutCommentsInput> | react_commentsCreateWithoutCommentsInput[] | react_commentsUncheckedCreateWithoutCommentsInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutCommentsInput | react_commentsCreateOrConnectWithoutCommentsInput[]
    createMany?: react_commentsCreateManyCommentsInputEnvelope
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type postsUpdateOneWithoutCommentsNestedInput = {
    create?: XOR<postsCreateWithoutCommentsInput, postsUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: postsCreateOrConnectWithoutCommentsInput
    upsert?: postsUpsertWithoutCommentsInput
    disconnect?: postsWhereInput | boolean
    delete?: postsWhereInput | boolean
    connect?: postsWhereUniqueInput
    update?: XOR<XOR<postsUpdateToOneWithWhereWithoutCommentsInput, postsUpdateWithoutCommentsInput>, postsUncheckedUpdateWithoutCommentsInput>
  }

  export type usersUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<usersCreateWithoutCommentsInput, usersUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCommentsInput
    upsert?: usersUpsertWithoutCommentsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCommentsInput, usersUpdateWithoutCommentsInput>, usersUncheckedUpdateWithoutCommentsInput>
  }

  export type shared_postUpdateOneWithoutCommentsNestedInput = {
    create?: XOR<shared_postCreateWithoutCommentsInput, shared_postUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: shared_postCreateOrConnectWithoutCommentsInput
    upsert?: shared_postUpsertWithoutCommentsInput
    disconnect?: shared_postWhereInput | boolean
    delete?: shared_postWhereInput | boolean
    connect?: shared_postWhereUniqueInput
    update?: XOR<XOR<shared_postUpdateToOneWithWhereWithoutCommentsInput, shared_postUpdateWithoutCommentsInput>, shared_postUncheckedUpdateWithoutCommentsInput>
  }

  export type react_commentsUpdateManyWithoutCommentsNestedInput = {
    create?: XOR<react_commentsCreateWithoutCommentsInput, react_commentsUncheckedCreateWithoutCommentsInput> | react_commentsCreateWithoutCommentsInput[] | react_commentsUncheckedCreateWithoutCommentsInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutCommentsInput | react_commentsCreateOrConnectWithoutCommentsInput[]
    upsert?: react_commentsUpsertWithWhereUniqueWithoutCommentsInput | react_commentsUpsertWithWhereUniqueWithoutCommentsInput[]
    createMany?: react_commentsCreateManyCommentsInputEnvelope
    set?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    disconnect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    delete?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    update?: react_commentsUpdateWithWhereUniqueWithoutCommentsInput | react_commentsUpdateWithWhereUniqueWithoutCommentsInput[]
    updateMany?: react_commentsUpdateManyWithWhereWithoutCommentsInput | react_commentsUpdateManyWithWhereWithoutCommentsInput[]
    deleteMany?: react_commentsScalarWhereInput | react_commentsScalarWhereInput[]
  }

  export type react_commentsUncheckedUpdateManyWithoutCommentsNestedInput = {
    create?: XOR<react_commentsCreateWithoutCommentsInput, react_commentsUncheckedCreateWithoutCommentsInput> | react_commentsCreateWithoutCommentsInput[] | react_commentsUncheckedCreateWithoutCommentsInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutCommentsInput | react_commentsCreateOrConnectWithoutCommentsInput[]
    upsert?: react_commentsUpsertWithWhereUniqueWithoutCommentsInput | react_commentsUpsertWithWhereUniqueWithoutCommentsInput[]
    createMany?: react_commentsCreateManyCommentsInputEnvelope
    set?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    disconnect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    delete?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    update?: react_commentsUpdateWithWhereUniqueWithoutCommentsInput | react_commentsUpdateWithWhereUniqueWithoutCommentsInput[]
    updateMany?: react_commentsUpdateManyWithWhereWithoutCommentsInput | react_commentsUpdateManyWithWhereWithoutCommentsInput[]
    deleteMany?: react_commentsScalarWhereInput | react_commentsScalarWhereInput[]
  }

  export type groupsCreateNestedOneWithoutComments_groupInput = {
    create?: XOR<groupsCreateWithoutComments_groupInput, groupsUncheckedCreateWithoutComments_groupInput>
    connectOrCreate?: groupsCreateOrConnectWithoutComments_groupInput
    connect?: groupsWhereUniqueInput
  }

  export type postsCreateNestedOneWithoutComments_groupInput = {
    create?: XOR<postsCreateWithoutComments_groupInput, postsUncheckedCreateWithoutComments_groupInput>
    connectOrCreate?: postsCreateOrConnectWithoutComments_groupInput
    connect?: postsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutComments_groupInput = {
    create?: XOR<usersCreateWithoutComments_groupInput, usersUncheckedCreateWithoutComments_groupInput>
    connectOrCreate?: usersCreateOrConnectWithoutComments_groupInput
    connect?: usersWhereUniqueInput
  }

  export type groupsUpdateOneRequiredWithoutComments_groupNestedInput = {
    create?: XOR<groupsCreateWithoutComments_groupInput, groupsUncheckedCreateWithoutComments_groupInput>
    connectOrCreate?: groupsCreateOrConnectWithoutComments_groupInput
    upsert?: groupsUpsertWithoutComments_groupInput
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutComments_groupInput, groupsUpdateWithoutComments_groupInput>, groupsUncheckedUpdateWithoutComments_groupInput>
  }

  export type postsUpdateOneRequiredWithoutComments_groupNestedInput = {
    create?: XOR<postsCreateWithoutComments_groupInput, postsUncheckedCreateWithoutComments_groupInput>
    connectOrCreate?: postsCreateOrConnectWithoutComments_groupInput
    upsert?: postsUpsertWithoutComments_groupInput
    connect?: postsWhereUniqueInput
    update?: XOR<XOR<postsUpdateToOneWithWhereWithoutComments_groupInput, postsUpdateWithoutComments_groupInput>, postsUncheckedUpdateWithoutComments_groupInput>
  }

  export type usersUpdateOneRequiredWithoutComments_groupNestedInput = {
    create?: XOR<usersCreateWithoutComments_groupInput, usersUncheckedCreateWithoutComments_groupInput>
    connectOrCreate?: usersCreateOrConnectWithoutComments_groupInput
    upsert?: usersUpsertWithoutComments_groupInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutComments_groupInput, usersUpdateWithoutComments_groupInput>, usersUncheckedUpdateWithoutComments_groupInput>
  }

  export type topicsCreateNestedOneWithoutCoursesInput = {
    create?: XOR<topicsCreateWithoutCoursesInput, topicsUncheckedCreateWithoutCoursesInput>
    connectOrCreate?: topicsCreateOrConnectWithoutCoursesInput
    connect?: topicsWhereUniqueInput
  }

  export type user_coursesCreateNestedManyWithoutCoursesInput = {
    create?: XOR<user_coursesCreateWithoutCoursesInput, user_coursesUncheckedCreateWithoutCoursesInput> | user_coursesCreateWithoutCoursesInput[] | user_coursesUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutCoursesInput | user_coursesCreateOrConnectWithoutCoursesInput[]
    createMany?: user_coursesCreateManyCoursesInputEnvelope
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
  }

  export type wordsCreateNestedManyWithoutCoursesInput = {
    create?: XOR<wordsCreateWithoutCoursesInput, wordsUncheckedCreateWithoutCoursesInput> | wordsCreateWithoutCoursesInput[] | wordsUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: wordsCreateOrConnectWithoutCoursesInput | wordsCreateOrConnectWithoutCoursesInput[]
    createMany?: wordsCreateManyCoursesInputEnvelope
    connect?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
  }

  export type user_coursesUncheckedCreateNestedManyWithoutCoursesInput = {
    create?: XOR<user_coursesCreateWithoutCoursesInput, user_coursesUncheckedCreateWithoutCoursesInput> | user_coursesCreateWithoutCoursesInput[] | user_coursesUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutCoursesInput | user_coursesCreateOrConnectWithoutCoursesInput[]
    createMany?: user_coursesCreateManyCoursesInputEnvelope
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
  }

  export type wordsUncheckedCreateNestedManyWithoutCoursesInput = {
    create?: XOR<wordsCreateWithoutCoursesInput, wordsUncheckedCreateWithoutCoursesInput> | wordsCreateWithoutCoursesInput[] | wordsUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: wordsCreateOrConnectWithoutCoursesInput | wordsCreateOrConnectWithoutCoursesInput[]
    createMany?: wordsCreateManyCoursesInputEnvelope
    connect?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
  }

  export type topicsUpdateOneWithoutCoursesNestedInput = {
    create?: XOR<topicsCreateWithoutCoursesInput, topicsUncheckedCreateWithoutCoursesInput>
    connectOrCreate?: topicsCreateOrConnectWithoutCoursesInput
    upsert?: topicsUpsertWithoutCoursesInput
    disconnect?: topicsWhereInput | boolean
    delete?: topicsWhereInput | boolean
    connect?: topicsWhereUniqueInput
    update?: XOR<XOR<topicsUpdateToOneWithWhereWithoutCoursesInput, topicsUpdateWithoutCoursesInput>, topicsUncheckedUpdateWithoutCoursesInput>
  }

  export type user_coursesUpdateManyWithoutCoursesNestedInput = {
    create?: XOR<user_coursesCreateWithoutCoursesInput, user_coursesUncheckedCreateWithoutCoursesInput> | user_coursesCreateWithoutCoursesInput[] | user_coursesUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutCoursesInput | user_coursesCreateOrConnectWithoutCoursesInput[]
    upsert?: user_coursesUpsertWithWhereUniqueWithoutCoursesInput | user_coursesUpsertWithWhereUniqueWithoutCoursesInput[]
    createMany?: user_coursesCreateManyCoursesInputEnvelope
    set?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    disconnect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    delete?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    update?: user_coursesUpdateWithWhereUniqueWithoutCoursesInput | user_coursesUpdateWithWhereUniqueWithoutCoursesInput[]
    updateMany?: user_coursesUpdateManyWithWhereWithoutCoursesInput | user_coursesUpdateManyWithWhereWithoutCoursesInput[]
    deleteMany?: user_coursesScalarWhereInput | user_coursesScalarWhereInput[]
  }

  export type wordsUpdateManyWithoutCoursesNestedInput = {
    create?: XOR<wordsCreateWithoutCoursesInput, wordsUncheckedCreateWithoutCoursesInput> | wordsCreateWithoutCoursesInput[] | wordsUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: wordsCreateOrConnectWithoutCoursesInput | wordsCreateOrConnectWithoutCoursesInput[]
    upsert?: wordsUpsertWithWhereUniqueWithoutCoursesInput | wordsUpsertWithWhereUniqueWithoutCoursesInput[]
    createMany?: wordsCreateManyCoursesInputEnvelope
    set?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    disconnect?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    delete?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    connect?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    update?: wordsUpdateWithWhereUniqueWithoutCoursesInput | wordsUpdateWithWhereUniqueWithoutCoursesInput[]
    updateMany?: wordsUpdateManyWithWhereWithoutCoursesInput | wordsUpdateManyWithWhereWithoutCoursesInput[]
    deleteMany?: wordsScalarWhereInput | wordsScalarWhereInput[]
  }

  export type user_coursesUncheckedUpdateManyWithoutCoursesNestedInput = {
    create?: XOR<user_coursesCreateWithoutCoursesInput, user_coursesUncheckedCreateWithoutCoursesInput> | user_coursesCreateWithoutCoursesInput[] | user_coursesUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutCoursesInput | user_coursesCreateOrConnectWithoutCoursesInput[]
    upsert?: user_coursesUpsertWithWhereUniqueWithoutCoursesInput | user_coursesUpsertWithWhereUniqueWithoutCoursesInput[]
    createMany?: user_coursesCreateManyCoursesInputEnvelope
    set?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    disconnect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    delete?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    update?: user_coursesUpdateWithWhereUniqueWithoutCoursesInput | user_coursesUpdateWithWhereUniqueWithoutCoursesInput[]
    updateMany?: user_coursesUpdateManyWithWhereWithoutCoursesInput | user_coursesUpdateManyWithWhereWithoutCoursesInput[]
    deleteMany?: user_coursesScalarWhereInput | user_coursesScalarWhereInput[]
  }

  export type wordsUncheckedUpdateManyWithoutCoursesNestedInput = {
    create?: XOR<wordsCreateWithoutCoursesInput, wordsUncheckedCreateWithoutCoursesInput> | wordsCreateWithoutCoursesInput[] | wordsUncheckedCreateWithoutCoursesInput[]
    connectOrCreate?: wordsCreateOrConnectWithoutCoursesInput | wordsCreateOrConnectWithoutCoursesInput[]
    upsert?: wordsUpsertWithWhereUniqueWithoutCoursesInput | wordsUpsertWithWhereUniqueWithoutCoursesInput[]
    createMany?: wordsCreateManyCoursesInputEnvelope
    set?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    disconnect?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    delete?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    connect?: wordsWhereUniqueInput | wordsWhereUniqueInput[]
    update?: wordsUpdateWithWhereUniqueWithoutCoursesInput | wordsUpdateWithWhereUniqueWithoutCoursesInput[]
    updateMany?: wordsUpdateManyWithWhereWithoutCoursesInput | wordsUpdateManyWithWhereWithoutCoursesInput[]
    deleteMany?: wordsScalarWhereInput | wordsScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutError_report_feedbacksInput = {
    create?: XOR<usersCreateWithoutError_report_feedbacksInput, usersUncheckedCreateWithoutError_report_feedbacksInput>
    connectOrCreate?: usersCreateOrConnectWithoutError_report_feedbacksInput
    connect?: usersWhereUniqueInput
  }

  export type user_error_reportsCreateNestedOneWithoutError_report_feedbacksInput = {
    create?: XOR<user_error_reportsCreateWithoutError_report_feedbacksInput, user_error_reportsUncheckedCreateWithoutError_report_feedbacksInput>
    connectOrCreate?: user_error_reportsCreateOrConnectWithoutError_report_feedbacksInput
    connect?: user_error_reportsWhereUniqueInput
  }

  export type usersUpdateOneWithoutError_report_feedbacksNestedInput = {
    create?: XOR<usersCreateWithoutError_report_feedbacksInput, usersUncheckedCreateWithoutError_report_feedbacksInput>
    connectOrCreate?: usersCreateOrConnectWithoutError_report_feedbacksInput
    upsert?: usersUpsertWithoutError_report_feedbacksInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutError_report_feedbacksInput, usersUpdateWithoutError_report_feedbacksInput>, usersUncheckedUpdateWithoutError_report_feedbacksInput>
  }

  export type user_error_reportsUpdateOneRequiredWithoutError_report_feedbacksNestedInput = {
    create?: XOR<user_error_reportsCreateWithoutError_report_feedbacksInput, user_error_reportsUncheckedCreateWithoutError_report_feedbacksInput>
    connectOrCreate?: user_error_reportsCreateOrConnectWithoutError_report_feedbacksInput
    upsert?: user_error_reportsUpsertWithoutError_report_feedbacksInput
    connect?: user_error_reportsWhereUniqueInput
    update?: XOR<XOR<user_error_reportsUpdateToOneWithWhereWithoutError_report_feedbacksInput, user_error_reportsUpdateWithoutError_report_feedbacksInput>, user_error_reportsUncheckedUpdateWithoutError_report_feedbacksInput>
  }

  export type groupsCreateNestedOneWithoutGroup_membersInput = {
    create?: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroup_membersInput
    connect?: groupsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutGroup_membersInput = {
    create?: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_membersInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type groupsUpdateOneRequiredWithoutGroup_membersNestedInput = {
    create?: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroup_membersInput
    upsert?: groupsUpsertWithoutGroup_membersInput
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutGroup_membersInput, groupsUpdateWithoutGroup_membersInput>, groupsUncheckedUpdateWithoutGroup_membersInput>
  }

  export type usersUpdateOneRequiredWithoutGroup_membersNestedInput = {
    create?: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_membersInput
    upsert?: usersUpsertWithoutGroup_membersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutGroup_membersInput, usersUpdateWithoutGroup_membersInput>, usersUncheckedUpdateWithoutGroup_membersInput>
  }

  export type groupsCreateNestedOneWithoutGroup_postsInput = {
    create?: XOR<groupsCreateWithoutGroup_postsInput, groupsUncheckedCreateWithoutGroup_postsInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroup_postsInput
    connect?: groupsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutGroup_postsInput = {
    create?: XOR<usersCreateWithoutGroup_postsInput, usersUncheckedCreateWithoutGroup_postsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_postsInput
    connect?: usersWhereUniqueInput
  }

  export type groupsUpdateOneRequiredWithoutGroup_postsNestedInput = {
    create?: XOR<groupsCreateWithoutGroup_postsInput, groupsUncheckedCreateWithoutGroup_postsInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroup_postsInput
    upsert?: groupsUpsertWithoutGroup_postsInput
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutGroup_postsInput, groupsUpdateWithoutGroup_postsInput>, groupsUncheckedUpdateWithoutGroup_postsInput>
  }

  export type usersUpdateOneRequiredWithoutGroup_postsNestedInput = {
    create?: XOR<usersCreateWithoutGroup_postsInput, usersUncheckedCreateWithoutGroup_postsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_postsInput
    upsert?: usersUpsertWithoutGroup_postsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutGroup_postsInput, usersUpdateWithoutGroup_postsInput>, usersUncheckedUpdateWithoutGroup_postsInput>
  }

  export type comments_groupCreateNestedManyWithoutGroupsInput = {
    create?: XOR<comments_groupCreateWithoutGroupsInput, comments_groupUncheckedCreateWithoutGroupsInput> | comments_groupCreateWithoutGroupsInput[] | comments_groupUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutGroupsInput | comments_groupCreateOrConnectWithoutGroupsInput[]
    createMany?: comments_groupCreateManyGroupsInputEnvelope
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
  }

  export type group_membersCreateNestedManyWithoutGroupsInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type group_postsCreateNestedManyWithoutGroupsInput = {
    create?: XOR<group_postsCreateWithoutGroupsInput, group_postsUncheckedCreateWithoutGroupsInput> | group_postsCreateWithoutGroupsInput[] | group_postsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutGroupsInput | group_postsCreateOrConnectWithoutGroupsInput[]
    createMany?: group_postsCreateManyGroupsInputEnvelope
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutGroupsInput = {
    create?: XOR<usersCreateWithoutGroupsInput, usersUncheckedCreateWithoutGroupsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroupsInput
    connect?: usersWhereUniqueInput
  }

  export type messagesCreateNestedManyWithoutGroupsInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type comments_groupUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<comments_groupCreateWithoutGroupsInput, comments_groupUncheckedCreateWithoutGroupsInput> | comments_groupCreateWithoutGroupsInput[] | comments_groupUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutGroupsInput | comments_groupCreateOrConnectWithoutGroupsInput[]
    createMany?: comments_groupCreateManyGroupsInputEnvelope
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
  }

  export type group_membersUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type group_postsUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<group_postsCreateWithoutGroupsInput, group_postsUncheckedCreateWithoutGroupsInput> | group_postsCreateWithoutGroupsInput[] | group_postsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutGroupsInput | group_postsCreateOrConnectWithoutGroupsInput[]
    createMany?: group_postsCreateManyGroupsInputEnvelope
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type comments_groupUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<comments_groupCreateWithoutGroupsInput, comments_groupUncheckedCreateWithoutGroupsInput> | comments_groupCreateWithoutGroupsInput[] | comments_groupUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutGroupsInput | comments_groupCreateOrConnectWithoutGroupsInput[]
    upsert?: comments_groupUpsertWithWhereUniqueWithoutGroupsInput | comments_groupUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: comments_groupCreateManyGroupsInputEnvelope
    set?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    disconnect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    delete?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    update?: comments_groupUpdateWithWhereUniqueWithoutGroupsInput | comments_groupUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: comments_groupUpdateManyWithWhereWithoutGroupsInput | comments_groupUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
  }

  export type group_membersUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutGroupsInput | group_membersUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutGroupsInput | group_membersUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutGroupsInput | group_membersUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type group_postsUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<group_postsCreateWithoutGroupsInput, group_postsUncheckedCreateWithoutGroupsInput> | group_postsCreateWithoutGroupsInput[] | group_postsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutGroupsInput | group_postsCreateOrConnectWithoutGroupsInput[]
    upsert?: group_postsUpsertWithWhereUniqueWithoutGroupsInput | group_postsUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: group_postsCreateManyGroupsInputEnvelope
    set?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    disconnect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    delete?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    update?: group_postsUpdateWithWhereUniqueWithoutGroupsInput | group_postsUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: group_postsUpdateManyWithWhereWithoutGroupsInput | group_postsUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: group_postsScalarWhereInput | group_postsScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutGroupsNestedInput = {
    create?: XOR<usersCreateWithoutGroupsInput, usersUncheckedCreateWithoutGroupsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroupsInput
    upsert?: usersUpsertWithoutGroupsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutGroupsInput, usersUpdateWithoutGroupsInput>, usersUncheckedUpdateWithoutGroupsInput>
  }

  export type messagesUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutGroupsInput | messagesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutGroupsInput | messagesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutGroupsInput | messagesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type comments_groupUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<comments_groupCreateWithoutGroupsInput, comments_groupUncheckedCreateWithoutGroupsInput> | comments_groupCreateWithoutGroupsInput[] | comments_groupUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutGroupsInput | comments_groupCreateOrConnectWithoutGroupsInput[]
    upsert?: comments_groupUpsertWithWhereUniqueWithoutGroupsInput | comments_groupUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: comments_groupCreateManyGroupsInputEnvelope
    set?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    disconnect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    delete?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    update?: comments_groupUpdateWithWhereUniqueWithoutGroupsInput | comments_groupUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: comments_groupUpdateManyWithWhereWithoutGroupsInput | comments_groupUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
  }

  export type group_membersUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutGroupsInput | group_membersUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutGroupsInput | group_membersUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutGroupsInput | group_membersUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type group_postsUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<group_postsCreateWithoutGroupsInput, group_postsUncheckedCreateWithoutGroupsInput> | group_postsCreateWithoutGroupsInput[] | group_postsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutGroupsInput | group_postsCreateOrConnectWithoutGroupsInput[]
    upsert?: group_postsUpsertWithWhereUniqueWithoutGroupsInput | group_postsUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: group_postsCreateManyGroupsInputEnvelope
    set?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    disconnect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    delete?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    update?: group_postsUpdateWithWhereUniqueWithoutGroupsInput | group_postsUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: group_postsUpdateManyWithWhereWithoutGroupsInput | group_postsUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: group_postsScalarWhereInput | group_postsScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutGroupsInput | messagesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutGroupsInput | messagesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutGroupsInput | messagesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type groupsCreateNestedOneWithoutMessagesInput = {
    create?: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutMessagesInput
    connect?: groupsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutMessagesInput = {
    create?: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessagesInput
    connect?: usersWhereUniqueInput
  }

  export type groupsUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutMessagesInput
    upsert?: groupsUpsertWithoutMessagesInput
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutMessagesInput, groupsUpdateWithoutMessagesInput>, groupsUncheckedUpdateWithoutMessagesInput>
  }

  export type usersUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessagesInput
    upsert?: usersUpsertWithoutMessagesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMessagesInput, usersUpdateWithoutMessagesInput>, usersUncheckedUpdateWithoutMessagesInput>
  }

  export type user_packagesCreateNestedManyWithoutPackagesInput = {
    create?: XOR<user_packagesCreateWithoutPackagesInput, user_packagesUncheckedCreateWithoutPackagesInput> | user_packagesCreateWithoutPackagesInput[] | user_packagesUncheckedCreateWithoutPackagesInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutPackagesInput | user_packagesCreateOrConnectWithoutPackagesInput[]
    createMany?: user_packagesCreateManyPackagesInputEnvelope
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
  }

  export type user_packagesUncheckedCreateNestedManyWithoutPackagesInput = {
    create?: XOR<user_packagesCreateWithoutPackagesInput, user_packagesUncheckedCreateWithoutPackagesInput> | user_packagesCreateWithoutPackagesInput[] | user_packagesUncheckedCreateWithoutPackagesInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutPackagesInput | user_packagesCreateOrConnectWithoutPackagesInput[]
    createMany?: user_packagesCreateManyPackagesInputEnvelope
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type user_packagesUpdateManyWithoutPackagesNestedInput = {
    create?: XOR<user_packagesCreateWithoutPackagesInput, user_packagesUncheckedCreateWithoutPackagesInput> | user_packagesCreateWithoutPackagesInput[] | user_packagesUncheckedCreateWithoutPackagesInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutPackagesInput | user_packagesCreateOrConnectWithoutPackagesInput[]
    upsert?: user_packagesUpsertWithWhereUniqueWithoutPackagesInput | user_packagesUpsertWithWhereUniqueWithoutPackagesInput[]
    createMany?: user_packagesCreateManyPackagesInputEnvelope
    set?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    disconnect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    delete?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    update?: user_packagesUpdateWithWhereUniqueWithoutPackagesInput | user_packagesUpdateWithWhereUniqueWithoutPackagesInput[]
    updateMany?: user_packagesUpdateManyWithWhereWithoutPackagesInput | user_packagesUpdateManyWithWhereWithoutPackagesInput[]
    deleteMany?: user_packagesScalarWhereInput | user_packagesScalarWhereInput[]
  }

  export type user_packagesUncheckedUpdateManyWithoutPackagesNestedInput = {
    create?: XOR<user_packagesCreateWithoutPackagesInput, user_packagesUncheckedCreateWithoutPackagesInput> | user_packagesCreateWithoutPackagesInput[] | user_packagesUncheckedCreateWithoutPackagesInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutPackagesInput | user_packagesCreateOrConnectWithoutPackagesInput[]
    upsert?: user_packagesUpsertWithWhereUniqueWithoutPackagesInput | user_packagesUpsertWithWhereUniqueWithoutPackagesInput[]
    createMany?: user_packagesCreateManyPackagesInputEnvelope
    set?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    disconnect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    delete?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    update?: user_packagesUpdateWithWhereUniqueWithoutPackagesInput | user_packagesUpdateWithWhereUniqueWithoutPackagesInput[]
    updateMany?: user_packagesUpdateManyWithWhereWithoutPackagesInput | user_packagesUpdateManyWithWhereWithoutPackagesInput[]
    deleteMany?: user_packagesScalarWhereInput | user_packagesScalarWhereInput[]
  }

  export type commentsCreateNestedManyWithoutPostsInput = {
    create?: XOR<commentsCreateWithoutPostsInput, commentsUncheckedCreateWithoutPostsInput> | commentsCreateWithoutPostsInput[] | commentsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutPostsInput | commentsCreateOrConnectWithoutPostsInput[]
    createMany?: commentsCreateManyPostsInputEnvelope
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
  }

  export type comments_groupCreateNestedManyWithoutPostsInput = {
    create?: XOR<comments_groupCreateWithoutPostsInput, comments_groupUncheckedCreateWithoutPostsInput> | comments_groupCreateWithoutPostsInput[] | comments_groupUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutPostsInput | comments_groupCreateOrConnectWithoutPostsInput[]
    createMany?: comments_groupCreateManyPostsInputEnvelope
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutPostsInput = {
    create?: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPostsInput
    connect?: usersWhereUniqueInput
  }

  export type react_postsCreateNestedManyWithoutPostsInput = {
    create?: XOR<react_postsCreateWithoutPostsInput, react_postsUncheckedCreateWithoutPostsInput> | react_postsCreateWithoutPostsInput[] | react_postsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutPostsInput | react_postsCreateOrConnectWithoutPostsInput[]
    createMany?: react_postsCreateManyPostsInputEnvelope
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
  }

  export type shared_postCreateNestedManyWithoutPostsInput = {
    create?: XOR<shared_postCreateWithoutPostsInput, shared_postUncheckedCreateWithoutPostsInput> | shared_postCreateWithoutPostsInput[] | shared_postUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutPostsInput | shared_postCreateOrConnectWithoutPostsInput[]
    createMany?: shared_postCreateManyPostsInputEnvelope
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
  }

  export type commentsUncheckedCreateNestedManyWithoutPostsInput = {
    create?: XOR<commentsCreateWithoutPostsInput, commentsUncheckedCreateWithoutPostsInput> | commentsCreateWithoutPostsInput[] | commentsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutPostsInput | commentsCreateOrConnectWithoutPostsInput[]
    createMany?: commentsCreateManyPostsInputEnvelope
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
  }

  export type comments_groupUncheckedCreateNestedManyWithoutPostsInput = {
    create?: XOR<comments_groupCreateWithoutPostsInput, comments_groupUncheckedCreateWithoutPostsInput> | comments_groupCreateWithoutPostsInput[] | comments_groupUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutPostsInput | comments_groupCreateOrConnectWithoutPostsInput[]
    createMany?: comments_groupCreateManyPostsInputEnvelope
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
  }

  export type react_postsUncheckedCreateNestedManyWithoutPostsInput = {
    create?: XOR<react_postsCreateWithoutPostsInput, react_postsUncheckedCreateWithoutPostsInput> | react_postsCreateWithoutPostsInput[] | react_postsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutPostsInput | react_postsCreateOrConnectWithoutPostsInput[]
    createMany?: react_postsCreateManyPostsInputEnvelope
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
  }

  export type shared_postUncheckedCreateNestedManyWithoutPostsInput = {
    create?: XOR<shared_postCreateWithoutPostsInput, shared_postUncheckedCreateWithoutPostsInput> | shared_postCreateWithoutPostsInput[] | shared_postUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutPostsInput | shared_postCreateOrConnectWithoutPostsInput[]
    createMany?: shared_postCreateManyPostsInputEnvelope
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
  }

  export type commentsUpdateManyWithoutPostsNestedInput = {
    create?: XOR<commentsCreateWithoutPostsInput, commentsUncheckedCreateWithoutPostsInput> | commentsCreateWithoutPostsInput[] | commentsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutPostsInput | commentsCreateOrConnectWithoutPostsInput[]
    upsert?: commentsUpsertWithWhereUniqueWithoutPostsInput | commentsUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: commentsCreateManyPostsInputEnvelope
    set?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    disconnect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    delete?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    update?: commentsUpdateWithWhereUniqueWithoutPostsInput | commentsUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: commentsUpdateManyWithWhereWithoutPostsInput | commentsUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: commentsScalarWhereInput | commentsScalarWhereInput[]
  }

  export type comments_groupUpdateManyWithoutPostsNestedInput = {
    create?: XOR<comments_groupCreateWithoutPostsInput, comments_groupUncheckedCreateWithoutPostsInput> | comments_groupCreateWithoutPostsInput[] | comments_groupUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutPostsInput | comments_groupCreateOrConnectWithoutPostsInput[]
    upsert?: comments_groupUpsertWithWhereUniqueWithoutPostsInput | comments_groupUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: comments_groupCreateManyPostsInputEnvelope
    set?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    disconnect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    delete?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    update?: comments_groupUpdateWithWhereUniqueWithoutPostsInput | comments_groupUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: comments_groupUpdateManyWithWhereWithoutPostsInput | comments_groupUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPostsInput
    upsert?: usersUpsertWithoutPostsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPostsInput, usersUpdateWithoutPostsInput>, usersUncheckedUpdateWithoutPostsInput>
  }

  export type react_postsUpdateManyWithoutPostsNestedInput = {
    create?: XOR<react_postsCreateWithoutPostsInput, react_postsUncheckedCreateWithoutPostsInput> | react_postsCreateWithoutPostsInput[] | react_postsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutPostsInput | react_postsCreateOrConnectWithoutPostsInput[]
    upsert?: react_postsUpsertWithWhereUniqueWithoutPostsInput | react_postsUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: react_postsCreateManyPostsInputEnvelope
    set?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    disconnect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    delete?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    update?: react_postsUpdateWithWhereUniqueWithoutPostsInput | react_postsUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: react_postsUpdateManyWithWhereWithoutPostsInput | react_postsUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: react_postsScalarWhereInput | react_postsScalarWhereInput[]
  }

  export type shared_postUpdateManyWithoutPostsNestedInput = {
    create?: XOR<shared_postCreateWithoutPostsInput, shared_postUncheckedCreateWithoutPostsInput> | shared_postCreateWithoutPostsInput[] | shared_postUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutPostsInput | shared_postCreateOrConnectWithoutPostsInput[]
    upsert?: shared_postUpsertWithWhereUniqueWithoutPostsInput | shared_postUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: shared_postCreateManyPostsInputEnvelope
    set?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    disconnect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    delete?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    update?: shared_postUpdateWithWhereUniqueWithoutPostsInput | shared_postUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: shared_postUpdateManyWithWhereWithoutPostsInput | shared_postUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
  }

  export type commentsUncheckedUpdateManyWithoutPostsNestedInput = {
    create?: XOR<commentsCreateWithoutPostsInput, commentsUncheckedCreateWithoutPostsInput> | commentsCreateWithoutPostsInput[] | commentsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutPostsInput | commentsCreateOrConnectWithoutPostsInput[]
    upsert?: commentsUpsertWithWhereUniqueWithoutPostsInput | commentsUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: commentsCreateManyPostsInputEnvelope
    set?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    disconnect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    delete?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    update?: commentsUpdateWithWhereUniqueWithoutPostsInput | commentsUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: commentsUpdateManyWithWhereWithoutPostsInput | commentsUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: commentsScalarWhereInput | commentsScalarWhereInput[]
  }

  export type comments_groupUncheckedUpdateManyWithoutPostsNestedInput = {
    create?: XOR<comments_groupCreateWithoutPostsInput, comments_groupUncheckedCreateWithoutPostsInput> | comments_groupCreateWithoutPostsInput[] | comments_groupUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutPostsInput | comments_groupCreateOrConnectWithoutPostsInput[]
    upsert?: comments_groupUpsertWithWhereUniqueWithoutPostsInput | comments_groupUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: comments_groupCreateManyPostsInputEnvelope
    set?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    disconnect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    delete?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    update?: comments_groupUpdateWithWhereUniqueWithoutPostsInput | comments_groupUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: comments_groupUpdateManyWithWhereWithoutPostsInput | comments_groupUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
  }

  export type react_postsUncheckedUpdateManyWithoutPostsNestedInput = {
    create?: XOR<react_postsCreateWithoutPostsInput, react_postsUncheckedCreateWithoutPostsInput> | react_postsCreateWithoutPostsInput[] | react_postsUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutPostsInput | react_postsCreateOrConnectWithoutPostsInput[]
    upsert?: react_postsUpsertWithWhereUniqueWithoutPostsInput | react_postsUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: react_postsCreateManyPostsInputEnvelope
    set?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    disconnect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    delete?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    update?: react_postsUpdateWithWhereUniqueWithoutPostsInput | react_postsUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: react_postsUpdateManyWithWhereWithoutPostsInput | react_postsUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: react_postsScalarWhereInput | react_postsScalarWhereInput[]
  }

  export type shared_postUncheckedUpdateManyWithoutPostsNestedInput = {
    create?: XOR<shared_postCreateWithoutPostsInput, shared_postUncheckedCreateWithoutPostsInput> | shared_postCreateWithoutPostsInput[] | shared_postUncheckedCreateWithoutPostsInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutPostsInput | shared_postCreateOrConnectWithoutPostsInput[]
    upsert?: shared_postUpsertWithWhereUniqueWithoutPostsInput | shared_postUpsertWithWhereUniqueWithoutPostsInput[]
    createMany?: shared_postCreateManyPostsInputEnvelope
    set?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    disconnect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    delete?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    update?: shared_postUpdateWithWhereUniqueWithoutPostsInput | shared_postUpdateWithWhereUniqueWithoutPostsInput[]
    updateMany?: shared_postUpdateManyWithWhereWithoutPostsInput | shared_postUpdateManyWithWhereWithoutPostsInput[]
    deleteMany?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
  }

  export type commentsCreateNestedOneWithoutReact_commentsInput = {
    create?: XOR<commentsCreateWithoutReact_commentsInput, commentsUncheckedCreateWithoutReact_commentsInput>
    connectOrCreate?: commentsCreateOrConnectWithoutReact_commentsInput
    connect?: commentsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutReact_commentsInput = {
    create?: XOR<usersCreateWithoutReact_commentsInput, usersUncheckedCreateWithoutReact_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReact_commentsInput
    connect?: usersWhereUniqueInput
  }

  export type commentsUpdateOneRequiredWithoutReact_commentsNestedInput = {
    create?: XOR<commentsCreateWithoutReact_commentsInput, commentsUncheckedCreateWithoutReact_commentsInput>
    connectOrCreate?: commentsCreateOrConnectWithoutReact_commentsInput
    upsert?: commentsUpsertWithoutReact_commentsInput
    connect?: commentsWhereUniqueInput
    update?: XOR<XOR<commentsUpdateToOneWithWhereWithoutReact_commentsInput, commentsUpdateWithoutReact_commentsInput>, commentsUncheckedUpdateWithoutReact_commentsInput>
  }

  export type usersUpdateOneRequiredWithoutReact_commentsNestedInput = {
    create?: XOR<usersCreateWithoutReact_commentsInput, usersUncheckedCreateWithoutReact_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReact_commentsInput
    upsert?: usersUpsertWithoutReact_commentsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReact_commentsInput, usersUpdateWithoutReact_commentsInput>, usersUncheckedUpdateWithoutReact_commentsInput>
  }

  export type postsCreateNestedOneWithoutReact_postsInput = {
    create?: XOR<postsCreateWithoutReact_postsInput, postsUncheckedCreateWithoutReact_postsInput>
    connectOrCreate?: postsCreateOrConnectWithoutReact_postsInput
    connect?: postsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutReact_postsInput = {
    create?: XOR<usersCreateWithoutReact_postsInput, usersUncheckedCreateWithoutReact_postsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReact_postsInput
    connect?: usersWhereUniqueInput
  }

  export type postsUpdateOneRequiredWithoutReact_postsNestedInput = {
    create?: XOR<postsCreateWithoutReact_postsInput, postsUncheckedCreateWithoutReact_postsInput>
    connectOrCreate?: postsCreateOrConnectWithoutReact_postsInput
    upsert?: postsUpsertWithoutReact_postsInput
    connect?: postsWhereUniqueInput
    update?: XOR<XOR<postsUpdateToOneWithWhereWithoutReact_postsInput, postsUpdateWithoutReact_postsInput>, postsUncheckedUpdateWithoutReact_postsInput>
  }

  export type usersUpdateOneRequiredWithoutReact_postsNestedInput = {
    create?: XOR<usersCreateWithoutReact_postsInput, usersUncheckedCreateWithoutReact_postsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReact_postsInput
    upsert?: usersUpsertWithoutReact_postsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReact_postsInput, usersUpdateWithoutReact_postsInput>, usersUncheckedUpdateWithoutReact_postsInput>
  }

  export type commentsCreateNestedManyWithoutShared_postInput = {
    create?: XOR<commentsCreateWithoutShared_postInput, commentsUncheckedCreateWithoutShared_postInput> | commentsCreateWithoutShared_postInput[] | commentsUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutShared_postInput | commentsCreateOrConnectWithoutShared_postInput[]
    createMany?: commentsCreateManyShared_postInputEnvelope
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
  }

  export type shared_postCreateNestedOneWithoutOther_shared_postInput = {
    create?: XOR<shared_postCreateWithoutOther_shared_postInput, shared_postUncheckedCreateWithoutOther_shared_postInput>
    connectOrCreate?: shared_postCreateOrConnectWithoutOther_shared_postInput
    connect?: shared_postWhereUniqueInput
  }

  export type shared_postCreateNestedManyWithoutShared_postInput = {
    create?: XOR<shared_postCreateWithoutShared_postInput, shared_postUncheckedCreateWithoutShared_postInput> | shared_postCreateWithoutShared_postInput[] | shared_postUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutShared_postInput | shared_postCreateOrConnectWithoutShared_postInput[]
    createMany?: shared_postCreateManyShared_postInputEnvelope
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
  }

  export type postsCreateNestedOneWithoutShared_postInput = {
    create?: XOR<postsCreateWithoutShared_postInput, postsUncheckedCreateWithoutShared_postInput>
    connectOrCreate?: postsCreateOrConnectWithoutShared_postInput
    connect?: postsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShared_postInput = {
    create?: XOR<usersCreateWithoutShared_postInput, usersUncheckedCreateWithoutShared_postInput>
    connectOrCreate?: usersCreateOrConnectWithoutShared_postInput
    connect?: usersWhereUniqueInput
  }

  export type commentsUncheckedCreateNestedManyWithoutShared_postInput = {
    create?: XOR<commentsCreateWithoutShared_postInput, commentsUncheckedCreateWithoutShared_postInput> | commentsCreateWithoutShared_postInput[] | commentsUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutShared_postInput | commentsCreateOrConnectWithoutShared_postInput[]
    createMany?: commentsCreateManyShared_postInputEnvelope
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
  }

  export type shared_postUncheckedCreateNestedManyWithoutShared_postInput = {
    create?: XOR<shared_postCreateWithoutShared_postInput, shared_postUncheckedCreateWithoutShared_postInput> | shared_postCreateWithoutShared_postInput[] | shared_postUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutShared_postInput | shared_postCreateOrConnectWithoutShared_postInput[]
    createMany?: shared_postCreateManyShared_postInputEnvelope
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
  }

  export type commentsUpdateManyWithoutShared_postNestedInput = {
    create?: XOR<commentsCreateWithoutShared_postInput, commentsUncheckedCreateWithoutShared_postInput> | commentsCreateWithoutShared_postInput[] | commentsUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutShared_postInput | commentsCreateOrConnectWithoutShared_postInput[]
    upsert?: commentsUpsertWithWhereUniqueWithoutShared_postInput | commentsUpsertWithWhereUniqueWithoutShared_postInput[]
    createMany?: commentsCreateManyShared_postInputEnvelope
    set?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    disconnect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    delete?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    update?: commentsUpdateWithWhereUniqueWithoutShared_postInput | commentsUpdateWithWhereUniqueWithoutShared_postInput[]
    updateMany?: commentsUpdateManyWithWhereWithoutShared_postInput | commentsUpdateManyWithWhereWithoutShared_postInput[]
    deleteMany?: commentsScalarWhereInput | commentsScalarWhereInput[]
  }

  export type shared_postUpdateOneWithoutOther_shared_postNestedInput = {
    create?: XOR<shared_postCreateWithoutOther_shared_postInput, shared_postUncheckedCreateWithoutOther_shared_postInput>
    connectOrCreate?: shared_postCreateOrConnectWithoutOther_shared_postInput
    upsert?: shared_postUpsertWithoutOther_shared_postInput
    disconnect?: shared_postWhereInput | boolean
    delete?: shared_postWhereInput | boolean
    connect?: shared_postWhereUniqueInput
    update?: XOR<XOR<shared_postUpdateToOneWithWhereWithoutOther_shared_postInput, shared_postUpdateWithoutOther_shared_postInput>, shared_postUncheckedUpdateWithoutOther_shared_postInput>
  }

  export type shared_postUpdateManyWithoutShared_postNestedInput = {
    create?: XOR<shared_postCreateWithoutShared_postInput, shared_postUncheckedCreateWithoutShared_postInput> | shared_postCreateWithoutShared_postInput[] | shared_postUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutShared_postInput | shared_postCreateOrConnectWithoutShared_postInput[]
    upsert?: shared_postUpsertWithWhereUniqueWithoutShared_postInput | shared_postUpsertWithWhereUniqueWithoutShared_postInput[]
    createMany?: shared_postCreateManyShared_postInputEnvelope
    set?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    disconnect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    delete?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    update?: shared_postUpdateWithWhereUniqueWithoutShared_postInput | shared_postUpdateWithWhereUniqueWithoutShared_postInput[]
    updateMany?: shared_postUpdateManyWithWhereWithoutShared_postInput | shared_postUpdateManyWithWhereWithoutShared_postInput[]
    deleteMany?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
  }

  export type postsUpdateOneWithoutShared_postNestedInput = {
    create?: XOR<postsCreateWithoutShared_postInput, postsUncheckedCreateWithoutShared_postInput>
    connectOrCreate?: postsCreateOrConnectWithoutShared_postInput
    upsert?: postsUpsertWithoutShared_postInput
    disconnect?: postsWhereInput | boolean
    delete?: postsWhereInput | boolean
    connect?: postsWhereUniqueInput
    update?: XOR<XOR<postsUpdateToOneWithWhereWithoutShared_postInput, postsUpdateWithoutShared_postInput>, postsUncheckedUpdateWithoutShared_postInput>
  }

  export type usersUpdateOneRequiredWithoutShared_postNestedInput = {
    create?: XOR<usersCreateWithoutShared_postInput, usersUncheckedCreateWithoutShared_postInput>
    connectOrCreate?: usersCreateOrConnectWithoutShared_postInput
    upsert?: usersUpsertWithoutShared_postInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutShared_postInput, usersUpdateWithoutShared_postInput>, usersUncheckedUpdateWithoutShared_postInput>
  }

  export type commentsUncheckedUpdateManyWithoutShared_postNestedInput = {
    create?: XOR<commentsCreateWithoutShared_postInput, commentsUncheckedCreateWithoutShared_postInput> | commentsCreateWithoutShared_postInput[] | commentsUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutShared_postInput | commentsCreateOrConnectWithoutShared_postInput[]
    upsert?: commentsUpsertWithWhereUniqueWithoutShared_postInput | commentsUpsertWithWhereUniqueWithoutShared_postInput[]
    createMany?: commentsCreateManyShared_postInputEnvelope
    set?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    disconnect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    delete?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    update?: commentsUpdateWithWhereUniqueWithoutShared_postInput | commentsUpdateWithWhereUniqueWithoutShared_postInput[]
    updateMany?: commentsUpdateManyWithWhereWithoutShared_postInput | commentsUpdateManyWithWhereWithoutShared_postInput[]
    deleteMany?: commentsScalarWhereInput | commentsScalarWhereInput[]
  }

  export type shared_postUncheckedUpdateManyWithoutShared_postNestedInput = {
    create?: XOR<shared_postCreateWithoutShared_postInput, shared_postUncheckedCreateWithoutShared_postInput> | shared_postCreateWithoutShared_postInput[] | shared_postUncheckedCreateWithoutShared_postInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutShared_postInput | shared_postCreateOrConnectWithoutShared_postInput[]
    upsert?: shared_postUpsertWithWhereUniqueWithoutShared_postInput | shared_postUpsertWithWhereUniqueWithoutShared_postInput[]
    createMany?: shared_postCreateManyShared_postInputEnvelope
    set?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    disconnect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    delete?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    update?: shared_postUpdateWithWhereUniqueWithoutShared_postInput | shared_postUpdateWithWhereUniqueWithoutShared_postInput[]
    updateMany?: shared_postUpdateManyWithWhereWithoutShared_postInput | shared_postUpdateManyWithWhereWithoutShared_postInput[]
    deleteMany?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
  }

  export type topicsCreateNestedOneWithoutStudy_access_topicInput = {
    create?: XOR<topicsCreateWithoutStudy_access_topicInput, topicsUncheckedCreateWithoutStudy_access_topicInput>
    connectOrCreate?: topicsCreateOrConnectWithoutStudy_access_topicInput
    connect?: topicsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutStudy_access_topicInput = {
    create?: XOR<usersCreateWithoutStudy_access_topicInput, usersUncheckedCreateWithoutStudy_access_topicInput>
    connectOrCreate?: usersCreateOrConnectWithoutStudy_access_topicInput
    connect?: usersWhereUniqueInput
  }

  export type topicsUpdateOneRequiredWithoutStudy_access_topicNestedInput = {
    create?: XOR<topicsCreateWithoutStudy_access_topicInput, topicsUncheckedCreateWithoutStudy_access_topicInput>
    connectOrCreate?: topicsCreateOrConnectWithoutStudy_access_topicInput
    upsert?: topicsUpsertWithoutStudy_access_topicInput
    connect?: topicsWhereUniqueInput
    update?: XOR<XOR<topicsUpdateToOneWithWhereWithoutStudy_access_topicInput, topicsUpdateWithoutStudy_access_topicInput>, topicsUncheckedUpdateWithoutStudy_access_topicInput>
  }

  export type usersUpdateOneRequiredWithoutStudy_access_topicNestedInput = {
    create?: XOR<usersCreateWithoutStudy_access_topicInput, usersUncheckedCreateWithoutStudy_access_topicInput>
    connectOrCreate?: usersCreateOrConnectWithoutStudy_access_topicInput
    upsert?: usersUpsertWithoutStudy_access_topicInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutStudy_access_topicInput, usersUpdateWithoutStudy_access_topicInput>, usersUncheckedUpdateWithoutStudy_access_topicInput>
  }

  export type coursesCreateNestedManyWithoutTopicsInput = {
    create?: XOR<coursesCreateWithoutTopicsInput, coursesUncheckedCreateWithoutTopicsInput> | coursesCreateWithoutTopicsInput[] | coursesUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTopicsInput | coursesCreateOrConnectWithoutTopicsInput[]
    createMany?: coursesCreateManyTopicsInputEnvelope
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
  }

  export type study_access_topicCreateNestedManyWithoutTopicsInput = {
    create?: XOR<study_access_topicCreateWithoutTopicsInput, study_access_topicUncheckedCreateWithoutTopicsInput> | study_access_topicCreateWithoutTopicsInput[] | study_access_topicUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutTopicsInput | study_access_topicCreateOrConnectWithoutTopicsInput[]
    createMany?: study_access_topicCreateManyTopicsInputEnvelope
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
  }

  export type coursesUncheckedCreateNestedManyWithoutTopicsInput = {
    create?: XOR<coursesCreateWithoutTopicsInput, coursesUncheckedCreateWithoutTopicsInput> | coursesCreateWithoutTopicsInput[] | coursesUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTopicsInput | coursesCreateOrConnectWithoutTopicsInput[]
    createMany?: coursesCreateManyTopicsInputEnvelope
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
  }

  export type study_access_topicUncheckedCreateNestedManyWithoutTopicsInput = {
    create?: XOR<study_access_topicCreateWithoutTopicsInput, study_access_topicUncheckedCreateWithoutTopicsInput> | study_access_topicCreateWithoutTopicsInput[] | study_access_topicUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutTopicsInput | study_access_topicCreateOrConnectWithoutTopicsInput[]
    createMany?: study_access_topicCreateManyTopicsInputEnvelope
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
  }

  export type coursesUpdateManyWithoutTopicsNestedInput = {
    create?: XOR<coursesCreateWithoutTopicsInput, coursesUncheckedCreateWithoutTopicsInput> | coursesCreateWithoutTopicsInput[] | coursesUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTopicsInput | coursesCreateOrConnectWithoutTopicsInput[]
    upsert?: coursesUpsertWithWhereUniqueWithoutTopicsInput | coursesUpsertWithWhereUniqueWithoutTopicsInput[]
    createMany?: coursesCreateManyTopicsInputEnvelope
    set?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    disconnect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    delete?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    update?: coursesUpdateWithWhereUniqueWithoutTopicsInput | coursesUpdateWithWhereUniqueWithoutTopicsInput[]
    updateMany?: coursesUpdateManyWithWhereWithoutTopicsInput | coursesUpdateManyWithWhereWithoutTopicsInput[]
    deleteMany?: coursesScalarWhereInput | coursesScalarWhereInput[]
  }

  export type study_access_topicUpdateManyWithoutTopicsNestedInput = {
    create?: XOR<study_access_topicCreateWithoutTopicsInput, study_access_topicUncheckedCreateWithoutTopicsInput> | study_access_topicCreateWithoutTopicsInput[] | study_access_topicUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutTopicsInput | study_access_topicCreateOrConnectWithoutTopicsInput[]
    upsert?: study_access_topicUpsertWithWhereUniqueWithoutTopicsInput | study_access_topicUpsertWithWhereUniqueWithoutTopicsInput[]
    createMany?: study_access_topicCreateManyTopicsInputEnvelope
    set?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    disconnect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    delete?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    update?: study_access_topicUpdateWithWhereUniqueWithoutTopicsInput | study_access_topicUpdateWithWhereUniqueWithoutTopicsInput[]
    updateMany?: study_access_topicUpdateManyWithWhereWithoutTopicsInput | study_access_topicUpdateManyWithWhereWithoutTopicsInput[]
    deleteMany?: study_access_topicScalarWhereInput | study_access_topicScalarWhereInput[]
  }

  export type coursesUncheckedUpdateManyWithoutTopicsNestedInput = {
    create?: XOR<coursesCreateWithoutTopicsInput, coursesUncheckedCreateWithoutTopicsInput> | coursesCreateWithoutTopicsInput[] | coursesUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTopicsInput | coursesCreateOrConnectWithoutTopicsInput[]
    upsert?: coursesUpsertWithWhereUniqueWithoutTopicsInput | coursesUpsertWithWhereUniqueWithoutTopicsInput[]
    createMany?: coursesCreateManyTopicsInputEnvelope
    set?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    disconnect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    delete?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    update?: coursesUpdateWithWhereUniqueWithoutTopicsInput | coursesUpdateWithWhereUniqueWithoutTopicsInput[]
    updateMany?: coursesUpdateManyWithWhereWithoutTopicsInput | coursesUpdateManyWithWhereWithoutTopicsInput[]
    deleteMany?: coursesScalarWhereInput | coursesScalarWhereInput[]
  }

  export type study_access_topicUncheckedUpdateManyWithoutTopicsNestedInput = {
    create?: XOR<study_access_topicCreateWithoutTopicsInput, study_access_topicUncheckedCreateWithoutTopicsInput> | study_access_topicCreateWithoutTopicsInput[] | study_access_topicUncheckedCreateWithoutTopicsInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutTopicsInput | study_access_topicCreateOrConnectWithoutTopicsInput[]
    upsert?: study_access_topicUpsertWithWhereUniqueWithoutTopicsInput | study_access_topicUpsertWithWhereUniqueWithoutTopicsInput[]
    createMany?: study_access_topicCreateManyTopicsInputEnvelope
    set?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    disconnect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    delete?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    update?: study_access_topicUpdateWithWhereUniqueWithoutTopicsInput | study_access_topicUpdateWithWhereUniqueWithoutTopicsInput[]
    updateMany?: study_access_topicUpdateManyWithWhereWithoutTopicsInput | study_access_topicUpdateManyWithWhereWithoutTopicsInput[]
    deleteMany?: study_access_topicScalarWhereInput | study_access_topicScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutTransaction_historyInput = {
    create?: XOR<usersCreateWithoutTransaction_historyInput, usersUncheckedCreateWithoutTransaction_historyInput>
    connectOrCreate?: usersCreateOrConnectWithoutTransaction_historyInput
    connect?: usersWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type usersUpdateOneRequiredWithoutTransaction_historyNestedInput = {
    create?: XOR<usersCreateWithoutTransaction_historyInput, usersUncheckedCreateWithoutTransaction_historyInput>
    connectOrCreate?: usersCreateOrConnectWithoutTransaction_historyInput
    upsert?: usersUpsertWithoutTransaction_historyInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutTransaction_historyInput, usersUpdateWithoutTransaction_historyInput>, usersUncheckedUpdateWithoutTransaction_historyInput>
  }

  export type abuse_report_feedbacksCreateNestedManyWithoutUser_abuse_reportsInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput> | abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput[] | abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput | abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput[]
    createMany?: abuse_report_feedbacksCreateManyUser_abuse_reportsInputEnvelope
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutUser_abuse_reportsInput = {
    create?: XOR<usersCreateWithoutUser_abuse_reportsInput, usersUncheckedCreateWithoutUser_abuse_reportsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_abuse_reportsInput
    connect?: usersWhereUniqueInput
  }

  export type abuse_report_feedbacksUncheckedCreateNestedManyWithoutUser_abuse_reportsInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput> | abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput[] | abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput | abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput[]
    createMany?: abuse_report_feedbacksCreateManyUser_abuse_reportsInputEnvelope
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
  }

  export type abuse_report_feedbacksUpdateManyWithoutUser_abuse_reportsNestedInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput> | abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput[] | abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput | abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput[]
    upsert?: abuse_report_feedbacksUpsertWithWhereUniqueWithoutUser_abuse_reportsInput | abuse_report_feedbacksUpsertWithWhereUniqueWithoutUser_abuse_reportsInput[]
    createMany?: abuse_report_feedbacksCreateManyUser_abuse_reportsInputEnvelope
    set?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    disconnect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    delete?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    update?: abuse_report_feedbacksUpdateWithWhereUniqueWithoutUser_abuse_reportsInput | abuse_report_feedbacksUpdateWithWhereUniqueWithoutUser_abuse_reportsInput[]
    updateMany?: abuse_report_feedbacksUpdateManyWithWhereWithoutUser_abuse_reportsInput | abuse_report_feedbacksUpdateManyWithWhereWithoutUser_abuse_reportsInput[]
    deleteMany?: abuse_report_feedbacksScalarWhereInput | abuse_report_feedbacksScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutUser_abuse_reportsNestedInput = {
    create?: XOR<usersCreateWithoutUser_abuse_reportsInput, usersUncheckedCreateWithoutUser_abuse_reportsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_abuse_reportsInput
    upsert?: usersUpsertWithoutUser_abuse_reportsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_abuse_reportsInput, usersUpdateWithoutUser_abuse_reportsInput>, usersUncheckedUpdateWithoutUser_abuse_reportsInput>
  }

  export type abuse_report_feedbacksUncheckedUpdateManyWithoutUser_abuse_reportsNestedInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput> | abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput[] | abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput | abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput[]
    upsert?: abuse_report_feedbacksUpsertWithWhereUniqueWithoutUser_abuse_reportsInput | abuse_report_feedbacksUpsertWithWhereUniqueWithoutUser_abuse_reportsInput[]
    createMany?: abuse_report_feedbacksCreateManyUser_abuse_reportsInputEnvelope
    set?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    disconnect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    delete?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    update?: abuse_report_feedbacksUpdateWithWhereUniqueWithoutUser_abuse_reportsInput | abuse_report_feedbacksUpdateWithWhereUniqueWithoutUser_abuse_reportsInput[]
    updateMany?: abuse_report_feedbacksUpdateManyWithWhereWithoutUser_abuse_reportsInput | abuse_report_feedbacksUpdateManyWithWhereWithoutUser_abuse_reportsInput[]
    deleteMany?: abuse_report_feedbacksScalarWhereInput | abuse_report_feedbacksScalarWhereInput[]
  }

  export type coursesCreateNestedOneWithoutUser_coursesInput = {
    create?: XOR<coursesCreateWithoutUser_coursesInput, coursesUncheckedCreateWithoutUser_coursesInput>
    connectOrCreate?: coursesCreateOrConnectWithoutUser_coursesInput
    connect?: coursesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_coursesInput = {
    create?: XOR<usersCreateWithoutUser_coursesInput, usersUncheckedCreateWithoutUser_coursesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_coursesInput
    connect?: usersWhereUniqueInput
  }

  export type coursesUpdateOneRequiredWithoutUser_coursesNestedInput = {
    create?: XOR<coursesCreateWithoutUser_coursesInput, coursesUncheckedCreateWithoutUser_coursesInput>
    connectOrCreate?: coursesCreateOrConnectWithoutUser_coursesInput
    upsert?: coursesUpsertWithoutUser_coursesInput
    connect?: coursesWhereUniqueInput
    update?: XOR<XOR<coursesUpdateToOneWithWhereWithoutUser_coursesInput, coursesUpdateWithoutUser_coursesInput>, coursesUncheckedUpdateWithoutUser_coursesInput>
  }

  export type usersUpdateOneRequiredWithoutUser_coursesNestedInput = {
    create?: XOR<usersCreateWithoutUser_coursesInput, usersUncheckedCreateWithoutUser_coursesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_coursesInput
    upsert?: usersUpsertWithoutUser_coursesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_coursesInput, usersUpdateWithoutUser_coursesInput>, usersUncheckedUpdateWithoutUser_coursesInput>
  }

  export type error_report_feedbacksCreateNestedManyWithoutUser_error_reportsInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput> | error_report_feedbacksCreateWithoutUser_error_reportsInput[] | error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput | error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput[]
    createMany?: error_report_feedbacksCreateManyUser_error_reportsInputEnvelope
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutUser_error_reportsInput = {
    create?: XOR<usersCreateWithoutUser_error_reportsInput, usersUncheckedCreateWithoutUser_error_reportsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_error_reportsInput
    connect?: usersWhereUniqueInput
  }

  export type error_report_feedbacksUncheckedCreateNestedManyWithoutUser_error_reportsInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput> | error_report_feedbacksCreateWithoutUser_error_reportsInput[] | error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput | error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput[]
    createMany?: error_report_feedbacksCreateManyUser_error_reportsInputEnvelope
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
  }

  export type error_report_feedbacksUpdateManyWithoutUser_error_reportsNestedInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput> | error_report_feedbacksCreateWithoutUser_error_reportsInput[] | error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput | error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput[]
    upsert?: error_report_feedbacksUpsertWithWhereUniqueWithoutUser_error_reportsInput | error_report_feedbacksUpsertWithWhereUniqueWithoutUser_error_reportsInput[]
    createMany?: error_report_feedbacksCreateManyUser_error_reportsInputEnvelope
    set?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    disconnect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    delete?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    update?: error_report_feedbacksUpdateWithWhereUniqueWithoutUser_error_reportsInput | error_report_feedbacksUpdateWithWhereUniqueWithoutUser_error_reportsInput[]
    updateMany?: error_report_feedbacksUpdateManyWithWhereWithoutUser_error_reportsInput | error_report_feedbacksUpdateManyWithWhereWithoutUser_error_reportsInput[]
    deleteMany?: error_report_feedbacksScalarWhereInput | error_report_feedbacksScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutUser_error_reportsNestedInput = {
    create?: XOR<usersCreateWithoutUser_error_reportsInput, usersUncheckedCreateWithoutUser_error_reportsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_error_reportsInput
    upsert?: usersUpsertWithoutUser_error_reportsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_error_reportsInput, usersUpdateWithoutUser_error_reportsInput>, usersUncheckedUpdateWithoutUser_error_reportsInput>
  }

  export type error_report_feedbacksUncheckedUpdateManyWithoutUser_error_reportsNestedInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput> | error_report_feedbacksCreateWithoutUser_error_reportsInput[] | error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput | error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput[]
    upsert?: error_report_feedbacksUpsertWithWhereUniqueWithoutUser_error_reportsInput | error_report_feedbacksUpsertWithWhereUniqueWithoutUser_error_reportsInput[]
    createMany?: error_report_feedbacksCreateManyUser_error_reportsInputEnvelope
    set?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    disconnect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    delete?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    update?: error_report_feedbacksUpdateWithWhereUniqueWithoutUser_error_reportsInput | error_report_feedbacksUpdateWithWhereUniqueWithoutUser_error_reportsInput[]
    updateMany?: error_report_feedbacksUpdateManyWithWhereWithoutUser_error_reportsInput | error_report_feedbacksUpdateManyWithWhereWithoutUser_error_reportsInput[]
    deleteMany?: error_report_feedbacksScalarWhereInput | error_report_feedbacksScalarWhereInput[]
  }

  export type packagesCreateNestedOneWithoutUser_packagesInput = {
    create?: XOR<packagesCreateWithoutUser_packagesInput, packagesUncheckedCreateWithoutUser_packagesInput>
    connectOrCreate?: packagesCreateOrConnectWithoutUser_packagesInput
    connect?: packagesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_packagesInput = {
    create?: XOR<usersCreateWithoutUser_packagesInput, usersUncheckedCreateWithoutUser_packagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_packagesInput
    connect?: usersWhereUniqueInput
  }

  export type packagesUpdateOneRequiredWithoutUser_packagesNestedInput = {
    create?: XOR<packagesCreateWithoutUser_packagesInput, packagesUncheckedCreateWithoutUser_packagesInput>
    connectOrCreate?: packagesCreateOrConnectWithoutUser_packagesInput
    upsert?: packagesUpsertWithoutUser_packagesInput
    connect?: packagesWhereUniqueInput
    update?: XOR<XOR<packagesUpdateToOneWithWhereWithoutUser_packagesInput, packagesUpdateWithoutUser_packagesInput>, packagesUncheckedUpdateWithoutUser_packagesInput>
  }

  export type usersUpdateOneRequiredWithoutUser_packagesNestedInput = {
    create?: XOR<usersCreateWithoutUser_packagesInput, usersUncheckedCreateWithoutUser_packagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_packagesInput
    upsert?: usersUpsertWithoutUser_packagesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_packagesInput, usersUpdateWithoutUser_packagesInput>, usersUncheckedUpdateWithoutUser_packagesInput>
  }

  export type usersCreateNestedOneWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    create?: XOR<usersCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_profile_history_user_profile_history_changed_byTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    create?: XOR<usersCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_profile_history_user_profile_history_user_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutUser_profile_history_user_profile_history_changed_byTousersNestedInput = {
    create?: XOR<usersCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_profile_history_user_profile_history_changed_byTousersInput
    upsert?: usersUpsertWithoutUser_profile_history_user_profile_history_changed_byTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>, usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
  }

  export type usersUpdateOneRequiredWithoutUser_profile_history_user_profile_history_user_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_profile_history_user_profile_history_user_idTousersInput
    upsert?: usersUpsertWithoutUser_profile_history_user_profile_history_user_idTousersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput>, usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
  }

  export type usersCreateNestedOneWithoutUser_progressInput = {
    create?: XOR<usersCreateWithoutUser_progressInput, usersUncheckedCreateWithoutUser_progressInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_progressInput
    connect?: usersWhereUniqueInput
  }

  export type wordsCreateNestedOneWithoutUser_progressInput = {
    create?: XOR<wordsCreateWithoutUser_progressInput, wordsUncheckedCreateWithoutUser_progressInput>
    connectOrCreate?: wordsCreateOrConnectWithoutUser_progressInput
    connect?: wordsWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_progressNestedInput = {
    create?: XOR<usersCreateWithoutUser_progressInput, usersUncheckedCreateWithoutUser_progressInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_progressInput
    upsert?: usersUpsertWithoutUser_progressInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_progressInput, usersUpdateWithoutUser_progressInput>, usersUncheckedUpdateWithoutUser_progressInput>
  }

  export type wordsUpdateOneRequiredWithoutUser_progressNestedInput = {
    create?: XOR<wordsCreateWithoutUser_progressInput, wordsUncheckedCreateWithoutUser_progressInput>
    connectOrCreate?: wordsCreateOrConnectWithoutUser_progressInput
    upsert?: wordsUpsertWithoutUser_progressInput
    connect?: wordsWhereUniqueInput
    update?: XOR<XOR<wordsUpdateToOneWithWhereWithoutUser_progressInput, wordsUpdateWithoutUser_progressInput>, wordsUncheckedUpdateWithoutUser_progressInput>
  }

  export type abuse_report_feedbacksCreateNestedManyWithoutUsersInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUsersInput, abuse_report_feedbacksUncheckedCreateWithoutUsersInput> | abuse_report_feedbacksCreateWithoutUsersInput[] | abuse_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUsersInput | abuse_report_feedbacksCreateOrConnectWithoutUsersInput[]
    createMany?: abuse_report_feedbacksCreateManyUsersInputEnvelope
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
  }

  export type attendanceCreateNestedManyWithoutUsersInput = {
    create?: XOR<attendanceCreateWithoutUsersInput, attendanceUncheckedCreateWithoutUsersInput> | attendanceCreateWithoutUsersInput[] | attendanceUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutUsersInput | attendanceCreateOrConnectWithoutUsersInput[]
    createMany?: attendanceCreateManyUsersInputEnvelope
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
  }

  export type coin_transactionCreateNestedManyWithoutUsersInput = {
    create?: XOR<coin_transactionCreateWithoutUsersInput, coin_transactionUncheckedCreateWithoutUsersInput> | coin_transactionCreateWithoutUsersInput[] | coin_transactionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: coin_transactionCreateOrConnectWithoutUsersInput | coin_transactionCreateOrConnectWithoutUsersInput[]
    createMany?: coin_transactionCreateManyUsersInputEnvelope
    connect?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
  }

  export type commentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<commentsCreateWithoutUsersInput, commentsUncheckedCreateWithoutUsersInput> | commentsCreateWithoutUsersInput[] | commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutUsersInput | commentsCreateOrConnectWithoutUsersInput[]
    createMany?: commentsCreateManyUsersInputEnvelope
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
  }

  export type comments_groupCreateNestedManyWithoutUsersInput = {
    create?: XOR<comments_groupCreateWithoutUsersInput, comments_groupUncheckedCreateWithoutUsersInput> | comments_groupCreateWithoutUsersInput[] | comments_groupUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutUsersInput | comments_groupCreateOrConnectWithoutUsersInput[]
    createMany?: comments_groupCreateManyUsersInputEnvelope
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
  }

  export type error_report_feedbacksCreateNestedManyWithoutUsersInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUsersInput, error_report_feedbacksUncheckedCreateWithoutUsersInput> | error_report_feedbacksCreateWithoutUsersInput[] | error_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUsersInput | error_report_feedbacksCreateOrConnectWithoutUsersInput[]
    createMany?: error_report_feedbacksCreateManyUsersInputEnvelope
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
  }

  export type group_membersCreateNestedManyWithoutUsersInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type group_postsCreateNestedManyWithoutUsersInput = {
    create?: XOR<group_postsCreateWithoutUsersInput, group_postsUncheckedCreateWithoutUsersInput> | group_postsCreateWithoutUsersInput[] | group_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutUsersInput | group_postsCreateOrConnectWithoutUsersInput[]
    createMany?: group_postsCreateManyUsersInputEnvelope
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
  }

  export type groupsCreateNestedManyWithoutUsersInput = {
    create?: XOR<groupsCreateWithoutUsersInput, groupsUncheckedCreateWithoutUsersInput> | groupsCreateWithoutUsersInput[] | groupsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: groupsCreateOrConnectWithoutUsersInput | groupsCreateOrConnectWithoutUsersInput[]
    createMany?: groupsCreateManyUsersInputEnvelope
    connect?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
  }

  export type messagesCreateNestedManyWithoutUsersInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type postsCreateNestedManyWithoutUsersInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
  }

  export type react_commentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<react_commentsCreateWithoutUsersInput, react_commentsUncheckedCreateWithoutUsersInput> | react_commentsCreateWithoutUsersInput[] | react_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutUsersInput | react_commentsCreateOrConnectWithoutUsersInput[]
    createMany?: react_commentsCreateManyUsersInputEnvelope
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
  }

  export type react_postsCreateNestedManyWithoutUsersInput = {
    create?: XOR<react_postsCreateWithoutUsersInput, react_postsUncheckedCreateWithoutUsersInput> | react_postsCreateWithoutUsersInput[] | react_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutUsersInput | react_postsCreateOrConnectWithoutUsersInput[]
    createMany?: react_postsCreateManyUsersInputEnvelope
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
  }

  export type shared_postCreateNestedManyWithoutUsersInput = {
    create?: XOR<shared_postCreateWithoutUsersInput, shared_postUncheckedCreateWithoutUsersInput> | shared_postCreateWithoutUsersInput[] | shared_postUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutUsersInput | shared_postCreateOrConnectWithoutUsersInput[]
    createMany?: shared_postCreateManyUsersInputEnvelope
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
  }

  export type study_access_topicCreateNestedManyWithoutUsersInput = {
    create?: XOR<study_access_topicCreateWithoutUsersInput, study_access_topicUncheckedCreateWithoutUsersInput> | study_access_topicCreateWithoutUsersInput[] | study_access_topicUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutUsersInput | study_access_topicCreateOrConnectWithoutUsersInput[]
    createMany?: study_access_topicCreateManyUsersInputEnvelope
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
  }

  export type transaction_historyCreateNestedManyWithoutUsersInput = {
    create?: XOR<transaction_historyCreateWithoutUsersInput, transaction_historyUncheckedCreateWithoutUsersInput> | transaction_historyCreateWithoutUsersInput[] | transaction_historyUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transaction_historyCreateOrConnectWithoutUsersInput | transaction_historyCreateOrConnectWithoutUsersInput[]
    createMany?: transaction_historyCreateManyUsersInputEnvelope
    connect?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
  }

  export type user_abuse_reportsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_abuse_reportsCreateWithoutUsersInput, user_abuse_reportsUncheckedCreateWithoutUsersInput> | user_abuse_reportsCreateWithoutUsersInput[] | user_abuse_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_abuse_reportsCreateOrConnectWithoutUsersInput | user_abuse_reportsCreateOrConnectWithoutUsersInput[]
    createMany?: user_abuse_reportsCreateManyUsersInputEnvelope
    connect?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
  }

  export type user_coursesCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_coursesCreateWithoutUsersInput, user_coursesUncheckedCreateWithoutUsersInput> | user_coursesCreateWithoutUsersInput[] | user_coursesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutUsersInput | user_coursesCreateOrConnectWithoutUsersInput[]
    createMany?: user_coursesCreateManyUsersInputEnvelope
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
  }

  export type user_error_reportsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_error_reportsCreateWithoutUsersInput, user_error_reportsUncheckedCreateWithoutUsersInput> | user_error_reportsCreateWithoutUsersInput[] | user_error_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_error_reportsCreateOrConnectWithoutUsersInput | user_error_reportsCreateOrConnectWithoutUsersInput[]
    createMany?: user_error_reportsCreateManyUsersInputEnvelope
    connect?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
  }

  export type user_packagesCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_packagesCreateWithoutUsersInput, user_packagesUncheckedCreateWithoutUsersInput> | user_packagesCreateWithoutUsersInput[] | user_packagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutUsersInput | user_packagesCreateOrConnectWithoutUsersInput[]
    createMany?: user_packagesCreateManyUsersInputEnvelope
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
  }

  export type user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInputEnvelope
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
  }

  export type user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInputEnvelope
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
  }

  export type user_progressCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_progressCreateWithoutUsersInput, user_progressUncheckedCreateWithoutUsersInput> | user_progressCreateWithoutUsersInput[] | user_progressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutUsersInput | user_progressCreateOrConnectWithoutUsersInput[]
    createMany?: user_progressCreateManyUsersInputEnvelope
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
  }

  export type abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUsersInput, abuse_report_feedbacksUncheckedCreateWithoutUsersInput> | abuse_report_feedbacksCreateWithoutUsersInput[] | abuse_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUsersInput | abuse_report_feedbacksCreateOrConnectWithoutUsersInput[]
    createMany?: abuse_report_feedbacksCreateManyUsersInputEnvelope
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
  }

  export type attendanceUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<attendanceCreateWithoutUsersInput, attendanceUncheckedCreateWithoutUsersInput> | attendanceCreateWithoutUsersInput[] | attendanceUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutUsersInput | attendanceCreateOrConnectWithoutUsersInput[]
    createMany?: attendanceCreateManyUsersInputEnvelope
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
  }

  export type coin_transactionUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<coin_transactionCreateWithoutUsersInput, coin_transactionUncheckedCreateWithoutUsersInput> | coin_transactionCreateWithoutUsersInput[] | coin_transactionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: coin_transactionCreateOrConnectWithoutUsersInput | coin_transactionCreateOrConnectWithoutUsersInput[]
    createMany?: coin_transactionCreateManyUsersInputEnvelope
    connect?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
  }

  export type commentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<commentsCreateWithoutUsersInput, commentsUncheckedCreateWithoutUsersInput> | commentsCreateWithoutUsersInput[] | commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutUsersInput | commentsCreateOrConnectWithoutUsersInput[]
    createMany?: commentsCreateManyUsersInputEnvelope
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
  }

  export type comments_groupUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<comments_groupCreateWithoutUsersInput, comments_groupUncheckedCreateWithoutUsersInput> | comments_groupCreateWithoutUsersInput[] | comments_groupUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutUsersInput | comments_groupCreateOrConnectWithoutUsersInput[]
    createMany?: comments_groupCreateManyUsersInputEnvelope
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
  }

  export type error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUsersInput, error_report_feedbacksUncheckedCreateWithoutUsersInput> | error_report_feedbacksCreateWithoutUsersInput[] | error_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUsersInput | error_report_feedbacksCreateOrConnectWithoutUsersInput[]
    createMany?: error_report_feedbacksCreateManyUsersInputEnvelope
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
  }

  export type group_membersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type group_postsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<group_postsCreateWithoutUsersInput, group_postsUncheckedCreateWithoutUsersInput> | group_postsCreateWithoutUsersInput[] | group_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutUsersInput | group_postsCreateOrConnectWithoutUsersInput[]
    createMany?: group_postsCreateManyUsersInputEnvelope
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
  }

  export type groupsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<groupsCreateWithoutUsersInput, groupsUncheckedCreateWithoutUsersInput> | groupsCreateWithoutUsersInput[] | groupsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: groupsCreateOrConnectWithoutUsersInput | groupsCreateOrConnectWithoutUsersInput[]
    createMany?: groupsCreateManyUsersInputEnvelope
    connect?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type postsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
  }

  export type react_commentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<react_commentsCreateWithoutUsersInput, react_commentsUncheckedCreateWithoutUsersInput> | react_commentsCreateWithoutUsersInput[] | react_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutUsersInput | react_commentsCreateOrConnectWithoutUsersInput[]
    createMany?: react_commentsCreateManyUsersInputEnvelope
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
  }

  export type react_postsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<react_postsCreateWithoutUsersInput, react_postsUncheckedCreateWithoutUsersInput> | react_postsCreateWithoutUsersInput[] | react_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutUsersInput | react_postsCreateOrConnectWithoutUsersInput[]
    createMany?: react_postsCreateManyUsersInputEnvelope
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
  }

  export type shared_postUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<shared_postCreateWithoutUsersInput, shared_postUncheckedCreateWithoutUsersInput> | shared_postCreateWithoutUsersInput[] | shared_postUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutUsersInput | shared_postCreateOrConnectWithoutUsersInput[]
    createMany?: shared_postCreateManyUsersInputEnvelope
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
  }

  export type study_access_topicUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<study_access_topicCreateWithoutUsersInput, study_access_topicUncheckedCreateWithoutUsersInput> | study_access_topicCreateWithoutUsersInput[] | study_access_topicUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutUsersInput | study_access_topicCreateOrConnectWithoutUsersInput[]
    createMany?: study_access_topicCreateManyUsersInputEnvelope
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
  }

  export type transaction_historyUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<transaction_historyCreateWithoutUsersInput, transaction_historyUncheckedCreateWithoutUsersInput> | transaction_historyCreateWithoutUsersInput[] | transaction_historyUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transaction_historyCreateOrConnectWithoutUsersInput | transaction_historyCreateOrConnectWithoutUsersInput[]
    createMany?: transaction_historyCreateManyUsersInputEnvelope
    connect?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
  }

  export type user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_abuse_reportsCreateWithoutUsersInput, user_abuse_reportsUncheckedCreateWithoutUsersInput> | user_abuse_reportsCreateWithoutUsersInput[] | user_abuse_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_abuse_reportsCreateOrConnectWithoutUsersInput | user_abuse_reportsCreateOrConnectWithoutUsersInput[]
    createMany?: user_abuse_reportsCreateManyUsersInputEnvelope
    connect?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
  }

  export type user_coursesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_coursesCreateWithoutUsersInput, user_coursesUncheckedCreateWithoutUsersInput> | user_coursesCreateWithoutUsersInput[] | user_coursesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutUsersInput | user_coursesCreateOrConnectWithoutUsersInput[]
    createMany?: user_coursesCreateManyUsersInputEnvelope
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
  }

  export type user_error_reportsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_error_reportsCreateWithoutUsersInput, user_error_reportsUncheckedCreateWithoutUsersInput> | user_error_reportsCreateWithoutUsersInput[] | user_error_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_error_reportsCreateOrConnectWithoutUsersInput | user_error_reportsCreateOrConnectWithoutUsersInput[]
    createMany?: user_error_reportsCreateManyUsersInputEnvelope
    connect?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
  }

  export type user_packagesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_packagesCreateWithoutUsersInput, user_packagesUncheckedCreateWithoutUsersInput> | user_packagesCreateWithoutUsersInput[] | user_packagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutUsersInput | user_packagesCreateOrConnectWithoutUsersInput[]
    createMany?: user_packagesCreateManyUsersInputEnvelope
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
  }

  export type user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInputEnvelope
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
  }

  export type user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInputEnvelope
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
  }

  export type user_progressUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_progressCreateWithoutUsersInput, user_progressUncheckedCreateWithoutUsersInput> | user_progressCreateWithoutUsersInput[] | user_progressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutUsersInput | user_progressCreateOrConnectWithoutUsersInput[]
    createMany?: user_progressCreateManyUsersInputEnvelope
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
  }

  export type abuse_report_feedbacksUpdateManyWithoutUsersNestedInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUsersInput, abuse_report_feedbacksUncheckedCreateWithoutUsersInput> | abuse_report_feedbacksCreateWithoutUsersInput[] | abuse_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUsersInput | abuse_report_feedbacksCreateOrConnectWithoutUsersInput[]
    upsert?: abuse_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput | abuse_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: abuse_report_feedbacksCreateManyUsersInputEnvelope
    set?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    disconnect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    delete?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    update?: abuse_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput | abuse_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: abuse_report_feedbacksUpdateManyWithWhereWithoutUsersInput | abuse_report_feedbacksUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: abuse_report_feedbacksScalarWhereInput | abuse_report_feedbacksScalarWhereInput[]
  }

  export type attendanceUpdateManyWithoutUsersNestedInput = {
    create?: XOR<attendanceCreateWithoutUsersInput, attendanceUncheckedCreateWithoutUsersInput> | attendanceCreateWithoutUsersInput[] | attendanceUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutUsersInput | attendanceCreateOrConnectWithoutUsersInput[]
    upsert?: attendanceUpsertWithWhereUniqueWithoutUsersInput | attendanceUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: attendanceCreateManyUsersInputEnvelope
    set?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    disconnect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    delete?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    update?: attendanceUpdateWithWhereUniqueWithoutUsersInput | attendanceUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: attendanceUpdateManyWithWhereWithoutUsersInput | attendanceUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
  }

  export type coin_transactionUpdateManyWithoutUsersNestedInput = {
    create?: XOR<coin_transactionCreateWithoutUsersInput, coin_transactionUncheckedCreateWithoutUsersInput> | coin_transactionCreateWithoutUsersInput[] | coin_transactionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: coin_transactionCreateOrConnectWithoutUsersInput | coin_transactionCreateOrConnectWithoutUsersInput[]
    upsert?: coin_transactionUpsertWithWhereUniqueWithoutUsersInput | coin_transactionUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: coin_transactionCreateManyUsersInputEnvelope
    set?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    disconnect?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    delete?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    connect?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    update?: coin_transactionUpdateWithWhereUniqueWithoutUsersInput | coin_transactionUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: coin_transactionUpdateManyWithWhereWithoutUsersInput | coin_transactionUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: coin_transactionScalarWhereInput | coin_transactionScalarWhereInput[]
  }

  export type commentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<commentsCreateWithoutUsersInput, commentsUncheckedCreateWithoutUsersInput> | commentsCreateWithoutUsersInput[] | commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutUsersInput | commentsCreateOrConnectWithoutUsersInput[]
    upsert?: commentsUpsertWithWhereUniqueWithoutUsersInput | commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: commentsCreateManyUsersInputEnvelope
    set?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    disconnect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    delete?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    update?: commentsUpdateWithWhereUniqueWithoutUsersInput | commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: commentsUpdateManyWithWhereWithoutUsersInput | commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: commentsScalarWhereInput | commentsScalarWhereInput[]
  }

  export type comments_groupUpdateManyWithoutUsersNestedInput = {
    create?: XOR<comments_groupCreateWithoutUsersInput, comments_groupUncheckedCreateWithoutUsersInput> | comments_groupCreateWithoutUsersInput[] | comments_groupUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutUsersInput | comments_groupCreateOrConnectWithoutUsersInput[]
    upsert?: comments_groupUpsertWithWhereUniqueWithoutUsersInput | comments_groupUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: comments_groupCreateManyUsersInputEnvelope
    set?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    disconnect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    delete?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    update?: comments_groupUpdateWithWhereUniqueWithoutUsersInput | comments_groupUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: comments_groupUpdateManyWithWhereWithoutUsersInput | comments_groupUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
  }

  export type error_report_feedbacksUpdateManyWithoutUsersNestedInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUsersInput, error_report_feedbacksUncheckedCreateWithoutUsersInput> | error_report_feedbacksCreateWithoutUsersInput[] | error_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUsersInput | error_report_feedbacksCreateOrConnectWithoutUsersInput[]
    upsert?: error_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput | error_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: error_report_feedbacksCreateManyUsersInputEnvelope
    set?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    disconnect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    delete?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    update?: error_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput | error_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: error_report_feedbacksUpdateManyWithWhereWithoutUsersInput | error_report_feedbacksUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: error_report_feedbacksScalarWhereInput | error_report_feedbacksScalarWhereInput[]
  }

  export type group_membersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutUsersInput | group_membersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutUsersInput | group_membersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutUsersInput | group_membersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type group_postsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<group_postsCreateWithoutUsersInput, group_postsUncheckedCreateWithoutUsersInput> | group_postsCreateWithoutUsersInput[] | group_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutUsersInput | group_postsCreateOrConnectWithoutUsersInput[]
    upsert?: group_postsUpsertWithWhereUniqueWithoutUsersInput | group_postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: group_postsCreateManyUsersInputEnvelope
    set?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    disconnect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    delete?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    update?: group_postsUpdateWithWhereUniqueWithoutUsersInput | group_postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: group_postsUpdateManyWithWhereWithoutUsersInput | group_postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: group_postsScalarWhereInput | group_postsScalarWhereInput[]
  }

  export type groupsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<groupsCreateWithoutUsersInput, groupsUncheckedCreateWithoutUsersInput> | groupsCreateWithoutUsersInput[] | groupsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: groupsCreateOrConnectWithoutUsersInput | groupsCreateOrConnectWithoutUsersInput[]
    upsert?: groupsUpsertWithWhereUniqueWithoutUsersInput | groupsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: groupsCreateManyUsersInputEnvelope
    set?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    disconnect?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    delete?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    connect?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    update?: groupsUpdateWithWhereUniqueWithoutUsersInput | groupsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: groupsUpdateManyWithWhereWithoutUsersInput | groupsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: groupsScalarWhereInput | groupsScalarWhereInput[]
  }

  export type messagesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsersInput | messagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsersInput | messagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsersInput | messagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type postsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    upsert?: postsUpsertWithWhereUniqueWithoutUsersInput | postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    set?: postsWhereUniqueInput | postsWhereUniqueInput[]
    disconnect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    delete?: postsWhereUniqueInput | postsWhereUniqueInput[]
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    update?: postsUpdateWithWhereUniqueWithoutUsersInput | postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: postsUpdateManyWithWhereWithoutUsersInput | postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: postsScalarWhereInput | postsScalarWhereInput[]
  }

  export type react_commentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<react_commentsCreateWithoutUsersInput, react_commentsUncheckedCreateWithoutUsersInput> | react_commentsCreateWithoutUsersInput[] | react_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutUsersInput | react_commentsCreateOrConnectWithoutUsersInput[]
    upsert?: react_commentsUpsertWithWhereUniqueWithoutUsersInput | react_commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: react_commentsCreateManyUsersInputEnvelope
    set?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    disconnect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    delete?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    update?: react_commentsUpdateWithWhereUniqueWithoutUsersInput | react_commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: react_commentsUpdateManyWithWhereWithoutUsersInput | react_commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: react_commentsScalarWhereInput | react_commentsScalarWhereInput[]
  }

  export type react_postsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<react_postsCreateWithoutUsersInput, react_postsUncheckedCreateWithoutUsersInput> | react_postsCreateWithoutUsersInput[] | react_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutUsersInput | react_postsCreateOrConnectWithoutUsersInput[]
    upsert?: react_postsUpsertWithWhereUniqueWithoutUsersInput | react_postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: react_postsCreateManyUsersInputEnvelope
    set?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    disconnect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    delete?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    update?: react_postsUpdateWithWhereUniqueWithoutUsersInput | react_postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: react_postsUpdateManyWithWhereWithoutUsersInput | react_postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: react_postsScalarWhereInput | react_postsScalarWhereInput[]
  }

  export type shared_postUpdateManyWithoutUsersNestedInput = {
    create?: XOR<shared_postCreateWithoutUsersInput, shared_postUncheckedCreateWithoutUsersInput> | shared_postCreateWithoutUsersInput[] | shared_postUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutUsersInput | shared_postCreateOrConnectWithoutUsersInput[]
    upsert?: shared_postUpsertWithWhereUniqueWithoutUsersInput | shared_postUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: shared_postCreateManyUsersInputEnvelope
    set?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    disconnect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    delete?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    update?: shared_postUpdateWithWhereUniqueWithoutUsersInput | shared_postUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: shared_postUpdateManyWithWhereWithoutUsersInput | shared_postUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
  }

  export type study_access_topicUpdateManyWithoutUsersNestedInput = {
    create?: XOR<study_access_topicCreateWithoutUsersInput, study_access_topicUncheckedCreateWithoutUsersInput> | study_access_topicCreateWithoutUsersInput[] | study_access_topicUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutUsersInput | study_access_topicCreateOrConnectWithoutUsersInput[]
    upsert?: study_access_topicUpsertWithWhereUniqueWithoutUsersInput | study_access_topicUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: study_access_topicCreateManyUsersInputEnvelope
    set?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    disconnect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    delete?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    update?: study_access_topicUpdateWithWhereUniqueWithoutUsersInput | study_access_topicUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: study_access_topicUpdateManyWithWhereWithoutUsersInput | study_access_topicUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: study_access_topicScalarWhereInput | study_access_topicScalarWhereInput[]
  }

  export type transaction_historyUpdateManyWithoutUsersNestedInput = {
    create?: XOR<transaction_historyCreateWithoutUsersInput, transaction_historyUncheckedCreateWithoutUsersInput> | transaction_historyCreateWithoutUsersInput[] | transaction_historyUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transaction_historyCreateOrConnectWithoutUsersInput | transaction_historyCreateOrConnectWithoutUsersInput[]
    upsert?: transaction_historyUpsertWithWhereUniqueWithoutUsersInput | transaction_historyUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: transaction_historyCreateManyUsersInputEnvelope
    set?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    disconnect?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    delete?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    connect?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    update?: transaction_historyUpdateWithWhereUniqueWithoutUsersInput | transaction_historyUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: transaction_historyUpdateManyWithWhereWithoutUsersInput | transaction_historyUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: transaction_historyScalarWhereInput | transaction_historyScalarWhereInput[]
  }

  export type user_abuse_reportsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_abuse_reportsCreateWithoutUsersInput, user_abuse_reportsUncheckedCreateWithoutUsersInput> | user_abuse_reportsCreateWithoutUsersInput[] | user_abuse_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_abuse_reportsCreateOrConnectWithoutUsersInput | user_abuse_reportsCreateOrConnectWithoutUsersInput[]
    upsert?: user_abuse_reportsUpsertWithWhereUniqueWithoutUsersInput | user_abuse_reportsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_abuse_reportsCreateManyUsersInputEnvelope
    set?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    disconnect?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    delete?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    connect?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    update?: user_abuse_reportsUpdateWithWhereUniqueWithoutUsersInput | user_abuse_reportsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_abuse_reportsUpdateManyWithWhereWithoutUsersInput | user_abuse_reportsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_abuse_reportsScalarWhereInput | user_abuse_reportsScalarWhereInput[]
  }

  export type user_coursesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_coursesCreateWithoutUsersInput, user_coursesUncheckedCreateWithoutUsersInput> | user_coursesCreateWithoutUsersInput[] | user_coursesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutUsersInput | user_coursesCreateOrConnectWithoutUsersInput[]
    upsert?: user_coursesUpsertWithWhereUniqueWithoutUsersInput | user_coursesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_coursesCreateManyUsersInputEnvelope
    set?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    disconnect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    delete?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    update?: user_coursesUpdateWithWhereUniqueWithoutUsersInput | user_coursesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_coursesUpdateManyWithWhereWithoutUsersInput | user_coursesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_coursesScalarWhereInput | user_coursesScalarWhereInput[]
  }

  export type user_error_reportsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_error_reportsCreateWithoutUsersInput, user_error_reportsUncheckedCreateWithoutUsersInput> | user_error_reportsCreateWithoutUsersInput[] | user_error_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_error_reportsCreateOrConnectWithoutUsersInput | user_error_reportsCreateOrConnectWithoutUsersInput[]
    upsert?: user_error_reportsUpsertWithWhereUniqueWithoutUsersInput | user_error_reportsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_error_reportsCreateManyUsersInputEnvelope
    set?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    disconnect?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    delete?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    connect?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    update?: user_error_reportsUpdateWithWhereUniqueWithoutUsersInput | user_error_reportsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_error_reportsUpdateManyWithWhereWithoutUsersInput | user_error_reportsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_error_reportsScalarWhereInput | user_error_reportsScalarWhereInput[]
  }

  export type user_packagesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_packagesCreateWithoutUsersInput, user_packagesUncheckedCreateWithoutUsersInput> | user_packagesCreateWithoutUsersInput[] | user_packagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutUsersInput | user_packagesCreateOrConnectWithoutUsersInput[]
    upsert?: user_packagesUpsertWithWhereUniqueWithoutUsersInput | user_packagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_packagesCreateManyUsersInputEnvelope
    set?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    disconnect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    delete?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    update?: user_packagesUpdateWithWhereUniqueWithoutUsersInput | user_packagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_packagesUpdateManyWithWhereWithoutUsersInput | user_packagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_packagesScalarWhereInput | user_packagesScalarWhereInput[]
  }

  export type user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput[]
    upsert?: user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInputEnvelope
    set?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    disconnect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    delete?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    update?: user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput[]
    updateMany?: user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_changed_byTousersInput[]
    deleteMany?: user_profile_historyScalarWhereInput | user_profile_historyScalarWhereInput[]
  }

  export type user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput[]
    upsert?: user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInputEnvelope
    set?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    disconnect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    delete?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    update?: user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput[]
    updateMany?: user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_user_idTousersInput[]
    deleteMany?: user_profile_historyScalarWhereInput | user_profile_historyScalarWhereInput[]
  }

  export type user_progressUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_progressCreateWithoutUsersInput, user_progressUncheckedCreateWithoutUsersInput> | user_progressCreateWithoutUsersInput[] | user_progressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutUsersInput | user_progressCreateOrConnectWithoutUsersInput[]
    upsert?: user_progressUpsertWithWhereUniqueWithoutUsersInput | user_progressUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_progressCreateManyUsersInputEnvelope
    set?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    disconnect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    delete?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    update?: user_progressUpdateWithWhereUniqueWithoutUsersInput | user_progressUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_progressUpdateManyWithWhereWithoutUsersInput | user_progressUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_progressScalarWhereInput | user_progressScalarWhereInput[]
  }

  export type abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<abuse_report_feedbacksCreateWithoutUsersInput, abuse_report_feedbacksUncheckedCreateWithoutUsersInput> | abuse_report_feedbacksCreateWithoutUsersInput[] | abuse_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abuse_report_feedbacksCreateOrConnectWithoutUsersInput | abuse_report_feedbacksCreateOrConnectWithoutUsersInput[]
    upsert?: abuse_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput | abuse_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: abuse_report_feedbacksCreateManyUsersInputEnvelope
    set?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    disconnect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    delete?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    connect?: abuse_report_feedbacksWhereUniqueInput | abuse_report_feedbacksWhereUniqueInput[]
    update?: abuse_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput | abuse_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: abuse_report_feedbacksUpdateManyWithWhereWithoutUsersInput | abuse_report_feedbacksUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: abuse_report_feedbacksScalarWhereInput | abuse_report_feedbacksScalarWhereInput[]
  }

  export type attendanceUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<attendanceCreateWithoutUsersInput, attendanceUncheckedCreateWithoutUsersInput> | attendanceCreateWithoutUsersInput[] | attendanceUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutUsersInput | attendanceCreateOrConnectWithoutUsersInput[]
    upsert?: attendanceUpsertWithWhereUniqueWithoutUsersInput | attendanceUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: attendanceCreateManyUsersInputEnvelope
    set?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    disconnect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    delete?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    update?: attendanceUpdateWithWhereUniqueWithoutUsersInput | attendanceUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: attendanceUpdateManyWithWhereWithoutUsersInput | attendanceUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
  }

  export type coin_transactionUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<coin_transactionCreateWithoutUsersInput, coin_transactionUncheckedCreateWithoutUsersInput> | coin_transactionCreateWithoutUsersInput[] | coin_transactionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: coin_transactionCreateOrConnectWithoutUsersInput | coin_transactionCreateOrConnectWithoutUsersInput[]
    upsert?: coin_transactionUpsertWithWhereUniqueWithoutUsersInput | coin_transactionUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: coin_transactionCreateManyUsersInputEnvelope
    set?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    disconnect?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    delete?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    connect?: coin_transactionWhereUniqueInput | coin_transactionWhereUniqueInput[]
    update?: coin_transactionUpdateWithWhereUniqueWithoutUsersInput | coin_transactionUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: coin_transactionUpdateManyWithWhereWithoutUsersInput | coin_transactionUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: coin_transactionScalarWhereInput | coin_transactionScalarWhereInput[]
  }

  export type commentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<commentsCreateWithoutUsersInput, commentsUncheckedCreateWithoutUsersInput> | commentsCreateWithoutUsersInput[] | commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: commentsCreateOrConnectWithoutUsersInput | commentsCreateOrConnectWithoutUsersInput[]
    upsert?: commentsUpsertWithWhereUniqueWithoutUsersInput | commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: commentsCreateManyUsersInputEnvelope
    set?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    disconnect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    delete?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    connect?: commentsWhereUniqueInput | commentsWhereUniqueInput[]
    update?: commentsUpdateWithWhereUniqueWithoutUsersInput | commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: commentsUpdateManyWithWhereWithoutUsersInput | commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: commentsScalarWhereInput | commentsScalarWhereInput[]
  }

  export type comments_groupUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<comments_groupCreateWithoutUsersInput, comments_groupUncheckedCreateWithoutUsersInput> | comments_groupCreateWithoutUsersInput[] | comments_groupUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: comments_groupCreateOrConnectWithoutUsersInput | comments_groupCreateOrConnectWithoutUsersInput[]
    upsert?: comments_groupUpsertWithWhereUniqueWithoutUsersInput | comments_groupUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: comments_groupCreateManyUsersInputEnvelope
    set?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    disconnect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    delete?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    connect?: comments_groupWhereUniqueInput | comments_groupWhereUniqueInput[]
    update?: comments_groupUpdateWithWhereUniqueWithoutUsersInput | comments_groupUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: comments_groupUpdateManyWithWhereWithoutUsersInput | comments_groupUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
  }

  export type error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<error_report_feedbacksCreateWithoutUsersInput, error_report_feedbacksUncheckedCreateWithoutUsersInput> | error_report_feedbacksCreateWithoutUsersInput[] | error_report_feedbacksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: error_report_feedbacksCreateOrConnectWithoutUsersInput | error_report_feedbacksCreateOrConnectWithoutUsersInput[]
    upsert?: error_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput | error_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: error_report_feedbacksCreateManyUsersInputEnvelope
    set?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    disconnect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    delete?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    connect?: error_report_feedbacksWhereUniqueInput | error_report_feedbacksWhereUniqueInput[]
    update?: error_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput | error_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: error_report_feedbacksUpdateManyWithWhereWithoutUsersInput | error_report_feedbacksUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: error_report_feedbacksScalarWhereInput | error_report_feedbacksScalarWhereInput[]
  }

  export type group_membersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutUsersInput | group_membersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutUsersInput | group_membersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutUsersInput | group_membersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type group_postsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<group_postsCreateWithoutUsersInput, group_postsUncheckedCreateWithoutUsersInput> | group_postsCreateWithoutUsersInput[] | group_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_postsCreateOrConnectWithoutUsersInput | group_postsCreateOrConnectWithoutUsersInput[]
    upsert?: group_postsUpsertWithWhereUniqueWithoutUsersInput | group_postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: group_postsCreateManyUsersInputEnvelope
    set?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    disconnect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    delete?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    connect?: group_postsWhereUniqueInput | group_postsWhereUniqueInput[]
    update?: group_postsUpdateWithWhereUniqueWithoutUsersInput | group_postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: group_postsUpdateManyWithWhereWithoutUsersInput | group_postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: group_postsScalarWhereInput | group_postsScalarWhereInput[]
  }

  export type groupsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<groupsCreateWithoutUsersInput, groupsUncheckedCreateWithoutUsersInput> | groupsCreateWithoutUsersInput[] | groupsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: groupsCreateOrConnectWithoutUsersInput | groupsCreateOrConnectWithoutUsersInput[]
    upsert?: groupsUpsertWithWhereUniqueWithoutUsersInput | groupsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: groupsCreateManyUsersInputEnvelope
    set?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    disconnect?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    delete?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    connect?: groupsWhereUniqueInput | groupsWhereUniqueInput[]
    update?: groupsUpdateWithWhereUniqueWithoutUsersInput | groupsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: groupsUpdateManyWithWhereWithoutUsersInput | groupsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: groupsScalarWhereInput | groupsScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsersInput | messagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsersInput | messagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsersInput | messagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type postsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    upsert?: postsUpsertWithWhereUniqueWithoutUsersInput | postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    set?: postsWhereUniqueInput | postsWhereUniqueInput[]
    disconnect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    delete?: postsWhereUniqueInput | postsWhereUniqueInput[]
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    update?: postsUpdateWithWhereUniqueWithoutUsersInput | postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: postsUpdateManyWithWhereWithoutUsersInput | postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: postsScalarWhereInput | postsScalarWhereInput[]
  }

  export type react_commentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<react_commentsCreateWithoutUsersInput, react_commentsUncheckedCreateWithoutUsersInput> | react_commentsCreateWithoutUsersInput[] | react_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_commentsCreateOrConnectWithoutUsersInput | react_commentsCreateOrConnectWithoutUsersInput[]
    upsert?: react_commentsUpsertWithWhereUniqueWithoutUsersInput | react_commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: react_commentsCreateManyUsersInputEnvelope
    set?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    disconnect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    delete?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    connect?: react_commentsWhereUniqueInput | react_commentsWhereUniqueInput[]
    update?: react_commentsUpdateWithWhereUniqueWithoutUsersInput | react_commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: react_commentsUpdateManyWithWhereWithoutUsersInput | react_commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: react_commentsScalarWhereInput | react_commentsScalarWhereInput[]
  }

  export type react_postsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<react_postsCreateWithoutUsersInput, react_postsUncheckedCreateWithoutUsersInput> | react_postsCreateWithoutUsersInput[] | react_postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: react_postsCreateOrConnectWithoutUsersInput | react_postsCreateOrConnectWithoutUsersInput[]
    upsert?: react_postsUpsertWithWhereUniqueWithoutUsersInput | react_postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: react_postsCreateManyUsersInputEnvelope
    set?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    disconnect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    delete?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    connect?: react_postsWhereUniqueInput | react_postsWhereUniqueInput[]
    update?: react_postsUpdateWithWhereUniqueWithoutUsersInput | react_postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: react_postsUpdateManyWithWhereWithoutUsersInput | react_postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: react_postsScalarWhereInput | react_postsScalarWhereInput[]
  }

  export type shared_postUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<shared_postCreateWithoutUsersInput, shared_postUncheckedCreateWithoutUsersInput> | shared_postCreateWithoutUsersInput[] | shared_postUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: shared_postCreateOrConnectWithoutUsersInput | shared_postCreateOrConnectWithoutUsersInput[]
    upsert?: shared_postUpsertWithWhereUniqueWithoutUsersInput | shared_postUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: shared_postCreateManyUsersInputEnvelope
    set?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    disconnect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    delete?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    connect?: shared_postWhereUniqueInput | shared_postWhereUniqueInput[]
    update?: shared_postUpdateWithWhereUniqueWithoutUsersInput | shared_postUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: shared_postUpdateManyWithWhereWithoutUsersInput | shared_postUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
  }

  export type study_access_topicUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<study_access_topicCreateWithoutUsersInput, study_access_topicUncheckedCreateWithoutUsersInput> | study_access_topicCreateWithoutUsersInput[] | study_access_topicUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: study_access_topicCreateOrConnectWithoutUsersInput | study_access_topicCreateOrConnectWithoutUsersInput[]
    upsert?: study_access_topicUpsertWithWhereUniqueWithoutUsersInput | study_access_topicUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: study_access_topicCreateManyUsersInputEnvelope
    set?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    disconnect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    delete?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    connect?: study_access_topicWhereUniqueInput | study_access_topicWhereUniqueInput[]
    update?: study_access_topicUpdateWithWhereUniqueWithoutUsersInput | study_access_topicUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: study_access_topicUpdateManyWithWhereWithoutUsersInput | study_access_topicUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: study_access_topicScalarWhereInput | study_access_topicScalarWhereInput[]
  }

  export type transaction_historyUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<transaction_historyCreateWithoutUsersInput, transaction_historyUncheckedCreateWithoutUsersInput> | transaction_historyCreateWithoutUsersInput[] | transaction_historyUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transaction_historyCreateOrConnectWithoutUsersInput | transaction_historyCreateOrConnectWithoutUsersInput[]
    upsert?: transaction_historyUpsertWithWhereUniqueWithoutUsersInput | transaction_historyUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: transaction_historyCreateManyUsersInputEnvelope
    set?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    disconnect?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    delete?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    connect?: transaction_historyWhereUniqueInput | transaction_historyWhereUniqueInput[]
    update?: transaction_historyUpdateWithWhereUniqueWithoutUsersInput | transaction_historyUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: transaction_historyUpdateManyWithWhereWithoutUsersInput | transaction_historyUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: transaction_historyScalarWhereInput | transaction_historyScalarWhereInput[]
  }

  export type user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_abuse_reportsCreateWithoutUsersInput, user_abuse_reportsUncheckedCreateWithoutUsersInput> | user_abuse_reportsCreateWithoutUsersInput[] | user_abuse_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_abuse_reportsCreateOrConnectWithoutUsersInput | user_abuse_reportsCreateOrConnectWithoutUsersInput[]
    upsert?: user_abuse_reportsUpsertWithWhereUniqueWithoutUsersInput | user_abuse_reportsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_abuse_reportsCreateManyUsersInputEnvelope
    set?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    disconnect?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    delete?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    connect?: user_abuse_reportsWhereUniqueInput | user_abuse_reportsWhereUniqueInput[]
    update?: user_abuse_reportsUpdateWithWhereUniqueWithoutUsersInput | user_abuse_reportsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_abuse_reportsUpdateManyWithWhereWithoutUsersInput | user_abuse_reportsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_abuse_reportsScalarWhereInput | user_abuse_reportsScalarWhereInput[]
  }

  export type user_coursesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_coursesCreateWithoutUsersInput, user_coursesUncheckedCreateWithoutUsersInput> | user_coursesCreateWithoutUsersInput[] | user_coursesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_coursesCreateOrConnectWithoutUsersInput | user_coursesCreateOrConnectWithoutUsersInput[]
    upsert?: user_coursesUpsertWithWhereUniqueWithoutUsersInput | user_coursesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_coursesCreateManyUsersInputEnvelope
    set?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    disconnect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    delete?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    connect?: user_coursesWhereUniqueInput | user_coursesWhereUniqueInput[]
    update?: user_coursesUpdateWithWhereUniqueWithoutUsersInput | user_coursesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_coursesUpdateManyWithWhereWithoutUsersInput | user_coursesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_coursesScalarWhereInput | user_coursesScalarWhereInput[]
  }

  export type user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_error_reportsCreateWithoutUsersInput, user_error_reportsUncheckedCreateWithoutUsersInput> | user_error_reportsCreateWithoutUsersInput[] | user_error_reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_error_reportsCreateOrConnectWithoutUsersInput | user_error_reportsCreateOrConnectWithoutUsersInput[]
    upsert?: user_error_reportsUpsertWithWhereUniqueWithoutUsersInput | user_error_reportsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_error_reportsCreateManyUsersInputEnvelope
    set?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    disconnect?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    delete?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    connect?: user_error_reportsWhereUniqueInput | user_error_reportsWhereUniqueInput[]
    update?: user_error_reportsUpdateWithWhereUniqueWithoutUsersInput | user_error_reportsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_error_reportsUpdateManyWithWhereWithoutUsersInput | user_error_reportsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_error_reportsScalarWhereInput | user_error_reportsScalarWhereInput[]
  }

  export type user_packagesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_packagesCreateWithoutUsersInput, user_packagesUncheckedCreateWithoutUsersInput> | user_packagesCreateWithoutUsersInput[] | user_packagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_packagesCreateOrConnectWithoutUsersInput | user_packagesCreateOrConnectWithoutUsersInput[]
    upsert?: user_packagesUpsertWithWhereUniqueWithoutUsersInput | user_packagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_packagesCreateManyUsersInputEnvelope
    set?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    disconnect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    delete?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    connect?: user_packagesWhereUniqueInput | user_packagesWhereUniqueInput[]
    update?: user_packagesUpdateWithWhereUniqueWithoutUsersInput | user_packagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_packagesUpdateManyWithWhereWithoutUsersInput | user_packagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_packagesScalarWhereInput | user_packagesScalarWhereInput[]
  }

  export type user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput[]
    upsert?: user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInputEnvelope
    set?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    disconnect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    delete?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    update?: user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput[]
    updateMany?: user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_changed_byTousersInput | user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_changed_byTousersInput[]
    deleteMany?: user_profile_historyScalarWhereInput | user_profile_historyScalarWhereInput[]
  }

  export type user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput = {
    create?: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput> | user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput[] | user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput[]
    connectOrCreate?: user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput[]
    upsert?: user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput[]
    createMany?: user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInputEnvelope
    set?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    disconnect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    delete?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    connect?: user_profile_historyWhereUniqueInput | user_profile_historyWhereUniqueInput[]
    update?: user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput[]
    updateMany?: user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_user_idTousersInput | user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_user_idTousersInput[]
    deleteMany?: user_profile_historyScalarWhereInput | user_profile_historyScalarWhereInput[]
  }

  export type user_progressUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_progressCreateWithoutUsersInput, user_progressUncheckedCreateWithoutUsersInput> | user_progressCreateWithoutUsersInput[] | user_progressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutUsersInput | user_progressCreateOrConnectWithoutUsersInput[]
    upsert?: user_progressUpsertWithWhereUniqueWithoutUsersInput | user_progressUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_progressCreateManyUsersInputEnvelope
    set?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    disconnect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    delete?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    update?: user_progressUpdateWithWhereUniqueWithoutUsersInput | user_progressUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_progressUpdateManyWithWhereWithoutUsersInput | user_progressUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_progressScalarWhereInput | user_progressScalarWhereInput[]
  }

  export type user_progressCreateNestedManyWithoutWordsInput = {
    create?: XOR<user_progressCreateWithoutWordsInput, user_progressUncheckedCreateWithoutWordsInput> | user_progressCreateWithoutWordsInput[] | user_progressUncheckedCreateWithoutWordsInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutWordsInput | user_progressCreateOrConnectWithoutWordsInput[]
    createMany?: user_progressCreateManyWordsInputEnvelope
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
  }

  export type coursesCreateNestedOneWithoutWordsInput = {
    create?: XOR<coursesCreateWithoutWordsInput, coursesUncheckedCreateWithoutWordsInput>
    connectOrCreate?: coursesCreateOrConnectWithoutWordsInput
    connect?: coursesWhereUniqueInput
  }

  export type user_progressUncheckedCreateNestedManyWithoutWordsInput = {
    create?: XOR<user_progressCreateWithoutWordsInput, user_progressUncheckedCreateWithoutWordsInput> | user_progressCreateWithoutWordsInput[] | user_progressUncheckedCreateWithoutWordsInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutWordsInput | user_progressCreateOrConnectWithoutWordsInput[]
    createMany?: user_progressCreateManyWordsInputEnvelope
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
  }

  export type user_progressUpdateManyWithoutWordsNestedInput = {
    create?: XOR<user_progressCreateWithoutWordsInput, user_progressUncheckedCreateWithoutWordsInput> | user_progressCreateWithoutWordsInput[] | user_progressUncheckedCreateWithoutWordsInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutWordsInput | user_progressCreateOrConnectWithoutWordsInput[]
    upsert?: user_progressUpsertWithWhereUniqueWithoutWordsInput | user_progressUpsertWithWhereUniqueWithoutWordsInput[]
    createMany?: user_progressCreateManyWordsInputEnvelope
    set?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    disconnect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    delete?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    update?: user_progressUpdateWithWhereUniqueWithoutWordsInput | user_progressUpdateWithWhereUniqueWithoutWordsInput[]
    updateMany?: user_progressUpdateManyWithWhereWithoutWordsInput | user_progressUpdateManyWithWhereWithoutWordsInput[]
    deleteMany?: user_progressScalarWhereInput | user_progressScalarWhereInput[]
  }

  export type coursesUpdateOneWithoutWordsNestedInput = {
    create?: XOR<coursesCreateWithoutWordsInput, coursesUncheckedCreateWithoutWordsInput>
    connectOrCreate?: coursesCreateOrConnectWithoutWordsInput
    upsert?: coursesUpsertWithoutWordsInput
    disconnect?: coursesWhereInput | boolean
    delete?: coursesWhereInput | boolean
    connect?: coursesWhereUniqueInput
    update?: XOR<XOR<coursesUpdateToOneWithWhereWithoutWordsInput, coursesUpdateWithoutWordsInput>, coursesUncheckedUpdateWithoutWordsInput>
  }

  export type user_progressUncheckedUpdateManyWithoutWordsNestedInput = {
    create?: XOR<user_progressCreateWithoutWordsInput, user_progressUncheckedCreateWithoutWordsInput> | user_progressCreateWithoutWordsInput[] | user_progressUncheckedCreateWithoutWordsInput[]
    connectOrCreate?: user_progressCreateOrConnectWithoutWordsInput | user_progressCreateOrConnectWithoutWordsInput[]
    upsert?: user_progressUpsertWithWhereUniqueWithoutWordsInput | user_progressUpsertWithWhereUniqueWithoutWordsInput[]
    createMany?: user_progressCreateManyWordsInputEnvelope
    set?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    disconnect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    delete?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    connect?: user_progressWhereUniqueInput | user_progressWhereUniqueInput[]
    update?: user_progressUpdateWithWhereUniqueWithoutWordsInput | user_progressUpdateWithWhereUniqueWithoutWordsInput[]
    updateMany?: user_progressUpdateManyWithWhereWithoutWordsInput | user_progressUpdateManyWithWhereWithoutWordsInput[]
    deleteMany?: user_progressScalarWhereInput | user_progressScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type user_abuse_reportsCreateWithoutAbuse_report_feedbacksInput = {
    id?: string
    content: string
    created_date?: Date | string
    users: usersCreateNestedOneWithoutUser_abuse_reportsInput
  }

  export type user_abuse_reportsUncheckedCreateWithoutAbuse_report_feedbacksInput = {
    id?: string
    user_id: string
    content: string
    created_date?: Date | string
  }

  export type user_abuse_reportsCreateOrConnectWithoutAbuse_report_feedbacksInput = {
    where: user_abuse_reportsWhereUniqueInput
    create: XOR<user_abuse_reportsCreateWithoutAbuse_report_feedbacksInput, user_abuse_reportsUncheckedCreateWithoutAbuse_report_feedbacksInput>
  }

  export type usersCreateWithoutAbuse_report_feedbacksInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutAbuse_report_feedbacksInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutAbuse_report_feedbacksInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAbuse_report_feedbacksInput, usersUncheckedCreateWithoutAbuse_report_feedbacksInput>
  }

  export type user_abuse_reportsUpsertWithoutAbuse_report_feedbacksInput = {
    update: XOR<user_abuse_reportsUpdateWithoutAbuse_report_feedbacksInput, user_abuse_reportsUncheckedUpdateWithoutAbuse_report_feedbacksInput>
    create: XOR<user_abuse_reportsCreateWithoutAbuse_report_feedbacksInput, user_abuse_reportsUncheckedCreateWithoutAbuse_report_feedbacksInput>
    where?: user_abuse_reportsWhereInput
  }

  export type user_abuse_reportsUpdateToOneWithWhereWithoutAbuse_report_feedbacksInput = {
    where?: user_abuse_reportsWhereInput
    data: XOR<user_abuse_reportsUpdateWithoutAbuse_report_feedbacksInput, user_abuse_reportsUncheckedUpdateWithoutAbuse_report_feedbacksInput>
  }

  export type user_abuse_reportsUpdateWithoutAbuse_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUser_abuse_reportsNestedInput
  }

  export type user_abuse_reportsUncheckedUpdateWithoutAbuse_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUpsertWithoutAbuse_report_feedbacksInput = {
    update: XOR<usersUpdateWithoutAbuse_report_feedbacksInput, usersUncheckedUpdateWithoutAbuse_report_feedbacksInput>
    create: XOR<usersCreateWithoutAbuse_report_feedbacksInput, usersUncheckedCreateWithoutAbuse_report_feedbacksInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAbuse_report_feedbacksInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAbuse_report_feedbacksInput, usersUncheckedUpdateWithoutAbuse_report_feedbacksInput>
  }

  export type usersUpdateWithoutAbuse_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutAbuse_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutAttendanceInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutAttendanceInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutAttendanceInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAttendanceInput, usersUncheckedCreateWithoutAttendanceInput>
  }

  export type usersUpsertWithoutAttendanceInput = {
    update: XOR<usersUpdateWithoutAttendanceInput, usersUncheckedUpdateWithoutAttendanceInput>
    create: XOR<usersCreateWithoutAttendanceInput, usersUncheckedCreateWithoutAttendanceInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAttendanceInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAttendanceInput, usersUncheckedUpdateWithoutAttendanceInput>
  }

  export type usersUpdateWithoutAttendanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutAttendanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutCoin_transactionInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCoin_transactionInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCoin_transactionInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCoin_transactionInput, usersUncheckedCreateWithoutCoin_transactionInput>
  }

  export type usersUpsertWithoutCoin_transactionInput = {
    update: XOR<usersUpdateWithoutCoin_transactionInput, usersUncheckedUpdateWithoutCoin_transactionInput>
    create: XOR<usersCreateWithoutCoin_transactionInput, usersUncheckedCreateWithoutCoin_transactionInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCoin_transactionInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCoin_transactionInput, usersUncheckedUpdateWithoutCoin_transactionInput>
  }

  export type usersUpdateWithoutCoin_transactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCoin_transactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type postsCreateWithoutCommentsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments_group?: comments_groupCreateNestedManyWithoutPostsInput
    users: usersCreateNestedOneWithoutPostsInput
    react_posts?: react_postsCreateNestedManyWithoutPostsInput
    shared_post?: shared_postCreateNestedManyWithoutPostsInput
  }

  export type postsUncheckedCreateWithoutCommentsInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutPostsInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutPostsInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutPostsInput
  }

  export type postsCreateOrConnectWithoutCommentsInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutCommentsInput, postsUncheckedCreateWithoutCommentsInput>
  }

  export type usersCreateWithoutCommentsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCommentsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCommentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCommentsInput, usersUncheckedCreateWithoutCommentsInput>
  }

  export type shared_postCreateWithoutCommentsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    shared_post?: shared_postCreateNestedOneWithoutOther_shared_postInput
    other_shared_post?: shared_postCreateNestedManyWithoutShared_postInput
    posts?: postsCreateNestedOneWithoutShared_postInput
    users: usersCreateNestedOneWithoutShared_postInput
  }

  export type shared_postUncheckedCreateWithoutCommentsInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
    other_shared_post?: shared_postUncheckedCreateNestedManyWithoutShared_postInput
  }

  export type shared_postCreateOrConnectWithoutCommentsInput = {
    where: shared_postWhereUniqueInput
    create: XOR<shared_postCreateWithoutCommentsInput, shared_postUncheckedCreateWithoutCommentsInput>
  }

  export type react_commentsCreateWithoutCommentsInput = {
    id?: string
    created_date?: Date | string
    users: usersCreateNestedOneWithoutReact_commentsInput
  }

  export type react_commentsUncheckedCreateWithoutCommentsInput = {
    id?: string
    user_id: string
    created_date?: Date | string
  }

  export type react_commentsCreateOrConnectWithoutCommentsInput = {
    where: react_commentsWhereUniqueInput
    create: XOR<react_commentsCreateWithoutCommentsInput, react_commentsUncheckedCreateWithoutCommentsInput>
  }

  export type react_commentsCreateManyCommentsInputEnvelope = {
    data: react_commentsCreateManyCommentsInput | react_commentsCreateManyCommentsInput[]
    skipDuplicates?: boolean
  }

  export type postsUpsertWithoutCommentsInput = {
    update: XOR<postsUpdateWithoutCommentsInput, postsUncheckedUpdateWithoutCommentsInput>
    create: XOR<postsCreateWithoutCommentsInput, postsUncheckedCreateWithoutCommentsInput>
    where?: postsWhereInput
  }

  export type postsUpdateToOneWithWhereWithoutCommentsInput = {
    where?: postsWhereInput
    data: XOR<postsUpdateWithoutCommentsInput, postsUncheckedUpdateWithoutCommentsInput>
  }

  export type postsUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUpdateManyWithoutPostsNestedInput
    users?: usersUpdateOneRequiredWithoutPostsNestedInput
    react_posts?: react_postsUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUncheckedUpdateManyWithoutPostsNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutPostsNestedInput
  }

  export type usersUpsertWithoutCommentsInput = {
    update: XOR<usersUpdateWithoutCommentsInput, usersUncheckedUpdateWithoutCommentsInput>
    create: XOR<usersCreateWithoutCommentsInput, usersUncheckedCreateWithoutCommentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCommentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCommentsInput, usersUncheckedUpdateWithoutCommentsInput>
  }

  export type usersUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type shared_postUpsertWithoutCommentsInput = {
    update: XOR<shared_postUpdateWithoutCommentsInput, shared_postUncheckedUpdateWithoutCommentsInput>
    create: XOR<shared_postCreateWithoutCommentsInput, shared_postUncheckedCreateWithoutCommentsInput>
    where?: shared_postWhereInput
  }

  export type shared_postUpdateToOneWithWhereWithoutCommentsInput = {
    where?: shared_postWhereInput
    data: XOR<shared_postUpdateWithoutCommentsInput, shared_postUncheckedUpdateWithoutCommentsInput>
  }

  export type shared_postUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post?: shared_postUpdateOneWithoutOther_shared_postNestedInput
    other_shared_post?: shared_postUpdateManyWithoutShared_postNestedInput
    posts?: postsUpdateOneWithoutShared_postNestedInput
    users?: usersUpdateOneRequiredWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    other_shared_post?: shared_postUncheckedUpdateManyWithoutShared_postNestedInput
  }

  export type react_commentsUpsertWithWhereUniqueWithoutCommentsInput = {
    where: react_commentsWhereUniqueInput
    update: XOR<react_commentsUpdateWithoutCommentsInput, react_commentsUncheckedUpdateWithoutCommentsInput>
    create: XOR<react_commentsCreateWithoutCommentsInput, react_commentsUncheckedCreateWithoutCommentsInput>
  }

  export type react_commentsUpdateWithWhereUniqueWithoutCommentsInput = {
    where: react_commentsWhereUniqueInput
    data: XOR<react_commentsUpdateWithoutCommentsInput, react_commentsUncheckedUpdateWithoutCommentsInput>
  }

  export type react_commentsUpdateManyWithWhereWithoutCommentsInput = {
    where: react_commentsScalarWhereInput
    data: XOR<react_commentsUpdateManyMutationInput, react_commentsUncheckedUpdateManyWithoutCommentsInput>
  }

  export type react_commentsScalarWhereInput = {
    AND?: react_commentsScalarWhereInput | react_commentsScalarWhereInput[]
    OR?: react_commentsScalarWhereInput[]
    NOT?: react_commentsScalarWhereInput | react_commentsScalarWhereInput[]
    id?: UuidFilter<"react_comments"> | string
    comment_id?: UuidFilter<"react_comments"> | string
    user_id?: UuidFilter<"react_comments"> | string
    created_date?: DateTimeFilter<"react_comments"> | Date | string
  }

  export type groupsCreateWithoutComments_groupInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsCreateNestedManyWithoutGroupsInput
    users: usersCreateNestedOneWithoutGroupsInput
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutComments_groupInput = {
    id?: string
    name: string
    image_url?: string | null
    created_by: string
    created_date?: Date | string | null
    count_member?: number | null
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutGroupsInput
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutComments_groupInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutComments_groupInput, groupsUncheckedCreateWithoutComments_groupInput>
  }

  export type postsCreateWithoutComments_groupInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsCreateNestedManyWithoutPostsInput
    users: usersCreateNestedOneWithoutPostsInput
    react_posts?: react_postsCreateNestedManyWithoutPostsInput
    shared_post?: shared_postCreateNestedManyWithoutPostsInput
  }

  export type postsUncheckedCreateWithoutComments_groupInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutPostsInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutPostsInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutPostsInput
  }

  export type postsCreateOrConnectWithoutComments_groupInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutComments_groupInput, postsUncheckedCreateWithoutComments_groupInput>
  }

  export type usersCreateWithoutComments_groupInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutComments_groupInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutComments_groupInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutComments_groupInput, usersUncheckedCreateWithoutComments_groupInput>
  }

  export type groupsUpsertWithoutComments_groupInput = {
    update: XOR<groupsUpdateWithoutComments_groupInput, groupsUncheckedUpdateWithoutComments_groupInput>
    create: XOR<groupsCreateWithoutComments_groupInput, groupsUncheckedCreateWithoutComments_groupInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutComments_groupInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutComments_groupInput, groupsUncheckedUpdateWithoutComments_groupInput>
  }

  export type groupsUpdateWithoutComments_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUpdateManyWithoutGroupsNestedInput
    users?: usersUpdateOneRequiredWithoutGroupsNestedInput
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutComments_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutGroupsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type postsUpsertWithoutComments_groupInput = {
    update: XOR<postsUpdateWithoutComments_groupInput, postsUncheckedUpdateWithoutComments_groupInput>
    create: XOR<postsCreateWithoutComments_groupInput, postsUncheckedCreateWithoutComments_groupInput>
    where?: postsWhereInput
  }

  export type postsUpdateToOneWithWhereWithoutComments_groupInput = {
    where?: postsWhereInput
    data: XOR<postsUpdateWithoutComments_groupInput, postsUncheckedUpdateWithoutComments_groupInput>
  }

  export type postsUpdateWithoutComments_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutPostsNestedInput
    users?: usersUpdateOneRequiredWithoutPostsNestedInput
    react_posts?: react_postsUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateWithoutComments_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutPostsNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutPostsNestedInput
  }

  export type usersUpsertWithoutComments_groupInput = {
    update: XOR<usersUpdateWithoutComments_groupInput, usersUncheckedUpdateWithoutComments_groupInput>
    create: XOR<usersCreateWithoutComments_groupInput, usersUncheckedCreateWithoutComments_groupInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutComments_groupInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutComments_groupInput, usersUncheckedUpdateWithoutComments_groupInput>
  }

  export type usersUpdateWithoutComments_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutComments_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type topicsCreateWithoutCoursesInput = {
    id?: string
    name: string
    description?: string | null
    study_access_topic?: study_access_topicCreateNestedManyWithoutTopicsInput
  }

  export type topicsUncheckedCreateWithoutCoursesInput = {
    id?: string
    name: string
    description?: string | null
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutTopicsInput
  }

  export type topicsCreateOrConnectWithoutCoursesInput = {
    where: topicsWhereUniqueInput
    create: XOR<topicsCreateWithoutCoursesInput, topicsUncheckedCreateWithoutCoursesInput>
  }

  export type user_coursesCreateWithoutCoursesInput = {
    id?: string
    purchase_date?: Date | string | null
    users: usersCreateNestedOneWithoutUser_coursesInput
  }

  export type user_coursesUncheckedCreateWithoutCoursesInput = {
    id?: string
    user_id: string
    purchase_date?: Date | string | null
  }

  export type user_coursesCreateOrConnectWithoutCoursesInput = {
    where: user_coursesWhereUniqueInput
    create: XOR<user_coursesCreateWithoutCoursesInput, user_coursesUncheckedCreateWithoutCoursesInput>
  }

  export type user_coursesCreateManyCoursesInputEnvelope = {
    data: user_coursesCreateManyCoursesInput | user_coursesCreateManyCoursesInput[]
    skipDuplicates?: boolean
  }

  export type wordsCreateWithoutCoursesInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    user_progress?: user_progressCreateNestedManyWithoutWordsInput
  }

  export type wordsUncheckedCreateWithoutCoursesInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    user_progress?: user_progressUncheckedCreateNestedManyWithoutWordsInput
  }

  export type wordsCreateOrConnectWithoutCoursesInput = {
    where: wordsWhereUniqueInput
    create: XOR<wordsCreateWithoutCoursesInput, wordsUncheckedCreateWithoutCoursesInput>
  }

  export type wordsCreateManyCoursesInputEnvelope = {
    data: wordsCreateManyCoursesInput | wordsCreateManyCoursesInput[]
    skipDuplicates?: boolean
  }

  export type topicsUpsertWithoutCoursesInput = {
    update: XOR<topicsUpdateWithoutCoursesInput, topicsUncheckedUpdateWithoutCoursesInput>
    create: XOR<topicsCreateWithoutCoursesInput, topicsUncheckedCreateWithoutCoursesInput>
    where?: topicsWhereInput
  }

  export type topicsUpdateToOneWithWhereWithoutCoursesInput = {
    where?: topicsWhereInput
    data: XOR<topicsUpdateWithoutCoursesInput, topicsUncheckedUpdateWithoutCoursesInput>
  }

  export type topicsUpdateWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    study_access_topic?: study_access_topicUpdateManyWithoutTopicsNestedInput
  }

  export type topicsUncheckedUpdateWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutTopicsNestedInput
  }

  export type user_coursesUpsertWithWhereUniqueWithoutCoursesInput = {
    where: user_coursesWhereUniqueInput
    update: XOR<user_coursesUpdateWithoutCoursesInput, user_coursesUncheckedUpdateWithoutCoursesInput>
    create: XOR<user_coursesCreateWithoutCoursesInput, user_coursesUncheckedCreateWithoutCoursesInput>
  }

  export type user_coursesUpdateWithWhereUniqueWithoutCoursesInput = {
    where: user_coursesWhereUniqueInput
    data: XOR<user_coursesUpdateWithoutCoursesInput, user_coursesUncheckedUpdateWithoutCoursesInput>
  }

  export type user_coursesUpdateManyWithWhereWithoutCoursesInput = {
    where: user_coursesScalarWhereInput
    data: XOR<user_coursesUpdateManyMutationInput, user_coursesUncheckedUpdateManyWithoutCoursesInput>
  }

  export type user_coursesScalarWhereInput = {
    AND?: user_coursesScalarWhereInput | user_coursesScalarWhereInput[]
    OR?: user_coursesScalarWhereInput[]
    NOT?: user_coursesScalarWhereInput | user_coursesScalarWhereInput[]
    id?: UuidFilter<"user_courses"> | string
    user_id?: UuidFilter<"user_courses"> | string
    course_id?: UuidFilter<"user_courses"> | string
    purchase_date?: DateTimeNullableFilter<"user_courses"> | Date | string | null
  }

  export type wordsUpsertWithWhereUniqueWithoutCoursesInput = {
    where: wordsWhereUniqueInput
    update: XOR<wordsUpdateWithoutCoursesInput, wordsUncheckedUpdateWithoutCoursesInput>
    create: XOR<wordsCreateWithoutCoursesInput, wordsUncheckedCreateWithoutCoursesInput>
  }

  export type wordsUpdateWithWhereUniqueWithoutCoursesInput = {
    where: wordsWhereUniqueInput
    data: XOR<wordsUpdateWithoutCoursesInput, wordsUncheckedUpdateWithoutCoursesInput>
  }

  export type wordsUpdateManyWithWhereWithoutCoursesInput = {
    where: wordsScalarWhereInput
    data: XOR<wordsUpdateManyMutationInput, wordsUncheckedUpdateManyWithoutCoursesInput>
  }

  export type wordsScalarWhereInput = {
    AND?: wordsScalarWhereInput | wordsScalarWhereInput[]
    OR?: wordsScalarWhereInput[]
    NOT?: wordsScalarWhereInput | wordsScalarWhereInput[]
    id?: UuidFilter<"words"> | string
    englishname?: StringFilter<"words"> | string
    vietnamesename?: StringFilter<"words"> | string
    type?: StringNullableFilter<"words"> | string | null
    examplesentence?: StringNullableFilter<"words"> | string | null
    imageurl?: StringNullableFilter<"words"> | string | null
    transcription?: StringNullableFilter<"words"> | string | null
    course_id?: UuidNullableFilter<"words"> | string | null
  }

  export type usersCreateWithoutError_report_feedbacksInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutError_report_feedbacksInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutError_report_feedbacksInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutError_report_feedbacksInput, usersUncheckedCreateWithoutError_report_feedbacksInput>
  }

  export type user_error_reportsCreateWithoutError_report_feedbacksInput = {
    id?: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
    users: usersCreateNestedOneWithoutUser_error_reportsInput
  }

  export type user_error_reportsUncheckedCreateWithoutError_report_feedbacksInput = {
    id?: string
    user_id: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
  }

  export type user_error_reportsCreateOrConnectWithoutError_report_feedbacksInput = {
    where: user_error_reportsWhereUniqueInput
    create: XOR<user_error_reportsCreateWithoutError_report_feedbacksInput, user_error_reportsUncheckedCreateWithoutError_report_feedbacksInput>
  }

  export type usersUpsertWithoutError_report_feedbacksInput = {
    update: XOR<usersUpdateWithoutError_report_feedbacksInput, usersUncheckedUpdateWithoutError_report_feedbacksInput>
    create: XOR<usersCreateWithoutError_report_feedbacksInput, usersUncheckedCreateWithoutError_report_feedbacksInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutError_report_feedbacksInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutError_report_feedbacksInput, usersUncheckedUpdateWithoutError_report_feedbacksInput>
  }

  export type usersUpdateWithoutError_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutError_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type user_error_reportsUpsertWithoutError_report_feedbacksInput = {
    update: XOR<user_error_reportsUpdateWithoutError_report_feedbacksInput, user_error_reportsUncheckedUpdateWithoutError_report_feedbacksInput>
    create: XOR<user_error_reportsCreateWithoutError_report_feedbacksInput, user_error_reportsUncheckedCreateWithoutError_report_feedbacksInput>
    where?: user_error_reportsWhereInput
  }

  export type user_error_reportsUpdateToOneWithWhereWithoutError_report_feedbacksInput = {
    where?: user_error_reportsWhereInput
    data: XOR<user_error_reportsUpdateWithoutError_report_feedbacksInput, user_error_reportsUncheckedUpdateWithoutError_report_feedbacksInput>
  }

  export type user_error_reportsUpdateWithoutError_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutUser_error_reportsNestedInput
  }

  export type user_error_reportsUncheckedUpdateWithoutError_report_feedbacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type groupsCreateWithoutGroup_membersInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsCreateNestedManyWithoutGroupsInput
    users: usersCreateNestedOneWithoutGroupsInput
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutGroup_membersInput = {
    id?: string
    name: string
    image_url?: string | null
    created_by: string
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutGroupsInput
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutGroup_membersInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
  }

  export type usersCreateWithoutGroup_membersInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutGroup_membersInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutGroup_membersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
  }

  export type groupsUpsertWithoutGroup_membersInput = {
    update: XOR<groupsUpdateWithoutGroup_membersInput, groupsUncheckedUpdateWithoutGroup_membersInput>
    create: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutGroup_membersInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutGroup_membersInput, groupsUncheckedUpdateWithoutGroup_membersInput>
  }

  export type groupsUpdateWithoutGroup_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUpdateManyWithoutGroupsNestedInput
    users?: usersUpdateOneRequiredWithoutGroupsNestedInput
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutGroup_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUncheckedUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutGroupsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type usersUpsertWithoutGroup_membersInput = {
    update: XOR<usersUpdateWithoutGroup_membersInput, usersUncheckedUpdateWithoutGroup_membersInput>
    create: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutGroup_membersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutGroup_membersInput, usersUncheckedUpdateWithoutGroup_membersInput>
  }

  export type usersUpdateWithoutGroup_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutGroup_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type groupsCreateWithoutGroup_postsInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupCreateNestedManyWithoutGroupsInput
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
    users: usersCreateNestedOneWithoutGroupsInput
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutGroup_postsInput = {
    id?: string
    name: string
    image_url?: string | null
    created_by: string
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutGroupsInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutGroup_postsInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutGroup_postsInput, groupsUncheckedCreateWithoutGroup_postsInput>
  }

  export type usersCreateWithoutGroup_postsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutGroup_postsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutGroup_postsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGroup_postsInput, usersUncheckedCreateWithoutGroup_postsInput>
  }

  export type groupsUpsertWithoutGroup_postsInput = {
    update: XOR<groupsUpdateWithoutGroup_postsInput, groupsUncheckedUpdateWithoutGroup_postsInput>
    create: XOR<groupsCreateWithoutGroup_postsInput, groupsUncheckedCreateWithoutGroup_postsInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutGroup_postsInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutGroup_postsInput, groupsUncheckedUpdateWithoutGroup_postsInput>
  }

  export type groupsUpdateWithoutGroup_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
    users?: usersUpdateOneRequiredWithoutGroupsNestedInput
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutGroup_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUncheckedUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type usersUpsertWithoutGroup_postsInput = {
    update: XOR<usersUpdateWithoutGroup_postsInput, usersUncheckedUpdateWithoutGroup_postsInput>
    create: XOR<usersCreateWithoutGroup_postsInput, usersUncheckedCreateWithoutGroup_postsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutGroup_postsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutGroup_postsInput, usersUncheckedUpdateWithoutGroup_postsInput>
  }

  export type usersUpdateWithoutGroup_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutGroup_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type comments_groupCreateWithoutGroupsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
    posts: postsCreateNestedOneWithoutComments_groupInput
    users: usersCreateNestedOneWithoutComments_groupInput
  }

  export type comments_groupUncheckedCreateWithoutGroupsInput = {
    id?: string
    post_id: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type comments_groupCreateOrConnectWithoutGroupsInput = {
    where: comments_groupWhereUniqueInput
    create: XOR<comments_groupCreateWithoutGroupsInput, comments_groupUncheckedCreateWithoutGroupsInput>
  }

  export type comments_groupCreateManyGroupsInputEnvelope = {
    data: comments_groupCreateManyGroupsInput | comments_groupCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type group_membersCreateWithoutGroupsInput = {
    id?: string
    is_admin?: boolean
    joined_date?: Date | string | null
    users: usersCreateNestedOneWithoutGroup_membersInput
  }

  export type group_membersUncheckedCreateWithoutGroupsInput = {
    id?: string
    user_id: string
    is_admin?: boolean
    joined_date?: Date | string | null
  }

  export type group_membersCreateOrConnectWithoutGroupsInput = {
    where: group_membersWhereUniqueInput
    create: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput>
  }

  export type group_membersCreateManyGroupsInputEnvelope = {
    data: group_membersCreateManyGroupsInput | group_membersCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type group_postsCreateWithoutGroupsInput = {
    id?: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
    users: usersCreateNestedOneWithoutGroup_postsInput
  }

  export type group_postsUncheckedCreateWithoutGroupsInput = {
    id?: string
    user_id: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
  }

  export type group_postsCreateOrConnectWithoutGroupsInput = {
    where: group_postsWhereUniqueInput
    create: XOR<group_postsCreateWithoutGroupsInput, group_postsUncheckedCreateWithoutGroupsInput>
  }

  export type group_postsCreateManyGroupsInputEnvelope = {
    data: group_postsCreateManyGroupsInput | group_postsCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutGroupsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutGroupsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutGroupsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGroupsInput, usersUncheckedCreateWithoutGroupsInput>
  }

  export type messagesCreateWithoutGroupsInput = {
    id?: string
    created_date?: Date | string | null
    content?: string | null
    users: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutGroupsInput = {
    id?: string
    sender_id: string
    created_date?: Date | string | null
    content?: string | null
  }

  export type messagesCreateOrConnectWithoutGroupsInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput>
  }

  export type messagesCreateManyGroupsInputEnvelope = {
    data: messagesCreateManyGroupsInput | messagesCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type comments_groupUpsertWithWhereUniqueWithoutGroupsInput = {
    where: comments_groupWhereUniqueInput
    update: XOR<comments_groupUpdateWithoutGroupsInput, comments_groupUncheckedUpdateWithoutGroupsInput>
    create: XOR<comments_groupCreateWithoutGroupsInput, comments_groupUncheckedCreateWithoutGroupsInput>
  }

  export type comments_groupUpdateWithWhereUniqueWithoutGroupsInput = {
    where: comments_groupWhereUniqueInput
    data: XOR<comments_groupUpdateWithoutGroupsInput, comments_groupUncheckedUpdateWithoutGroupsInput>
  }

  export type comments_groupUpdateManyWithWhereWithoutGroupsInput = {
    where: comments_groupScalarWhereInput
    data: XOR<comments_groupUpdateManyMutationInput, comments_groupUncheckedUpdateManyWithoutGroupsInput>
  }

  export type comments_groupScalarWhereInput = {
    AND?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
    OR?: comments_groupScalarWhereInput[]
    NOT?: comments_groupScalarWhereInput | comments_groupScalarWhereInput[]
    id?: UuidFilter<"comments_group"> | string
    group_id?: UuidFilter<"comments_group"> | string
    post_id?: UuidFilter<"comments_group"> | string
    user_id?: UuidFilter<"comments_group"> | string
    react_count?: IntNullableFilter<"comments_group"> | number | null
    content?: StringNullableFilter<"comments_group"> | string | null
    created_date?: DateTimeNullableFilter<"comments_group"> | Date | string | null
    parent_comments?: UuidNullableFilter<"comments_group"> | string | null
  }

  export type group_membersUpsertWithWhereUniqueWithoutGroupsInput = {
    where: group_membersWhereUniqueInput
    update: XOR<group_membersUpdateWithoutGroupsInput, group_membersUncheckedUpdateWithoutGroupsInput>
    create: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput>
  }

  export type group_membersUpdateWithWhereUniqueWithoutGroupsInput = {
    where: group_membersWhereUniqueInput
    data: XOR<group_membersUpdateWithoutGroupsInput, group_membersUncheckedUpdateWithoutGroupsInput>
  }

  export type group_membersUpdateManyWithWhereWithoutGroupsInput = {
    where: group_membersScalarWhereInput
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyWithoutGroupsInput>
  }

  export type group_membersScalarWhereInput = {
    AND?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
    OR?: group_membersScalarWhereInput[]
    NOT?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
    id?: UuidFilter<"group_members"> | string
    user_id?: UuidFilter<"group_members"> | string
    group_id?: UuidFilter<"group_members"> | string
    is_admin?: BoolFilter<"group_members"> | boolean
    joined_date?: DateTimeNullableFilter<"group_members"> | Date | string | null
  }

  export type group_postsUpsertWithWhereUniqueWithoutGroupsInput = {
    where: group_postsWhereUniqueInput
    update: XOR<group_postsUpdateWithoutGroupsInput, group_postsUncheckedUpdateWithoutGroupsInput>
    create: XOR<group_postsCreateWithoutGroupsInput, group_postsUncheckedCreateWithoutGroupsInput>
  }

  export type group_postsUpdateWithWhereUniqueWithoutGroupsInput = {
    where: group_postsWhereUniqueInput
    data: XOR<group_postsUpdateWithoutGroupsInput, group_postsUncheckedUpdateWithoutGroupsInput>
  }

  export type group_postsUpdateManyWithWhereWithoutGroupsInput = {
    where: group_postsScalarWhereInput
    data: XOR<group_postsUpdateManyMutationInput, group_postsUncheckedUpdateManyWithoutGroupsInput>
  }

  export type group_postsScalarWhereInput = {
    AND?: group_postsScalarWhereInput | group_postsScalarWhereInput[]
    OR?: group_postsScalarWhereInput[]
    NOT?: group_postsScalarWhereInput | group_postsScalarWhereInput[]
    id?: UuidFilter<"group_posts"> | string
    user_id?: UuidFilter<"group_posts"> | string
    group_id?: UuidFilter<"group_posts"> | string
    content?: StringNullableFilter<"group_posts"> | string | null
    image_url?: StringNullableFilter<"group_posts"> | string | null
    react_count?: IntNullableFilter<"group_posts"> | number | null
    created_date?: DateTimeNullableFilter<"group_posts"> | Date | string | null
    updated_date?: DateTimeNullableFilter<"group_posts"> | Date | string | null
  }

  export type usersUpsertWithoutGroupsInput = {
    update: XOR<usersUpdateWithoutGroupsInput, usersUncheckedUpdateWithoutGroupsInput>
    create: XOR<usersCreateWithoutGroupsInput, usersUncheckedCreateWithoutGroupsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutGroupsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutGroupsInput, usersUncheckedUpdateWithoutGroupsInput>
  }

  export type usersUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type messagesUpsertWithWhereUniqueWithoutGroupsInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutGroupsInput, messagesUncheckedUpdateWithoutGroupsInput>
    create: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutGroupsInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutGroupsInput, messagesUncheckedUpdateWithoutGroupsInput>
  }

  export type messagesUpdateManyWithWhereWithoutGroupsInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutGroupsInput>
  }

  export type messagesScalarWhereInput = {
    AND?: messagesScalarWhereInput | messagesScalarWhereInput[]
    OR?: messagesScalarWhereInput[]
    NOT?: messagesScalarWhereInput | messagesScalarWhereInput[]
    id?: UuidFilter<"messages"> | string
    sender_id?: UuidFilter<"messages"> | string
    group_id?: UuidFilter<"messages"> | string
    created_date?: DateTimeNullableFilter<"messages"> | Date | string | null
    content?: StringNullableFilter<"messages"> | string | null
  }

  export type groupsCreateWithoutMessagesInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupCreateNestedManyWithoutGroupsInput
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsCreateNestedManyWithoutGroupsInput
    users: usersCreateNestedOneWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutMessagesInput = {
    id?: string
    name: string
    image_url?: string | null
    created_by: string
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutGroupsInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutMessagesInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
  }

  export type usersCreateWithoutMessagesInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMessagesInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMessagesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
  }

  export type groupsUpsertWithoutMessagesInput = {
    update: XOR<groupsUpdateWithoutMessagesInput, groupsUncheckedUpdateWithoutMessagesInput>
    create: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutMessagesInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutMessagesInput, groupsUncheckedUpdateWithoutMessagesInput>
  }

  export type groupsUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUpdateManyWithoutGroupsNestedInput
    users?: usersUpdateOneRequiredWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUncheckedUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type usersUpsertWithoutMessagesInput = {
    update: XOR<usersUpdateWithoutMessagesInput, usersUncheckedUpdateWithoutMessagesInput>
    create: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMessagesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMessagesInput, usersUncheckedUpdateWithoutMessagesInput>
  }

  export type usersUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type user_packagesCreateWithoutPackagesInput = {
    id?: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
    users: usersCreateNestedOneWithoutUser_packagesInput
  }

  export type user_packagesUncheckedCreateWithoutPackagesInput = {
    id?: string
    user_id: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
  }

  export type user_packagesCreateOrConnectWithoutPackagesInput = {
    where: user_packagesWhereUniqueInput
    create: XOR<user_packagesCreateWithoutPackagesInput, user_packagesUncheckedCreateWithoutPackagesInput>
  }

  export type user_packagesCreateManyPackagesInputEnvelope = {
    data: user_packagesCreateManyPackagesInput | user_packagesCreateManyPackagesInput[]
    skipDuplicates?: boolean
  }

  export type user_packagesUpsertWithWhereUniqueWithoutPackagesInput = {
    where: user_packagesWhereUniqueInput
    update: XOR<user_packagesUpdateWithoutPackagesInput, user_packagesUncheckedUpdateWithoutPackagesInput>
    create: XOR<user_packagesCreateWithoutPackagesInput, user_packagesUncheckedCreateWithoutPackagesInput>
  }

  export type user_packagesUpdateWithWhereUniqueWithoutPackagesInput = {
    where: user_packagesWhereUniqueInput
    data: XOR<user_packagesUpdateWithoutPackagesInput, user_packagesUncheckedUpdateWithoutPackagesInput>
  }

  export type user_packagesUpdateManyWithWhereWithoutPackagesInput = {
    where: user_packagesScalarWhereInput
    data: XOR<user_packagesUpdateManyMutationInput, user_packagesUncheckedUpdateManyWithoutPackagesInput>
  }

  export type user_packagesScalarWhereInput = {
    AND?: user_packagesScalarWhereInput | user_packagesScalarWhereInput[]
    OR?: user_packagesScalarWhereInput[]
    NOT?: user_packagesScalarWhereInput | user_packagesScalarWhereInput[]
    id?: UuidFilter<"user_packages"> | string
    user_id?: UuidFilter<"user_packages"> | string
    package_id?: UuidFilter<"user_packages"> | string
    start_date?: DateTimeNullableFilter<"user_packages"> | Date | string | null
    end_date?: DateTimeFilter<"user_packages"> | Date | string
    is_active?: BoolNullableFilter<"user_packages"> | boolean | null
  }

  export type commentsCreateWithoutPostsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    users: usersCreateNestedOneWithoutCommentsInput
    shared_post?: shared_postCreateNestedOneWithoutCommentsInput
    react_comments?: react_commentsCreateNestedManyWithoutCommentsInput
  }

  export type commentsUncheckedCreateWithoutPostsInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutCommentsInput
  }

  export type commentsCreateOrConnectWithoutPostsInput = {
    where: commentsWhereUniqueInput
    create: XOR<commentsCreateWithoutPostsInput, commentsUncheckedCreateWithoutPostsInput>
  }

  export type commentsCreateManyPostsInputEnvelope = {
    data: commentsCreateManyPostsInput | commentsCreateManyPostsInput[]
    skipDuplicates?: boolean
  }

  export type comments_groupCreateWithoutPostsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
    groups: groupsCreateNestedOneWithoutComments_groupInput
    users: usersCreateNestedOneWithoutComments_groupInput
  }

  export type comments_groupUncheckedCreateWithoutPostsInput = {
    id?: string
    group_id: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type comments_groupCreateOrConnectWithoutPostsInput = {
    where: comments_groupWhereUniqueInput
    create: XOR<comments_groupCreateWithoutPostsInput, comments_groupUncheckedCreateWithoutPostsInput>
  }

  export type comments_groupCreateManyPostsInputEnvelope = {
    data: comments_groupCreateManyPostsInput | comments_groupCreateManyPostsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutPostsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPostsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPostsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
  }

  export type react_postsCreateWithoutPostsInput = {
    id?: string
    created_date?: Date | string | null
    users: usersCreateNestedOneWithoutReact_postsInput
  }

  export type react_postsUncheckedCreateWithoutPostsInput = {
    id?: string
    user_id: string
    created_date?: Date | string | null
  }

  export type react_postsCreateOrConnectWithoutPostsInput = {
    where: react_postsWhereUniqueInput
    create: XOR<react_postsCreateWithoutPostsInput, react_postsUncheckedCreateWithoutPostsInput>
  }

  export type react_postsCreateManyPostsInputEnvelope = {
    data: react_postsCreateManyPostsInput | react_postsCreateManyPostsInput[]
    skipDuplicates?: boolean
  }

  export type shared_postCreateWithoutPostsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    comments?: commentsCreateNestedManyWithoutShared_postInput
    shared_post?: shared_postCreateNestedOneWithoutOther_shared_postInput
    other_shared_post?: shared_postCreateNestedManyWithoutShared_postInput
    users: usersCreateNestedOneWithoutShared_postInput
  }

  export type shared_postUncheckedCreateWithoutPostsInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutShared_postInput
    other_shared_post?: shared_postUncheckedCreateNestedManyWithoutShared_postInput
  }

  export type shared_postCreateOrConnectWithoutPostsInput = {
    where: shared_postWhereUniqueInput
    create: XOR<shared_postCreateWithoutPostsInput, shared_postUncheckedCreateWithoutPostsInput>
  }

  export type shared_postCreateManyPostsInputEnvelope = {
    data: shared_postCreateManyPostsInput | shared_postCreateManyPostsInput[]
    skipDuplicates?: boolean
  }

  export type commentsUpsertWithWhereUniqueWithoutPostsInput = {
    where: commentsWhereUniqueInput
    update: XOR<commentsUpdateWithoutPostsInput, commentsUncheckedUpdateWithoutPostsInput>
    create: XOR<commentsCreateWithoutPostsInput, commentsUncheckedCreateWithoutPostsInput>
  }

  export type commentsUpdateWithWhereUniqueWithoutPostsInput = {
    where: commentsWhereUniqueInput
    data: XOR<commentsUpdateWithoutPostsInput, commentsUncheckedUpdateWithoutPostsInput>
  }

  export type commentsUpdateManyWithWhereWithoutPostsInput = {
    where: commentsScalarWhereInput
    data: XOR<commentsUpdateManyMutationInput, commentsUncheckedUpdateManyWithoutPostsInput>
  }

  export type commentsScalarWhereInput = {
    AND?: commentsScalarWhereInput | commentsScalarWhereInput[]
    OR?: commentsScalarWhereInput[]
    NOT?: commentsScalarWhereInput | commentsScalarWhereInput[]
    id?: UuidFilter<"comments"> | string
    post_id?: UuidNullableFilter<"comments"> | string | null
    user_id?: UuidFilter<"comments"> | string
    react_count?: IntNullableFilter<"comments"> | number | null
    content?: StringNullableFilter<"comments"> | string | null
    created_date?: DateTimeNullableFilter<"comments"> | Date | string | null
    parent_comment?: UuidNullableFilter<"comments"> | string | null
    root_comment?: UuidNullableFilter<"comments"> | string | null
    shared_post_id?: UuidNullableFilter<"comments"> | string | null
  }

  export type comments_groupUpsertWithWhereUniqueWithoutPostsInput = {
    where: comments_groupWhereUniqueInput
    update: XOR<comments_groupUpdateWithoutPostsInput, comments_groupUncheckedUpdateWithoutPostsInput>
    create: XOR<comments_groupCreateWithoutPostsInput, comments_groupUncheckedCreateWithoutPostsInput>
  }

  export type comments_groupUpdateWithWhereUniqueWithoutPostsInput = {
    where: comments_groupWhereUniqueInput
    data: XOR<comments_groupUpdateWithoutPostsInput, comments_groupUncheckedUpdateWithoutPostsInput>
  }

  export type comments_groupUpdateManyWithWhereWithoutPostsInput = {
    where: comments_groupScalarWhereInput
    data: XOR<comments_groupUpdateManyMutationInput, comments_groupUncheckedUpdateManyWithoutPostsInput>
  }

  export type usersUpsertWithoutPostsInput = {
    update: XOR<usersUpdateWithoutPostsInput, usersUncheckedUpdateWithoutPostsInput>
    create: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPostsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPostsInput, usersUncheckedUpdateWithoutPostsInput>
  }

  export type usersUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type react_postsUpsertWithWhereUniqueWithoutPostsInput = {
    where: react_postsWhereUniqueInput
    update: XOR<react_postsUpdateWithoutPostsInput, react_postsUncheckedUpdateWithoutPostsInput>
    create: XOR<react_postsCreateWithoutPostsInput, react_postsUncheckedCreateWithoutPostsInput>
  }

  export type react_postsUpdateWithWhereUniqueWithoutPostsInput = {
    where: react_postsWhereUniqueInput
    data: XOR<react_postsUpdateWithoutPostsInput, react_postsUncheckedUpdateWithoutPostsInput>
  }

  export type react_postsUpdateManyWithWhereWithoutPostsInput = {
    where: react_postsScalarWhereInput
    data: XOR<react_postsUpdateManyMutationInput, react_postsUncheckedUpdateManyWithoutPostsInput>
  }

  export type react_postsScalarWhereInput = {
    AND?: react_postsScalarWhereInput | react_postsScalarWhereInput[]
    OR?: react_postsScalarWhereInput[]
    NOT?: react_postsScalarWhereInput | react_postsScalarWhereInput[]
    id?: UuidFilter<"react_posts"> | string
    post_id?: UuidFilter<"react_posts"> | string
    user_id?: UuidFilter<"react_posts"> | string
    created_date?: DateTimeNullableFilter<"react_posts"> | Date | string | null
  }

  export type shared_postUpsertWithWhereUniqueWithoutPostsInput = {
    where: shared_postWhereUniqueInput
    update: XOR<shared_postUpdateWithoutPostsInput, shared_postUncheckedUpdateWithoutPostsInput>
    create: XOR<shared_postCreateWithoutPostsInput, shared_postUncheckedCreateWithoutPostsInput>
  }

  export type shared_postUpdateWithWhereUniqueWithoutPostsInput = {
    where: shared_postWhereUniqueInput
    data: XOR<shared_postUpdateWithoutPostsInput, shared_postUncheckedUpdateWithoutPostsInput>
  }

  export type shared_postUpdateManyWithWhereWithoutPostsInput = {
    where: shared_postScalarWhereInput
    data: XOR<shared_postUpdateManyMutationInput, shared_postUncheckedUpdateManyWithoutPostsInput>
  }

  export type shared_postScalarWhereInput = {
    AND?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
    OR?: shared_postScalarWhereInput[]
    NOT?: shared_postScalarWhereInput | shared_postScalarWhereInput[]
    id?: UuidFilter<"shared_post"> | string
    post_id?: UuidNullableFilter<"shared_post"> | string | null
    user_id?: UuidFilter<"shared_post"> | string
    react_count?: IntNullableFilter<"shared_post"> | number | null
    content?: StringNullableFilter<"shared_post"> | string | null
    created_date?: DateTimeNullableFilter<"shared_post"> | Date | string | null
    comment_count?: IntNullableFilter<"shared_post"> | number | null
    shared_post_id?: UuidNullableFilter<"shared_post"> | string | null
    shared_count?: IntNullableFilter<"shared_post"> | number | null
  }

  export type commentsCreateWithoutReact_commentsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    posts?: postsCreateNestedOneWithoutCommentsInput
    users: usersCreateNestedOneWithoutCommentsInput
    shared_post?: shared_postCreateNestedOneWithoutCommentsInput
  }

  export type commentsUncheckedCreateWithoutReact_commentsInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
  }

  export type commentsCreateOrConnectWithoutReact_commentsInput = {
    where: commentsWhereUniqueInput
    create: XOR<commentsCreateWithoutReact_commentsInput, commentsUncheckedCreateWithoutReact_commentsInput>
  }

  export type usersCreateWithoutReact_commentsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReact_commentsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutReact_commentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReact_commentsInput, usersUncheckedCreateWithoutReact_commentsInput>
  }

  export type commentsUpsertWithoutReact_commentsInput = {
    update: XOR<commentsUpdateWithoutReact_commentsInput, commentsUncheckedUpdateWithoutReact_commentsInput>
    create: XOR<commentsCreateWithoutReact_commentsInput, commentsUncheckedCreateWithoutReact_commentsInput>
    where?: commentsWhereInput
  }

  export type commentsUpdateToOneWithWhereWithoutReact_commentsInput = {
    where?: commentsWhereInput
    data: XOR<commentsUpdateWithoutReact_commentsInput, commentsUncheckedUpdateWithoutReact_commentsInput>
  }

  export type commentsUpdateWithoutReact_commentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: postsUpdateOneWithoutCommentsNestedInput
    users?: usersUpdateOneRequiredWithoutCommentsNestedInput
    shared_post?: shared_postUpdateOneWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateWithoutReact_commentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUpsertWithoutReact_commentsInput = {
    update: XOR<usersUpdateWithoutReact_commentsInput, usersUncheckedUpdateWithoutReact_commentsInput>
    create: XOR<usersCreateWithoutReact_commentsInput, usersUncheckedCreateWithoutReact_commentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReact_commentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReact_commentsInput, usersUncheckedUpdateWithoutReact_commentsInput>
  }

  export type usersUpdateWithoutReact_commentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutReact_commentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type postsCreateWithoutReact_postsInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupCreateNestedManyWithoutPostsInput
    users: usersCreateNestedOneWithoutPostsInput
    shared_post?: shared_postCreateNestedManyWithoutPostsInput
  }

  export type postsUncheckedCreateWithoutReact_postsInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutPostsInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutPostsInput
  }

  export type postsCreateOrConnectWithoutReact_postsInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutReact_postsInput, postsUncheckedCreateWithoutReact_postsInput>
  }

  export type usersCreateWithoutReact_postsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReact_postsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutReact_postsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReact_postsInput, usersUncheckedCreateWithoutReact_postsInput>
  }

  export type postsUpsertWithoutReact_postsInput = {
    update: XOR<postsUpdateWithoutReact_postsInput, postsUncheckedUpdateWithoutReact_postsInput>
    create: XOR<postsCreateWithoutReact_postsInput, postsUncheckedCreateWithoutReact_postsInput>
    where?: postsWhereInput
  }

  export type postsUpdateToOneWithWhereWithoutReact_postsInput = {
    where?: postsWhereInput
    data: XOR<postsUpdateWithoutReact_postsInput, postsUncheckedUpdateWithoutReact_postsInput>
  }

  export type postsUpdateWithoutReact_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUpdateManyWithoutPostsNestedInput
    users?: usersUpdateOneRequiredWithoutPostsNestedInput
    shared_post?: shared_postUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateWithoutReact_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutPostsNestedInput
  }

  export type usersUpsertWithoutReact_postsInput = {
    update: XOR<usersUpdateWithoutReact_postsInput, usersUncheckedUpdateWithoutReact_postsInput>
    create: XOR<usersCreateWithoutReact_postsInput, usersUncheckedCreateWithoutReact_postsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReact_postsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReact_postsInput, usersUncheckedUpdateWithoutReact_postsInput>
  }

  export type usersUpdateWithoutReact_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutReact_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type commentsCreateWithoutShared_postInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    posts?: postsCreateNestedOneWithoutCommentsInput
    users: usersCreateNestedOneWithoutCommentsInput
    react_comments?: react_commentsCreateNestedManyWithoutCommentsInput
  }

  export type commentsUncheckedCreateWithoutShared_postInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutCommentsInput
  }

  export type commentsCreateOrConnectWithoutShared_postInput = {
    where: commentsWhereUniqueInput
    create: XOR<commentsCreateWithoutShared_postInput, commentsUncheckedCreateWithoutShared_postInput>
  }

  export type commentsCreateManyShared_postInputEnvelope = {
    data: commentsCreateManyShared_postInput | commentsCreateManyShared_postInput[]
    skipDuplicates?: boolean
  }

  export type shared_postCreateWithoutOther_shared_postInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    comments?: commentsCreateNestedManyWithoutShared_postInput
    shared_post?: shared_postCreateNestedOneWithoutOther_shared_postInput
    posts?: postsCreateNestedOneWithoutShared_postInput
    users: usersCreateNestedOneWithoutShared_postInput
  }

  export type shared_postUncheckedCreateWithoutOther_shared_postInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutShared_postInput
  }

  export type shared_postCreateOrConnectWithoutOther_shared_postInput = {
    where: shared_postWhereUniqueInput
    create: XOR<shared_postCreateWithoutOther_shared_postInput, shared_postUncheckedCreateWithoutOther_shared_postInput>
  }

  export type shared_postCreateWithoutShared_postInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    comments?: commentsCreateNestedManyWithoutShared_postInput
    other_shared_post?: shared_postCreateNestedManyWithoutShared_postInput
    posts?: postsCreateNestedOneWithoutShared_postInput
    users: usersCreateNestedOneWithoutShared_postInput
  }

  export type shared_postUncheckedCreateWithoutShared_postInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutShared_postInput
    other_shared_post?: shared_postUncheckedCreateNestedManyWithoutShared_postInput
  }

  export type shared_postCreateOrConnectWithoutShared_postInput = {
    where: shared_postWhereUniqueInput
    create: XOR<shared_postCreateWithoutShared_postInput, shared_postUncheckedCreateWithoutShared_postInput>
  }

  export type shared_postCreateManyShared_postInputEnvelope = {
    data: shared_postCreateManyShared_postInput | shared_postCreateManyShared_postInput[]
    skipDuplicates?: boolean
  }

  export type postsCreateWithoutShared_postInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupCreateNestedManyWithoutPostsInput
    users: usersCreateNestedOneWithoutPostsInput
    react_posts?: react_postsCreateNestedManyWithoutPostsInput
  }

  export type postsUncheckedCreateWithoutShared_postInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutPostsInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutPostsInput
  }

  export type postsCreateOrConnectWithoutShared_postInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutShared_postInput, postsUncheckedCreateWithoutShared_postInput>
  }

  export type usersCreateWithoutShared_postInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutShared_postInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutShared_postInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShared_postInput, usersUncheckedCreateWithoutShared_postInput>
  }

  export type commentsUpsertWithWhereUniqueWithoutShared_postInput = {
    where: commentsWhereUniqueInput
    update: XOR<commentsUpdateWithoutShared_postInput, commentsUncheckedUpdateWithoutShared_postInput>
    create: XOR<commentsCreateWithoutShared_postInput, commentsUncheckedCreateWithoutShared_postInput>
  }

  export type commentsUpdateWithWhereUniqueWithoutShared_postInput = {
    where: commentsWhereUniqueInput
    data: XOR<commentsUpdateWithoutShared_postInput, commentsUncheckedUpdateWithoutShared_postInput>
  }

  export type commentsUpdateManyWithWhereWithoutShared_postInput = {
    where: commentsScalarWhereInput
    data: XOR<commentsUpdateManyMutationInput, commentsUncheckedUpdateManyWithoutShared_postInput>
  }

  export type shared_postUpsertWithoutOther_shared_postInput = {
    update: XOR<shared_postUpdateWithoutOther_shared_postInput, shared_postUncheckedUpdateWithoutOther_shared_postInput>
    create: XOR<shared_postCreateWithoutOther_shared_postInput, shared_postUncheckedCreateWithoutOther_shared_postInput>
    where?: shared_postWhereInput
  }

  export type shared_postUpdateToOneWithWhereWithoutOther_shared_postInput = {
    where?: shared_postWhereInput
    data: XOR<shared_postUpdateWithoutOther_shared_postInput, shared_postUncheckedUpdateWithoutOther_shared_postInput>
  }

  export type shared_postUpdateWithoutOther_shared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutShared_postNestedInput
    shared_post?: shared_postUpdateOneWithoutOther_shared_postNestedInput
    posts?: postsUpdateOneWithoutShared_postNestedInput
    users?: usersUpdateOneRequiredWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateWithoutOther_shared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutShared_postNestedInput
  }

  export type shared_postUpsertWithWhereUniqueWithoutShared_postInput = {
    where: shared_postWhereUniqueInput
    update: XOR<shared_postUpdateWithoutShared_postInput, shared_postUncheckedUpdateWithoutShared_postInput>
    create: XOR<shared_postCreateWithoutShared_postInput, shared_postUncheckedCreateWithoutShared_postInput>
  }

  export type shared_postUpdateWithWhereUniqueWithoutShared_postInput = {
    where: shared_postWhereUniqueInput
    data: XOR<shared_postUpdateWithoutShared_postInput, shared_postUncheckedUpdateWithoutShared_postInput>
  }

  export type shared_postUpdateManyWithWhereWithoutShared_postInput = {
    where: shared_postScalarWhereInput
    data: XOR<shared_postUpdateManyMutationInput, shared_postUncheckedUpdateManyWithoutShared_postInput>
  }

  export type postsUpsertWithoutShared_postInput = {
    update: XOR<postsUpdateWithoutShared_postInput, postsUncheckedUpdateWithoutShared_postInput>
    create: XOR<postsCreateWithoutShared_postInput, postsUncheckedCreateWithoutShared_postInput>
    where?: postsWhereInput
  }

  export type postsUpdateToOneWithWhereWithoutShared_postInput = {
    where?: postsWhereInput
    data: XOR<postsUpdateWithoutShared_postInput, postsUncheckedUpdateWithoutShared_postInput>
  }

  export type postsUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUpdateManyWithoutPostsNestedInput
    users?: usersUpdateOneRequiredWithoutPostsNestedInput
    react_posts?: react_postsUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutPostsNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutPostsNestedInput
  }

  export type usersUpsertWithoutShared_postInput = {
    update: XOR<usersUpdateWithoutShared_postInput, usersUncheckedUpdateWithoutShared_postInput>
    create: XOR<usersCreateWithoutShared_postInput, usersUncheckedCreateWithoutShared_postInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutShared_postInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutShared_postInput, usersUncheckedUpdateWithoutShared_postInput>
  }

  export type usersUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type topicsCreateWithoutStudy_access_topicInput = {
    id?: string
    name: string
    description?: string | null
    courses?: coursesCreateNestedManyWithoutTopicsInput
  }

  export type topicsUncheckedCreateWithoutStudy_access_topicInput = {
    id?: string
    name: string
    description?: string | null
    courses?: coursesUncheckedCreateNestedManyWithoutTopicsInput
  }

  export type topicsCreateOrConnectWithoutStudy_access_topicInput = {
    where: topicsWhereUniqueInput
    create: XOR<topicsCreateWithoutStudy_access_topicInput, topicsUncheckedCreateWithoutStudy_access_topicInput>
  }

  export type usersCreateWithoutStudy_access_topicInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutStudy_access_topicInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutStudy_access_topicInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutStudy_access_topicInput, usersUncheckedCreateWithoutStudy_access_topicInput>
  }

  export type topicsUpsertWithoutStudy_access_topicInput = {
    update: XOR<topicsUpdateWithoutStudy_access_topicInput, topicsUncheckedUpdateWithoutStudy_access_topicInput>
    create: XOR<topicsCreateWithoutStudy_access_topicInput, topicsUncheckedCreateWithoutStudy_access_topicInput>
    where?: topicsWhereInput
  }

  export type topicsUpdateToOneWithWhereWithoutStudy_access_topicInput = {
    where?: topicsWhereInput
    data: XOR<topicsUpdateWithoutStudy_access_topicInput, topicsUncheckedUpdateWithoutStudy_access_topicInput>
  }

  export type topicsUpdateWithoutStudy_access_topicInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    courses?: coursesUpdateManyWithoutTopicsNestedInput
  }

  export type topicsUncheckedUpdateWithoutStudy_access_topicInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    courses?: coursesUncheckedUpdateManyWithoutTopicsNestedInput
  }

  export type usersUpsertWithoutStudy_access_topicInput = {
    update: XOR<usersUpdateWithoutStudy_access_topicInput, usersUncheckedUpdateWithoutStudy_access_topicInput>
    create: XOR<usersCreateWithoutStudy_access_topicInput, usersUncheckedCreateWithoutStudy_access_topicInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutStudy_access_topicInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutStudy_access_topicInput, usersUncheckedUpdateWithoutStudy_access_topicInput>
  }

  export type usersUpdateWithoutStudy_access_topicInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutStudy_access_topicInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type coursesCreateWithoutTopicsInput = {
    id?: string
    title: string
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    user_courses?: user_coursesCreateNestedManyWithoutCoursesInput
    words?: wordsCreateNestedManyWithoutCoursesInput
  }

  export type coursesUncheckedCreateWithoutTopicsInput = {
    id?: string
    title: string
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutCoursesInput
    words?: wordsUncheckedCreateNestedManyWithoutCoursesInput
  }

  export type coursesCreateOrConnectWithoutTopicsInput = {
    where: coursesWhereUniqueInput
    create: XOR<coursesCreateWithoutTopicsInput, coursesUncheckedCreateWithoutTopicsInput>
  }

  export type coursesCreateManyTopicsInputEnvelope = {
    data: coursesCreateManyTopicsInput | coursesCreateManyTopicsInput[]
    skipDuplicates?: boolean
  }

  export type study_access_topicCreateWithoutTopicsInput = {
    id?: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
    users: usersCreateNestedOneWithoutStudy_access_topicInput
  }

  export type study_access_topicUncheckedCreateWithoutTopicsInput = {
    id?: string
    user_id: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
  }

  export type study_access_topicCreateOrConnectWithoutTopicsInput = {
    where: study_access_topicWhereUniqueInput
    create: XOR<study_access_topicCreateWithoutTopicsInput, study_access_topicUncheckedCreateWithoutTopicsInput>
  }

  export type study_access_topicCreateManyTopicsInputEnvelope = {
    data: study_access_topicCreateManyTopicsInput | study_access_topicCreateManyTopicsInput[]
    skipDuplicates?: boolean
  }

  export type coursesUpsertWithWhereUniqueWithoutTopicsInput = {
    where: coursesWhereUniqueInput
    update: XOR<coursesUpdateWithoutTopicsInput, coursesUncheckedUpdateWithoutTopicsInput>
    create: XOR<coursesCreateWithoutTopicsInput, coursesUncheckedCreateWithoutTopicsInput>
  }

  export type coursesUpdateWithWhereUniqueWithoutTopicsInput = {
    where: coursesWhereUniqueInput
    data: XOR<coursesUpdateWithoutTopicsInput, coursesUncheckedUpdateWithoutTopicsInput>
  }

  export type coursesUpdateManyWithWhereWithoutTopicsInput = {
    where: coursesScalarWhereInput
    data: XOR<coursesUpdateManyMutationInput, coursesUncheckedUpdateManyWithoutTopicsInput>
  }

  export type coursesScalarWhereInput = {
    AND?: coursesScalarWhereInput | coursesScalarWhereInput[]
    OR?: coursesScalarWhereInput[]
    NOT?: coursesScalarWhereInput | coursesScalarWhereInput[]
    id?: UuidFilter<"courses"> | string
    title?: StringFilter<"courses"> | string
    topic_id?: UuidNullableFilter<"courses"> | string | null
    level?: StringNullableFilter<"courses"> | string | null
    description?: StringNullableFilter<"courses"> | string | null
    image_url?: StringNullableFilter<"courses"> | string | null
    price?: IntFilter<"courses"> | number
    created_date?: DateTimeFilter<"courses"> | Date | string
  }

  export type study_access_topicUpsertWithWhereUniqueWithoutTopicsInput = {
    where: study_access_topicWhereUniqueInput
    update: XOR<study_access_topicUpdateWithoutTopicsInput, study_access_topicUncheckedUpdateWithoutTopicsInput>
    create: XOR<study_access_topicCreateWithoutTopicsInput, study_access_topicUncheckedCreateWithoutTopicsInput>
  }

  export type study_access_topicUpdateWithWhereUniqueWithoutTopicsInput = {
    where: study_access_topicWhereUniqueInput
    data: XOR<study_access_topicUpdateWithoutTopicsInput, study_access_topicUncheckedUpdateWithoutTopicsInput>
  }

  export type study_access_topicUpdateManyWithWhereWithoutTopicsInput = {
    where: study_access_topicScalarWhereInput
    data: XOR<study_access_topicUpdateManyMutationInput, study_access_topicUncheckedUpdateManyWithoutTopicsInput>
  }

  export type study_access_topicScalarWhereInput = {
    AND?: study_access_topicScalarWhereInput | study_access_topicScalarWhereInput[]
    OR?: study_access_topicScalarWhereInput[]
    NOT?: study_access_topicScalarWhereInput | study_access_topicScalarWhereInput[]
    id?: UuidFilter<"study_access_topic"> | string
    user_id?: UuidFilter<"study_access_topic"> | string
    topic_id?: UuidFilter<"study_access_topic"> | string
    access_type?: StringNullableFilter<"study_access_topic"> | string | null
    access_date?: DateTimeNullableFilter<"study_access_topic"> | Date | string | null
    expire_date?: DateTimeFilter<"study_access_topic"> | Date | string
  }

  export type usersCreateWithoutTransaction_historyInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutTransaction_historyInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutTransaction_historyInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutTransaction_historyInput, usersUncheckedCreateWithoutTransaction_historyInput>
  }

  export type usersUpsertWithoutTransaction_historyInput = {
    update: XOR<usersUpdateWithoutTransaction_historyInput, usersUncheckedUpdateWithoutTransaction_historyInput>
    create: XOR<usersCreateWithoutTransaction_historyInput, usersUncheckedCreateWithoutTransaction_historyInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutTransaction_historyInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutTransaction_historyInput, usersUncheckedUpdateWithoutTransaction_historyInput>
  }

  export type usersUpdateWithoutTransaction_historyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutTransaction_historyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput = {
    id?: string
    feedback?: string | null
    responded_at?: Date | string | null
    users?: usersCreateNestedOneWithoutAbuse_report_feedbacksInput
  }

  export type abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput = {
    id?: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type abuse_report_feedbacksCreateOrConnectWithoutUser_abuse_reportsInput = {
    where: abuse_report_feedbacksWhereUniqueInput
    create: XOR<abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput>
  }

  export type abuse_report_feedbacksCreateManyUser_abuse_reportsInputEnvelope = {
    data: abuse_report_feedbacksCreateManyUser_abuse_reportsInput | abuse_report_feedbacksCreateManyUser_abuse_reportsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutUser_abuse_reportsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_abuse_reportsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_abuse_reportsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_abuse_reportsInput, usersUncheckedCreateWithoutUser_abuse_reportsInput>
  }

  export type abuse_report_feedbacksUpsertWithWhereUniqueWithoutUser_abuse_reportsInput = {
    where: abuse_report_feedbacksWhereUniqueInput
    update: XOR<abuse_report_feedbacksUpdateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedUpdateWithoutUser_abuse_reportsInput>
    create: XOR<abuse_report_feedbacksCreateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedCreateWithoutUser_abuse_reportsInput>
  }

  export type abuse_report_feedbacksUpdateWithWhereUniqueWithoutUser_abuse_reportsInput = {
    where: abuse_report_feedbacksWhereUniqueInput
    data: XOR<abuse_report_feedbacksUpdateWithoutUser_abuse_reportsInput, abuse_report_feedbacksUncheckedUpdateWithoutUser_abuse_reportsInput>
  }

  export type abuse_report_feedbacksUpdateManyWithWhereWithoutUser_abuse_reportsInput = {
    where: abuse_report_feedbacksScalarWhereInput
    data: XOR<abuse_report_feedbacksUpdateManyMutationInput, abuse_report_feedbacksUncheckedUpdateManyWithoutUser_abuse_reportsInput>
  }

  export type abuse_report_feedbacksScalarWhereInput = {
    AND?: abuse_report_feedbacksScalarWhereInput | abuse_report_feedbacksScalarWhereInput[]
    OR?: abuse_report_feedbacksScalarWhereInput[]
    NOT?: abuse_report_feedbacksScalarWhereInput | abuse_report_feedbacksScalarWhereInput[]
    id?: UuidFilter<"abuse_report_feedbacks"> | string
    report_id?: UuidFilter<"abuse_report_feedbacks"> | string
    admin_id?: UuidNullableFilter<"abuse_report_feedbacks"> | string | null
    feedback?: StringNullableFilter<"abuse_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableFilter<"abuse_report_feedbacks"> | Date | string | null
  }

  export type usersUpsertWithoutUser_abuse_reportsInput = {
    update: XOR<usersUpdateWithoutUser_abuse_reportsInput, usersUncheckedUpdateWithoutUser_abuse_reportsInput>
    create: XOR<usersCreateWithoutUser_abuse_reportsInput, usersUncheckedCreateWithoutUser_abuse_reportsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_abuse_reportsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_abuse_reportsInput, usersUncheckedUpdateWithoutUser_abuse_reportsInput>
  }

  export type usersUpdateWithoutUser_abuse_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_abuse_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type coursesCreateWithoutUser_coursesInput = {
    id?: string
    title: string
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    topics?: topicsCreateNestedOneWithoutCoursesInput
    words?: wordsCreateNestedManyWithoutCoursesInput
  }

  export type coursesUncheckedCreateWithoutUser_coursesInput = {
    id?: string
    title: string
    topic_id?: string | null
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    words?: wordsUncheckedCreateNestedManyWithoutCoursesInput
  }

  export type coursesCreateOrConnectWithoutUser_coursesInput = {
    where: coursesWhereUniqueInput
    create: XOR<coursesCreateWithoutUser_coursesInput, coursesUncheckedCreateWithoutUser_coursesInput>
  }

  export type usersCreateWithoutUser_coursesInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_coursesInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_coursesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_coursesInput, usersUncheckedCreateWithoutUser_coursesInput>
  }

  export type coursesUpsertWithoutUser_coursesInput = {
    update: XOR<coursesUpdateWithoutUser_coursesInput, coursesUncheckedUpdateWithoutUser_coursesInput>
    create: XOR<coursesCreateWithoutUser_coursesInput, coursesUncheckedCreateWithoutUser_coursesInput>
    where?: coursesWhereInput
  }

  export type coursesUpdateToOneWithWhereWithoutUser_coursesInput = {
    where?: coursesWhereInput
    data: XOR<coursesUpdateWithoutUser_coursesInput, coursesUncheckedUpdateWithoutUser_coursesInput>
  }

  export type coursesUpdateWithoutUser_coursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    topics?: topicsUpdateOneWithoutCoursesNestedInput
    words?: wordsUpdateManyWithoutCoursesNestedInput
  }

  export type coursesUncheckedUpdateWithoutUser_coursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    topic_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    words?: wordsUncheckedUpdateManyWithoutCoursesNestedInput
  }

  export type usersUpsertWithoutUser_coursesInput = {
    update: XOR<usersUpdateWithoutUser_coursesInput, usersUncheckedUpdateWithoutUser_coursesInput>
    create: XOR<usersCreateWithoutUser_coursesInput, usersUncheckedCreateWithoutUser_coursesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_coursesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_coursesInput, usersUncheckedUpdateWithoutUser_coursesInput>
  }

  export type usersUpdateWithoutUser_coursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_coursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type error_report_feedbacksCreateWithoutUser_error_reportsInput = {
    id?: string
    feedback?: string | null
    responded_at?: Date | string | null
    users?: usersCreateNestedOneWithoutError_report_feedbacksInput
  }

  export type error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput = {
    id?: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type error_report_feedbacksCreateOrConnectWithoutUser_error_reportsInput = {
    where: error_report_feedbacksWhereUniqueInput
    create: XOR<error_report_feedbacksCreateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput>
  }

  export type error_report_feedbacksCreateManyUser_error_reportsInputEnvelope = {
    data: error_report_feedbacksCreateManyUser_error_reportsInput | error_report_feedbacksCreateManyUser_error_reportsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutUser_error_reportsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_error_reportsInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_error_reportsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_error_reportsInput, usersUncheckedCreateWithoutUser_error_reportsInput>
  }

  export type error_report_feedbacksUpsertWithWhereUniqueWithoutUser_error_reportsInput = {
    where: error_report_feedbacksWhereUniqueInput
    update: XOR<error_report_feedbacksUpdateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedUpdateWithoutUser_error_reportsInput>
    create: XOR<error_report_feedbacksCreateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedCreateWithoutUser_error_reportsInput>
  }

  export type error_report_feedbacksUpdateWithWhereUniqueWithoutUser_error_reportsInput = {
    where: error_report_feedbacksWhereUniqueInput
    data: XOR<error_report_feedbacksUpdateWithoutUser_error_reportsInput, error_report_feedbacksUncheckedUpdateWithoutUser_error_reportsInput>
  }

  export type error_report_feedbacksUpdateManyWithWhereWithoutUser_error_reportsInput = {
    where: error_report_feedbacksScalarWhereInput
    data: XOR<error_report_feedbacksUpdateManyMutationInput, error_report_feedbacksUncheckedUpdateManyWithoutUser_error_reportsInput>
  }

  export type error_report_feedbacksScalarWhereInput = {
    AND?: error_report_feedbacksScalarWhereInput | error_report_feedbacksScalarWhereInput[]
    OR?: error_report_feedbacksScalarWhereInput[]
    NOT?: error_report_feedbacksScalarWhereInput | error_report_feedbacksScalarWhereInput[]
    id?: UuidFilter<"error_report_feedbacks"> | string
    report_id?: UuidFilter<"error_report_feedbacks"> | string
    admin_id?: UuidNullableFilter<"error_report_feedbacks"> | string | null
    feedback?: StringNullableFilter<"error_report_feedbacks"> | string | null
    responded_at?: DateTimeNullableFilter<"error_report_feedbacks"> | Date | string | null
  }

  export type usersUpsertWithoutUser_error_reportsInput = {
    update: XOR<usersUpdateWithoutUser_error_reportsInput, usersUncheckedUpdateWithoutUser_error_reportsInput>
    create: XOR<usersCreateWithoutUser_error_reportsInput, usersUncheckedCreateWithoutUser_error_reportsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_error_reportsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_error_reportsInput, usersUncheckedUpdateWithoutUser_error_reportsInput>
  }

  export type usersUpdateWithoutUser_error_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_error_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type packagesCreateWithoutUser_packagesInput = {
    id?: string
    name: string
    duration_days: number
    price: number
    is_premium?: boolean | null
  }

  export type packagesUncheckedCreateWithoutUser_packagesInput = {
    id?: string
    name: string
    duration_days: number
    price: number
    is_premium?: boolean | null
  }

  export type packagesCreateOrConnectWithoutUser_packagesInput = {
    where: packagesWhereUniqueInput
    create: XOR<packagesCreateWithoutUser_packagesInput, packagesUncheckedCreateWithoutUser_packagesInput>
  }

  export type usersCreateWithoutUser_packagesInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_packagesInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_packagesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_packagesInput, usersUncheckedCreateWithoutUser_packagesInput>
  }

  export type packagesUpsertWithoutUser_packagesInput = {
    update: XOR<packagesUpdateWithoutUser_packagesInput, packagesUncheckedUpdateWithoutUser_packagesInput>
    create: XOR<packagesCreateWithoutUser_packagesInput, packagesUncheckedCreateWithoutUser_packagesInput>
    where?: packagesWhereInput
  }

  export type packagesUpdateToOneWithWhereWithoutUser_packagesInput = {
    where?: packagesWhereInput
    data: XOR<packagesUpdateWithoutUser_packagesInput, packagesUncheckedUpdateWithoutUser_packagesInput>
  }

  export type packagesUpdateWithoutUser_packagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    is_premium?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type packagesUncheckedUpdateWithoutUser_packagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    is_premium?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usersUpsertWithoutUser_packagesInput = {
    update: XOR<usersUpdateWithoutUser_packagesInput, usersUncheckedUpdateWithoutUser_packagesInput>
    create: XOR<usersCreateWithoutUser_packagesInput, usersUncheckedCreateWithoutUser_packagesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_packagesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_packagesInput, usersUncheckedUpdateWithoutUser_packagesInput>
  }

  export type usersUpdateWithoutUser_packagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_packagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
  }

  export type usersCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_progress?: user_progressCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_progress?: user_progressUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
  }

  export type usersUpsertWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    update: XOR<usersUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
    create: XOR<usersCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput, usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput>
  }

  export type usersUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_changed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    update: XOR<usersUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
    create: XOR<usersCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUncheckedCreateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput, usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput>
  }

  export type usersUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_progress?: user_progressUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_profile_history_user_profile_history_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_progress?: user_progressUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_progressInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUsersInput
    attendance?: attendanceCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionCreateNestedManyWithoutUsersInput
    comments?: commentsCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    group_posts?: group_postsCreateNestedManyWithoutUsersInput
    groups?: groupsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsCreateNestedManyWithoutUsersInput
    react_posts?: react_postsCreateNestedManyWithoutUsersInput
    shared_post?: shared_postCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
  }

  export type usersUncheckedCreateWithoutUser_progressInput = {
    id?: string
    username: string
    passwordhash: string
    birthday?: Date | string | null
    gender?: boolean | null
    fullname?: string | null
    address?: string | null
    email?: string | null
    phonenumber?: string | null
    created_date?: Date | string | null
    isactive?: boolean | null
    isadmin?: boolean | null
    balance?: number | null
    image_url?: string | null
    is_block?: boolean | null
    is_verified?: boolean | null
    firebase_uid?: string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    attendance?: attendanceUncheckedCreateNestedManyWithoutUsersInput
    coin_transaction?: coin_transactionUncheckedCreateNestedManyWithoutUsersInput
    comments?: commentsUncheckedCreateNestedManyWithoutUsersInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutUsersInput
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutUsersInput
    groups?: groupsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutUsersInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutUsersInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutUsersInput
    study_access_topic?: study_access_topicUncheckedCreateNestedManyWithoutUsersInput
    transaction_history?: transaction_historyUncheckedCreateNestedManyWithoutUsersInput
    user_abuse_reports?: user_abuse_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutUsersInput
    user_error_reports?: user_error_reportsUncheckedCreateNestedManyWithoutUsersInput
    user_packages?: user_packagesUncheckedCreateNestedManyWithoutUsersInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_changed_byTousersInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedCreateNestedManyWithoutUsers_user_profile_history_user_idTousersInput
  }

  export type usersCreateOrConnectWithoutUser_progressInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_progressInput, usersUncheckedCreateWithoutUser_progressInput>
  }

  export type wordsCreateWithoutUser_progressInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    courses?: coursesCreateNestedOneWithoutWordsInput
  }

  export type wordsUncheckedCreateWithoutUser_progressInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
    course_id?: string | null
  }

  export type wordsCreateOrConnectWithoutUser_progressInput = {
    where: wordsWhereUniqueInput
    create: XOR<wordsCreateWithoutUser_progressInput, wordsUncheckedCreateWithoutUser_progressInput>
  }

  export type usersUpsertWithoutUser_progressInput = {
    update: XOR<usersUpdateWithoutUser_progressInput, usersUncheckedUpdateWithoutUser_progressInput>
    create: XOR<usersCreateWithoutUser_progressInput, usersUncheckedCreateWithoutUser_progressInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_progressInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_progressInput, usersUncheckedUpdateWithoutUser_progressInput>
  }

  export type usersUpdateWithoutUser_progressInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUpdateManyWithoutUsersNestedInput
    comments?: commentsUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUpdateManyWithoutUsersNestedInput
    groups?: groupsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_progressInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    passwordhash?: StringFieldUpdateOperationsInput | string
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phonenumber?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_block?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    firebase_uid?: NullableStringFieldUpdateOperationsInput | string | null
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    attendance?: attendanceUncheckedUpdateManyWithoutUsersNestedInput
    coin_transaction?: coin_transactionUncheckedUpdateManyWithoutUsersNestedInput
    comments?: commentsUncheckedUpdateManyWithoutUsersNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutUsersNestedInput
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutUsersNestedInput
    groups?: groupsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    react_comments?: react_commentsUncheckedUpdateManyWithoutUsersNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutUsersNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutUsersNestedInput
    study_access_topic?: study_access_topicUncheckedUpdateManyWithoutUsersNestedInput
    transaction_history?: transaction_historyUncheckedUpdateManyWithoutUsersNestedInput
    user_abuse_reports?: user_abuse_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_courses?: user_coursesUncheckedUpdateManyWithoutUsersNestedInput
    user_error_reports?: user_error_reportsUncheckedUpdateManyWithoutUsersNestedInput
    user_packages?: user_packagesUncheckedUpdateManyWithoutUsersNestedInput
    user_profile_history_user_profile_history_changed_byTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersNestedInput
    user_profile_history_user_profile_history_user_idTousers?: user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersNestedInput
  }

  export type wordsUpsertWithoutUser_progressInput = {
    update: XOR<wordsUpdateWithoutUser_progressInput, wordsUncheckedUpdateWithoutUser_progressInput>
    create: XOR<wordsCreateWithoutUser_progressInput, wordsUncheckedCreateWithoutUser_progressInput>
    where?: wordsWhereInput
  }

  export type wordsUpdateToOneWithWhereWithoutUser_progressInput = {
    where?: wordsWhereInput
    data: XOR<wordsUpdateWithoutUser_progressInput, wordsUncheckedUpdateWithoutUser_progressInput>
  }

  export type wordsUpdateWithoutUser_progressInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    courses?: coursesUpdateOneWithoutWordsNestedInput
  }

  export type wordsUncheckedUpdateWithoutUser_progressInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type abuse_report_feedbacksCreateWithoutUsersInput = {
    id?: string
    feedback?: string | null
    responded_at?: Date | string | null
    user_abuse_reports: user_abuse_reportsCreateNestedOneWithoutAbuse_report_feedbacksInput
  }

  export type abuse_report_feedbacksUncheckedCreateWithoutUsersInput = {
    id?: string
    report_id: string
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type abuse_report_feedbacksCreateOrConnectWithoutUsersInput = {
    where: abuse_report_feedbacksWhereUniqueInput
    create: XOR<abuse_report_feedbacksCreateWithoutUsersInput, abuse_report_feedbacksUncheckedCreateWithoutUsersInput>
  }

  export type abuse_report_feedbacksCreateManyUsersInputEnvelope = {
    data: abuse_report_feedbacksCreateManyUsersInput | abuse_report_feedbacksCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type attendanceCreateWithoutUsersInput = {
    id?: string
    checkin_date?: Date | string
  }

  export type attendanceUncheckedCreateWithoutUsersInput = {
    id?: string
    checkin_date?: Date | string
  }

  export type attendanceCreateOrConnectWithoutUsersInput = {
    where: attendanceWhereUniqueInput
    create: XOR<attendanceCreateWithoutUsersInput, attendanceUncheckedCreateWithoutUsersInput>
  }

  export type attendanceCreateManyUsersInputEnvelope = {
    data: attendanceCreateManyUsersInput | attendanceCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type coin_transactionCreateWithoutUsersInput = {
    id?: string
    amount: number
    reason: string
    reference_id?: string | null
    reference_table?: string | null
    created_at?: Date | string | null
  }

  export type coin_transactionUncheckedCreateWithoutUsersInput = {
    id?: string
    amount: number
    reason: string
    reference_id?: string | null
    reference_table?: string | null
    created_at?: Date | string | null
  }

  export type coin_transactionCreateOrConnectWithoutUsersInput = {
    where: coin_transactionWhereUniqueInput
    create: XOR<coin_transactionCreateWithoutUsersInput, coin_transactionUncheckedCreateWithoutUsersInput>
  }

  export type coin_transactionCreateManyUsersInputEnvelope = {
    data: coin_transactionCreateManyUsersInput | coin_transactionCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type commentsCreateWithoutUsersInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    posts?: postsCreateNestedOneWithoutCommentsInput
    shared_post?: shared_postCreateNestedOneWithoutCommentsInput
    react_comments?: react_commentsCreateNestedManyWithoutCommentsInput
  }

  export type commentsUncheckedCreateWithoutUsersInput = {
    id?: string
    post_id?: string | null
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
    react_comments?: react_commentsUncheckedCreateNestedManyWithoutCommentsInput
  }

  export type commentsCreateOrConnectWithoutUsersInput = {
    where: commentsWhereUniqueInput
    create: XOR<commentsCreateWithoutUsersInput, commentsUncheckedCreateWithoutUsersInput>
  }

  export type commentsCreateManyUsersInputEnvelope = {
    data: commentsCreateManyUsersInput | commentsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type comments_groupCreateWithoutUsersInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
    groups: groupsCreateNestedOneWithoutComments_groupInput
    posts: postsCreateNestedOneWithoutComments_groupInput
  }

  export type comments_groupUncheckedCreateWithoutUsersInput = {
    id?: string
    group_id: string
    post_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type comments_groupCreateOrConnectWithoutUsersInput = {
    where: comments_groupWhereUniqueInput
    create: XOR<comments_groupCreateWithoutUsersInput, comments_groupUncheckedCreateWithoutUsersInput>
  }

  export type comments_groupCreateManyUsersInputEnvelope = {
    data: comments_groupCreateManyUsersInput | comments_groupCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type error_report_feedbacksCreateWithoutUsersInput = {
    id?: string
    feedback?: string | null
    responded_at?: Date | string | null
    user_error_reports: user_error_reportsCreateNestedOneWithoutError_report_feedbacksInput
  }

  export type error_report_feedbacksUncheckedCreateWithoutUsersInput = {
    id?: string
    report_id: string
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type error_report_feedbacksCreateOrConnectWithoutUsersInput = {
    where: error_report_feedbacksWhereUniqueInput
    create: XOR<error_report_feedbacksCreateWithoutUsersInput, error_report_feedbacksUncheckedCreateWithoutUsersInput>
  }

  export type error_report_feedbacksCreateManyUsersInputEnvelope = {
    data: error_report_feedbacksCreateManyUsersInput | error_report_feedbacksCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type group_membersCreateWithoutUsersInput = {
    id?: string
    is_admin?: boolean
    joined_date?: Date | string | null
    groups: groupsCreateNestedOneWithoutGroup_membersInput
  }

  export type group_membersUncheckedCreateWithoutUsersInput = {
    id?: string
    group_id: string
    is_admin?: boolean
    joined_date?: Date | string | null
  }

  export type group_membersCreateOrConnectWithoutUsersInput = {
    where: group_membersWhereUniqueInput
    create: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput>
  }

  export type group_membersCreateManyUsersInputEnvelope = {
    data: group_membersCreateManyUsersInput | group_membersCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type group_postsCreateWithoutUsersInput = {
    id?: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
    groups: groupsCreateNestedOneWithoutGroup_postsInput
  }

  export type group_postsUncheckedCreateWithoutUsersInput = {
    id?: string
    group_id: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
  }

  export type group_postsCreateOrConnectWithoutUsersInput = {
    where: group_postsWhereUniqueInput
    create: XOR<group_postsCreateWithoutUsersInput, group_postsUncheckedCreateWithoutUsersInput>
  }

  export type group_postsCreateManyUsersInputEnvelope = {
    data: group_postsCreateManyUsersInput | group_postsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type groupsCreateWithoutUsersInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupCreateNestedManyWithoutGroupsInput
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsCreateNestedManyWithoutGroupsInput
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutGroupsInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
    group_posts?: group_postsUncheckedCreateNestedManyWithoutGroupsInput
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutUsersInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutUsersInput, groupsUncheckedCreateWithoutUsersInput>
  }

  export type groupsCreateManyUsersInputEnvelope = {
    data: groupsCreateManyUsersInput | groupsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type messagesCreateWithoutUsersInput = {
    id?: string
    created_date?: Date | string | null
    content?: string | null
    groups: groupsCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutUsersInput = {
    id?: string
    group_id: string
    created_date?: Date | string | null
    content?: string | null
  }

  export type messagesCreateOrConnectWithoutUsersInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput>
  }

  export type messagesCreateManyUsersInputEnvelope = {
    data: messagesCreateManyUsersInput | messagesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type postsCreateWithoutUsersInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupCreateNestedManyWithoutPostsInput
    react_posts?: react_postsCreateNestedManyWithoutPostsInput
    shared_post?: shared_postCreateNestedManyWithoutPostsInput
  }

  export type postsUncheckedCreateWithoutUsersInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutPostsInput
    comments_group?: comments_groupUncheckedCreateNestedManyWithoutPostsInput
    react_posts?: react_postsUncheckedCreateNestedManyWithoutPostsInput
    shared_post?: shared_postUncheckedCreateNestedManyWithoutPostsInput
  }

  export type postsCreateOrConnectWithoutUsersInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput>
  }

  export type postsCreateManyUsersInputEnvelope = {
    data: postsCreateManyUsersInput | postsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type react_commentsCreateWithoutUsersInput = {
    id?: string
    created_date?: Date | string
    comments: commentsCreateNestedOneWithoutReact_commentsInput
  }

  export type react_commentsUncheckedCreateWithoutUsersInput = {
    id?: string
    comment_id: string
    created_date?: Date | string
  }

  export type react_commentsCreateOrConnectWithoutUsersInput = {
    where: react_commentsWhereUniqueInput
    create: XOR<react_commentsCreateWithoutUsersInput, react_commentsUncheckedCreateWithoutUsersInput>
  }

  export type react_commentsCreateManyUsersInputEnvelope = {
    data: react_commentsCreateManyUsersInput | react_commentsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type react_postsCreateWithoutUsersInput = {
    id?: string
    created_date?: Date | string | null
    posts: postsCreateNestedOneWithoutReact_postsInput
  }

  export type react_postsUncheckedCreateWithoutUsersInput = {
    id?: string
    post_id: string
    created_date?: Date | string | null
  }

  export type react_postsCreateOrConnectWithoutUsersInput = {
    where: react_postsWhereUniqueInput
    create: XOR<react_postsCreateWithoutUsersInput, react_postsUncheckedCreateWithoutUsersInput>
  }

  export type react_postsCreateManyUsersInputEnvelope = {
    data: react_postsCreateManyUsersInput | react_postsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type shared_postCreateWithoutUsersInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
    comments?: commentsCreateNestedManyWithoutShared_postInput
    shared_post?: shared_postCreateNestedOneWithoutOther_shared_postInput
    other_shared_post?: shared_postCreateNestedManyWithoutShared_postInput
    posts?: postsCreateNestedOneWithoutShared_postInput
  }

  export type shared_postUncheckedCreateWithoutUsersInput = {
    id?: string
    post_id?: string | null
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
    comments?: commentsUncheckedCreateNestedManyWithoutShared_postInput
    other_shared_post?: shared_postUncheckedCreateNestedManyWithoutShared_postInput
  }

  export type shared_postCreateOrConnectWithoutUsersInput = {
    where: shared_postWhereUniqueInput
    create: XOR<shared_postCreateWithoutUsersInput, shared_postUncheckedCreateWithoutUsersInput>
  }

  export type shared_postCreateManyUsersInputEnvelope = {
    data: shared_postCreateManyUsersInput | shared_postCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type study_access_topicCreateWithoutUsersInput = {
    id?: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
    topics: topicsCreateNestedOneWithoutStudy_access_topicInput
  }

  export type study_access_topicUncheckedCreateWithoutUsersInput = {
    id?: string
    topic_id: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
  }

  export type study_access_topicCreateOrConnectWithoutUsersInput = {
    where: study_access_topicWhereUniqueInput
    create: XOR<study_access_topicCreateWithoutUsersInput, study_access_topicUncheckedCreateWithoutUsersInput>
  }

  export type study_access_topicCreateManyUsersInputEnvelope = {
    data: study_access_topicCreateManyUsersInput | study_access_topicCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type transaction_historyCreateWithoutUsersInput = {
    id?: string
    price?: Decimal | DecimalJsLike | number | string | null
    createddate?: Date | string | null
  }

  export type transaction_historyUncheckedCreateWithoutUsersInput = {
    id?: string
    price?: Decimal | DecimalJsLike | number | string | null
    createddate?: Date | string | null
  }

  export type transaction_historyCreateOrConnectWithoutUsersInput = {
    where: transaction_historyWhereUniqueInput
    create: XOR<transaction_historyCreateWithoutUsersInput, transaction_historyUncheckedCreateWithoutUsersInput>
  }

  export type transaction_historyCreateManyUsersInputEnvelope = {
    data: transaction_historyCreateManyUsersInput | transaction_historyCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_abuse_reportsCreateWithoutUsersInput = {
    id?: string
    content: string
    created_date?: Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksCreateNestedManyWithoutUser_abuse_reportsInput
  }

  export type user_abuse_reportsUncheckedCreateWithoutUsersInput = {
    id?: string
    content: string
    created_date?: Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedCreateNestedManyWithoutUser_abuse_reportsInput
  }

  export type user_abuse_reportsCreateOrConnectWithoutUsersInput = {
    where: user_abuse_reportsWhereUniqueInput
    create: XOR<user_abuse_reportsCreateWithoutUsersInput, user_abuse_reportsUncheckedCreateWithoutUsersInput>
  }

  export type user_abuse_reportsCreateManyUsersInputEnvelope = {
    data: user_abuse_reportsCreateManyUsersInput | user_abuse_reportsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_coursesCreateWithoutUsersInput = {
    id?: string
    purchase_date?: Date | string | null
    courses: coursesCreateNestedOneWithoutUser_coursesInput
  }

  export type user_coursesUncheckedCreateWithoutUsersInput = {
    id?: string
    course_id: string
    purchase_date?: Date | string | null
  }

  export type user_coursesCreateOrConnectWithoutUsersInput = {
    where: user_coursesWhereUniqueInput
    create: XOR<user_coursesCreateWithoutUsersInput, user_coursesUncheckedCreateWithoutUsersInput>
  }

  export type user_coursesCreateManyUsersInputEnvelope = {
    data: user_coursesCreateManyUsersInput | user_coursesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_error_reportsCreateWithoutUsersInput = {
    id?: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
    error_report_feedbacks?: error_report_feedbacksCreateNestedManyWithoutUser_error_reportsInput
  }

  export type user_error_reportsUncheckedCreateWithoutUsersInput = {
    id?: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
    error_report_feedbacks?: error_report_feedbacksUncheckedCreateNestedManyWithoutUser_error_reportsInput
  }

  export type user_error_reportsCreateOrConnectWithoutUsersInput = {
    where: user_error_reportsWhereUniqueInput
    create: XOR<user_error_reportsCreateWithoutUsersInput, user_error_reportsUncheckedCreateWithoutUsersInput>
  }

  export type user_error_reportsCreateManyUsersInputEnvelope = {
    data: user_error_reportsCreateManyUsersInput | user_error_reportsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_packagesCreateWithoutUsersInput = {
    id?: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
    packages: packagesCreateNestedOneWithoutUser_packagesInput
  }

  export type user_packagesUncheckedCreateWithoutUsersInput = {
    id?: string
    package_id: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
  }

  export type user_packagesCreateOrConnectWithoutUsersInput = {
    where: user_packagesWhereUniqueInput
    create: XOR<user_packagesCreateWithoutUsersInput, user_packagesUncheckedCreateWithoutUsersInput>
  }

  export type user_packagesCreateManyUsersInputEnvelope = {
    data: user_packagesCreateManyUsersInput | user_packagesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput = {
    id?: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: Date | string | null
    users_user_profile_history_user_idTousers: usersCreateNestedOneWithoutUser_profile_history_user_profile_history_user_idTousersInput
  }

  export type user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput = {
    id?: string
    user_id: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: Date | string | null
  }

  export type user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_changed_byTousersInput = {
    where: user_profile_historyWhereUniqueInput
    create: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput>
  }

  export type user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInputEnvelope = {
    data: user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInput | user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInput[]
    skipDuplicates?: boolean
  }

  export type user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput = {
    id?: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: Date | string | null
    users_user_profile_history_changed_byTousers?: usersCreateNestedOneWithoutUser_profile_history_user_profile_history_changed_byTousersInput
  }

  export type user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput = {
    id?: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: string | null
    changed_at?: Date | string | null
  }

  export type user_profile_historyCreateOrConnectWithoutUsers_user_profile_history_user_idTousersInput = {
    where: user_profile_historyWhereUniqueInput
    create: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput>
  }

  export type user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInputEnvelope = {
    data: user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInput | user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type user_progressCreateWithoutUsersInput = {
    id?: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
    words: wordsCreateNestedOneWithoutUser_progressInput
  }

  export type user_progressUncheckedCreateWithoutUsersInput = {
    id?: string
    word_id: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
  }

  export type user_progressCreateOrConnectWithoutUsersInput = {
    where: user_progressWhereUniqueInput
    create: XOR<user_progressCreateWithoutUsersInput, user_progressUncheckedCreateWithoutUsersInput>
  }

  export type user_progressCreateManyUsersInputEnvelope = {
    data: user_progressCreateManyUsersInput | user_progressCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type abuse_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput = {
    where: abuse_report_feedbacksWhereUniqueInput
    update: XOR<abuse_report_feedbacksUpdateWithoutUsersInput, abuse_report_feedbacksUncheckedUpdateWithoutUsersInput>
    create: XOR<abuse_report_feedbacksCreateWithoutUsersInput, abuse_report_feedbacksUncheckedCreateWithoutUsersInput>
  }

  export type abuse_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput = {
    where: abuse_report_feedbacksWhereUniqueInput
    data: XOR<abuse_report_feedbacksUpdateWithoutUsersInput, abuse_report_feedbacksUncheckedUpdateWithoutUsersInput>
  }

  export type abuse_report_feedbacksUpdateManyWithWhereWithoutUsersInput = {
    where: abuse_report_feedbacksScalarWhereInput
    data: XOR<abuse_report_feedbacksUpdateManyMutationInput, abuse_report_feedbacksUncheckedUpdateManyWithoutUsersInput>
  }

  export type attendanceUpsertWithWhereUniqueWithoutUsersInput = {
    where: attendanceWhereUniqueInput
    update: XOR<attendanceUpdateWithoutUsersInput, attendanceUncheckedUpdateWithoutUsersInput>
    create: XOR<attendanceCreateWithoutUsersInput, attendanceUncheckedCreateWithoutUsersInput>
  }

  export type attendanceUpdateWithWhereUniqueWithoutUsersInput = {
    where: attendanceWhereUniqueInput
    data: XOR<attendanceUpdateWithoutUsersInput, attendanceUncheckedUpdateWithoutUsersInput>
  }

  export type attendanceUpdateManyWithWhereWithoutUsersInput = {
    where: attendanceScalarWhereInput
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyWithoutUsersInput>
  }

  export type attendanceScalarWhereInput = {
    AND?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
    OR?: attendanceScalarWhereInput[]
    NOT?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
    id?: UuidFilter<"attendance"> | string
    user_id?: UuidFilter<"attendance"> | string
    checkin_date?: DateTimeFilter<"attendance"> | Date | string
  }

  export type coin_transactionUpsertWithWhereUniqueWithoutUsersInput = {
    where: coin_transactionWhereUniqueInput
    update: XOR<coin_transactionUpdateWithoutUsersInput, coin_transactionUncheckedUpdateWithoutUsersInput>
    create: XOR<coin_transactionCreateWithoutUsersInput, coin_transactionUncheckedCreateWithoutUsersInput>
  }

  export type coin_transactionUpdateWithWhereUniqueWithoutUsersInput = {
    where: coin_transactionWhereUniqueInput
    data: XOR<coin_transactionUpdateWithoutUsersInput, coin_transactionUncheckedUpdateWithoutUsersInput>
  }

  export type coin_transactionUpdateManyWithWhereWithoutUsersInput = {
    where: coin_transactionScalarWhereInput
    data: XOR<coin_transactionUpdateManyMutationInput, coin_transactionUncheckedUpdateManyWithoutUsersInput>
  }

  export type coin_transactionScalarWhereInput = {
    AND?: coin_transactionScalarWhereInput | coin_transactionScalarWhereInput[]
    OR?: coin_transactionScalarWhereInput[]
    NOT?: coin_transactionScalarWhereInput | coin_transactionScalarWhereInput[]
    id?: UuidFilter<"coin_transaction"> | string
    user_id?: UuidFilter<"coin_transaction"> | string
    amount?: IntFilter<"coin_transaction"> | number
    reason?: StringFilter<"coin_transaction"> | string
    reference_id?: UuidNullableFilter<"coin_transaction"> | string | null
    reference_table?: StringNullableFilter<"coin_transaction"> | string | null
    created_at?: DateTimeNullableFilter<"coin_transaction"> | Date | string | null
  }

  export type commentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: commentsWhereUniqueInput
    update: XOR<commentsUpdateWithoutUsersInput, commentsUncheckedUpdateWithoutUsersInput>
    create: XOR<commentsCreateWithoutUsersInput, commentsUncheckedCreateWithoutUsersInput>
  }

  export type commentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: commentsWhereUniqueInput
    data: XOR<commentsUpdateWithoutUsersInput, commentsUncheckedUpdateWithoutUsersInput>
  }

  export type commentsUpdateManyWithWhereWithoutUsersInput = {
    where: commentsScalarWhereInput
    data: XOR<commentsUpdateManyMutationInput, commentsUncheckedUpdateManyWithoutUsersInput>
  }

  export type comments_groupUpsertWithWhereUniqueWithoutUsersInput = {
    where: comments_groupWhereUniqueInput
    update: XOR<comments_groupUpdateWithoutUsersInput, comments_groupUncheckedUpdateWithoutUsersInput>
    create: XOR<comments_groupCreateWithoutUsersInput, comments_groupUncheckedCreateWithoutUsersInput>
  }

  export type comments_groupUpdateWithWhereUniqueWithoutUsersInput = {
    where: comments_groupWhereUniqueInput
    data: XOR<comments_groupUpdateWithoutUsersInput, comments_groupUncheckedUpdateWithoutUsersInput>
  }

  export type comments_groupUpdateManyWithWhereWithoutUsersInput = {
    where: comments_groupScalarWhereInput
    data: XOR<comments_groupUpdateManyMutationInput, comments_groupUncheckedUpdateManyWithoutUsersInput>
  }

  export type error_report_feedbacksUpsertWithWhereUniqueWithoutUsersInput = {
    where: error_report_feedbacksWhereUniqueInput
    update: XOR<error_report_feedbacksUpdateWithoutUsersInput, error_report_feedbacksUncheckedUpdateWithoutUsersInput>
    create: XOR<error_report_feedbacksCreateWithoutUsersInput, error_report_feedbacksUncheckedCreateWithoutUsersInput>
  }

  export type error_report_feedbacksUpdateWithWhereUniqueWithoutUsersInput = {
    where: error_report_feedbacksWhereUniqueInput
    data: XOR<error_report_feedbacksUpdateWithoutUsersInput, error_report_feedbacksUncheckedUpdateWithoutUsersInput>
  }

  export type error_report_feedbacksUpdateManyWithWhereWithoutUsersInput = {
    where: error_report_feedbacksScalarWhereInput
    data: XOR<error_report_feedbacksUpdateManyMutationInput, error_report_feedbacksUncheckedUpdateManyWithoutUsersInput>
  }

  export type group_membersUpsertWithWhereUniqueWithoutUsersInput = {
    where: group_membersWhereUniqueInput
    update: XOR<group_membersUpdateWithoutUsersInput, group_membersUncheckedUpdateWithoutUsersInput>
    create: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput>
  }

  export type group_membersUpdateWithWhereUniqueWithoutUsersInput = {
    where: group_membersWhereUniqueInput
    data: XOR<group_membersUpdateWithoutUsersInput, group_membersUncheckedUpdateWithoutUsersInput>
  }

  export type group_membersUpdateManyWithWhereWithoutUsersInput = {
    where: group_membersScalarWhereInput
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyWithoutUsersInput>
  }

  export type group_postsUpsertWithWhereUniqueWithoutUsersInput = {
    where: group_postsWhereUniqueInput
    update: XOR<group_postsUpdateWithoutUsersInput, group_postsUncheckedUpdateWithoutUsersInput>
    create: XOR<group_postsCreateWithoutUsersInput, group_postsUncheckedCreateWithoutUsersInput>
  }

  export type group_postsUpdateWithWhereUniqueWithoutUsersInput = {
    where: group_postsWhereUniqueInput
    data: XOR<group_postsUpdateWithoutUsersInput, group_postsUncheckedUpdateWithoutUsersInput>
  }

  export type group_postsUpdateManyWithWhereWithoutUsersInput = {
    where: group_postsScalarWhereInput
    data: XOR<group_postsUpdateManyMutationInput, group_postsUncheckedUpdateManyWithoutUsersInput>
  }

  export type groupsUpsertWithWhereUniqueWithoutUsersInput = {
    where: groupsWhereUniqueInput
    update: XOR<groupsUpdateWithoutUsersInput, groupsUncheckedUpdateWithoutUsersInput>
    create: XOR<groupsCreateWithoutUsersInput, groupsUncheckedCreateWithoutUsersInput>
  }

  export type groupsUpdateWithWhereUniqueWithoutUsersInput = {
    where: groupsWhereUniqueInput
    data: XOR<groupsUpdateWithoutUsersInput, groupsUncheckedUpdateWithoutUsersInput>
  }

  export type groupsUpdateManyWithWhereWithoutUsersInput = {
    where: groupsScalarWhereInput
    data: XOR<groupsUpdateManyMutationInput, groupsUncheckedUpdateManyWithoutUsersInput>
  }

  export type groupsScalarWhereInput = {
    AND?: groupsScalarWhereInput | groupsScalarWhereInput[]
    OR?: groupsScalarWhereInput[]
    NOT?: groupsScalarWhereInput | groupsScalarWhereInput[]
    id?: UuidFilter<"groups"> | string
    name?: StringFilter<"groups"> | string
    image_url?: StringNullableFilter<"groups"> | string | null
    created_by?: UuidFilter<"groups"> | string
    created_date?: DateTimeNullableFilter<"groups"> | Date | string | null
    count_member?: IntNullableFilter<"groups"> | number | null
  }

  export type messagesUpsertWithWhereUniqueWithoutUsersInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutUsersInput, messagesUncheckedUpdateWithoutUsersInput>
    create: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutUsersInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutUsersInput, messagesUncheckedUpdateWithoutUsersInput>
  }

  export type messagesUpdateManyWithWhereWithoutUsersInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutUsersInput>
  }

  export type postsUpsertWithWhereUniqueWithoutUsersInput = {
    where: postsWhereUniqueInput
    update: XOR<postsUpdateWithoutUsersInput, postsUncheckedUpdateWithoutUsersInput>
    create: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput>
  }

  export type postsUpdateWithWhereUniqueWithoutUsersInput = {
    where: postsWhereUniqueInput
    data: XOR<postsUpdateWithoutUsersInput, postsUncheckedUpdateWithoutUsersInput>
  }

  export type postsUpdateManyWithWhereWithoutUsersInput = {
    where: postsScalarWhereInput
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyWithoutUsersInput>
  }

  export type postsScalarWhereInput = {
    AND?: postsScalarWhereInput | postsScalarWhereInput[]
    OR?: postsScalarWhereInput[]
    NOT?: postsScalarWhereInput | postsScalarWhereInput[]
    id?: UuidFilter<"posts"> | string
    user_id?: UuidFilter<"posts"> | string
    react_count?: IntNullableFilter<"posts"> | number | null
    content?: StringNullableFilter<"posts"> | string | null
    created_date?: DateTimeNullableFilter<"posts"> | Date | string | null
    image_url?: StringNullableFilter<"posts"> | string | null
    shared_user_id_count?: IntNullableFilter<"posts"> | number | null
    comment_count?: IntNullableFilter<"posts"> | number | null
  }

  export type react_commentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: react_commentsWhereUniqueInput
    update: XOR<react_commentsUpdateWithoutUsersInput, react_commentsUncheckedUpdateWithoutUsersInput>
    create: XOR<react_commentsCreateWithoutUsersInput, react_commentsUncheckedCreateWithoutUsersInput>
  }

  export type react_commentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: react_commentsWhereUniqueInput
    data: XOR<react_commentsUpdateWithoutUsersInput, react_commentsUncheckedUpdateWithoutUsersInput>
  }

  export type react_commentsUpdateManyWithWhereWithoutUsersInput = {
    where: react_commentsScalarWhereInput
    data: XOR<react_commentsUpdateManyMutationInput, react_commentsUncheckedUpdateManyWithoutUsersInput>
  }

  export type react_postsUpsertWithWhereUniqueWithoutUsersInput = {
    where: react_postsWhereUniqueInput
    update: XOR<react_postsUpdateWithoutUsersInput, react_postsUncheckedUpdateWithoutUsersInput>
    create: XOR<react_postsCreateWithoutUsersInput, react_postsUncheckedCreateWithoutUsersInput>
  }

  export type react_postsUpdateWithWhereUniqueWithoutUsersInput = {
    where: react_postsWhereUniqueInput
    data: XOR<react_postsUpdateWithoutUsersInput, react_postsUncheckedUpdateWithoutUsersInput>
  }

  export type react_postsUpdateManyWithWhereWithoutUsersInput = {
    where: react_postsScalarWhereInput
    data: XOR<react_postsUpdateManyMutationInput, react_postsUncheckedUpdateManyWithoutUsersInput>
  }

  export type shared_postUpsertWithWhereUniqueWithoutUsersInput = {
    where: shared_postWhereUniqueInput
    update: XOR<shared_postUpdateWithoutUsersInput, shared_postUncheckedUpdateWithoutUsersInput>
    create: XOR<shared_postCreateWithoutUsersInput, shared_postUncheckedCreateWithoutUsersInput>
  }

  export type shared_postUpdateWithWhereUniqueWithoutUsersInput = {
    where: shared_postWhereUniqueInput
    data: XOR<shared_postUpdateWithoutUsersInput, shared_postUncheckedUpdateWithoutUsersInput>
  }

  export type shared_postUpdateManyWithWhereWithoutUsersInput = {
    where: shared_postScalarWhereInput
    data: XOR<shared_postUpdateManyMutationInput, shared_postUncheckedUpdateManyWithoutUsersInput>
  }

  export type study_access_topicUpsertWithWhereUniqueWithoutUsersInput = {
    where: study_access_topicWhereUniqueInput
    update: XOR<study_access_topicUpdateWithoutUsersInput, study_access_topicUncheckedUpdateWithoutUsersInput>
    create: XOR<study_access_topicCreateWithoutUsersInput, study_access_topicUncheckedCreateWithoutUsersInput>
  }

  export type study_access_topicUpdateWithWhereUniqueWithoutUsersInput = {
    where: study_access_topicWhereUniqueInput
    data: XOR<study_access_topicUpdateWithoutUsersInput, study_access_topicUncheckedUpdateWithoutUsersInput>
  }

  export type study_access_topicUpdateManyWithWhereWithoutUsersInput = {
    where: study_access_topicScalarWhereInput
    data: XOR<study_access_topicUpdateManyMutationInput, study_access_topicUncheckedUpdateManyWithoutUsersInput>
  }

  export type transaction_historyUpsertWithWhereUniqueWithoutUsersInput = {
    where: transaction_historyWhereUniqueInput
    update: XOR<transaction_historyUpdateWithoutUsersInput, transaction_historyUncheckedUpdateWithoutUsersInput>
    create: XOR<transaction_historyCreateWithoutUsersInput, transaction_historyUncheckedCreateWithoutUsersInput>
  }

  export type transaction_historyUpdateWithWhereUniqueWithoutUsersInput = {
    where: transaction_historyWhereUniqueInput
    data: XOR<transaction_historyUpdateWithoutUsersInput, transaction_historyUncheckedUpdateWithoutUsersInput>
  }

  export type transaction_historyUpdateManyWithWhereWithoutUsersInput = {
    where: transaction_historyScalarWhereInput
    data: XOR<transaction_historyUpdateManyMutationInput, transaction_historyUncheckedUpdateManyWithoutUsersInput>
  }

  export type transaction_historyScalarWhereInput = {
    AND?: transaction_historyScalarWhereInput | transaction_historyScalarWhereInput[]
    OR?: transaction_historyScalarWhereInput[]
    NOT?: transaction_historyScalarWhereInput | transaction_historyScalarWhereInput[]
    id?: UuidFilter<"transaction_history"> | string
    user_id?: UuidFilter<"transaction_history"> | string
    price?: DecimalNullableFilter<"transaction_history"> | Decimal | DecimalJsLike | number | string | null
    createddate?: DateTimeNullableFilter<"transaction_history"> | Date | string | null
  }

  export type user_abuse_reportsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_abuse_reportsWhereUniqueInput
    update: XOR<user_abuse_reportsUpdateWithoutUsersInput, user_abuse_reportsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_abuse_reportsCreateWithoutUsersInput, user_abuse_reportsUncheckedCreateWithoutUsersInput>
  }

  export type user_abuse_reportsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_abuse_reportsWhereUniqueInput
    data: XOR<user_abuse_reportsUpdateWithoutUsersInput, user_abuse_reportsUncheckedUpdateWithoutUsersInput>
  }

  export type user_abuse_reportsUpdateManyWithWhereWithoutUsersInput = {
    where: user_abuse_reportsScalarWhereInput
    data: XOR<user_abuse_reportsUpdateManyMutationInput, user_abuse_reportsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_abuse_reportsScalarWhereInput = {
    AND?: user_abuse_reportsScalarWhereInput | user_abuse_reportsScalarWhereInput[]
    OR?: user_abuse_reportsScalarWhereInput[]
    NOT?: user_abuse_reportsScalarWhereInput | user_abuse_reportsScalarWhereInput[]
    id?: UuidFilter<"user_abuse_reports"> | string
    user_id?: UuidFilter<"user_abuse_reports"> | string
    content?: StringFilter<"user_abuse_reports"> | string
    created_date?: DateTimeFilter<"user_abuse_reports"> | Date | string
  }

  export type user_coursesUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_coursesWhereUniqueInput
    update: XOR<user_coursesUpdateWithoutUsersInput, user_coursesUncheckedUpdateWithoutUsersInput>
    create: XOR<user_coursesCreateWithoutUsersInput, user_coursesUncheckedCreateWithoutUsersInput>
  }

  export type user_coursesUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_coursesWhereUniqueInput
    data: XOR<user_coursesUpdateWithoutUsersInput, user_coursesUncheckedUpdateWithoutUsersInput>
  }

  export type user_coursesUpdateManyWithWhereWithoutUsersInput = {
    where: user_coursesScalarWhereInput
    data: XOR<user_coursesUpdateManyMutationInput, user_coursesUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_error_reportsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_error_reportsWhereUniqueInput
    update: XOR<user_error_reportsUpdateWithoutUsersInput, user_error_reportsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_error_reportsCreateWithoutUsersInput, user_error_reportsUncheckedCreateWithoutUsersInput>
  }

  export type user_error_reportsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_error_reportsWhereUniqueInput
    data: XOR<user_error_reportsUpdateWithoutUsersInput, user_error_reportsUncheckedUpdateWithoutUsersInput>
  }

  export type user_error_reportsUpdateManyWithWhereWithoutUsersInput = {
    where: user_error_reportsScalarWhereInput
    data: XOR<user_error_reportsUpdateManyMutationInput, user_error_reportsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_error_reportsScalarWhereInput = {
    AND?: user_error_reportsScalarWhereInput | user_error_reportsScalarWhereInput[]
    OR?: user_error_reportsScalarWhereInput[]
    NOT?: user_error_reportsScalarWhereInput | user_error_reportsScalarWhereInput[]
    id?: UuidFilter<"user_error_reports"> | string
    user_id?: UuidFilter<"user_error_reports"> | string
    content?: StringFilter<"user_error_reports"> | string
    created_date?: DateTimeFilter<"user_error_reports"> | Date | string
    title?: StringFilter<"user_error_reports"> | string
    post_id?: UuidFilter<"user_error_reports"> | string
    status?: StringNullableFilter<"user_error_reports"> | string | null
  }

  export type user_packagesUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_packagesWhereUniqueInput
    update: XOR<user_packagesUpdateWithoutUsersInput, user_packagesUncheckedUpdateWithoutUsersInput>
    create: XOR<user_packagesCreateWithoutUsersInput, user_packagesUncheckedCreateWithoutUsersInput>
  }

  export type user_packagesUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_packagesWhereUniqueInput
    data: XOR<user_packagesUpdateWithoutUsersInput, user_packagesUncheckedUpdateWithoutUsersInput>
  }

  export type user_packagesUpdateManyWithWhereWithoutUsersInput = {
    where: user_packagesScalarWhereInput
    data: XOR<user_packagesUpdateManyMutationInput, user_packagesUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput = {
    where: user_profile_historyWhereUniqueInput
    update: XOR<user_profile_historyUpdateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedUpdateWithoutUsers_user_profile_history_changed_byTousersInput>
    create: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_changed_byTousersInput>
  }

  export type user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_changed_byTousersInput = {
    where: user_profile_historyWhereUniqueInput
    data: XOR<user_profile_historyUpdateWithoutUsers_user_profile_history_changed_byTousersInput, user_profile_historyUncheckedUpdateWithoutUsers_user_profile_history_changed_byTousersInput>
  }

  export type user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_changed_byTousersInput = {
    where: user_profile_historyScalarWhereInput
    data: XOR<user_profile_historyUpdateManyMutationInput, user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersInput>
  }

  export type user_profile_historyScalarWhereInput = {
    AND?: user_profile_historyScalarWhereInput | user_profile_historyScalarWhereInput[]
    OR?: user_profile_historyScalarWhereInput[]
    NOT?: user_profile_historyScalarWhereInput | user_profile_historyScalarWhereInput[]
    id?: UuidFilter<"user_profile_history"> | string
    user_id?: UuidFilter<"user_profile_history"> | string
    old_data?: JsonNullableFilter<"user_profile_history">
    new_data?: JsonNullableFilter<"user_profile_history">
    changed_by?: UuidNullableFilter<"user_profile_history"> | string | null
    changed_at?: DateTimeNullableFilter<"user_profile_history"> | Date | string | null
  }

  export type user_profile_historyUpsertWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput = {
    where: user_profile_historyWhereUniqueInput
    update: XOR<user_profile_historyUpdateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedUpdateWithoutUsers_user_profile_history_user_idTousersInput>
    create: XOR<user_profile_historyCreateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedCreateWithoutUsers_user_profile_history_user_idTousersInput>
  }

  export type user_profile_historyUpdateWithWhereUniqueWithoutUsers_user_profile_history_user_idTousersInput = {
    where: user_profile_historyWhereUniqueInput
    data: XOR<user_profile_historyUpdateWithoutUsers_user_profile_history_user_idTousersInput, user_profile_historyUncheckedUpdateWithoutUsers_user_profile_history_user_idTousersInput>
  }

  export type user_profile_historyUpdateManyWithWhereWithoutUsers_user_profile_history_user_idTousersInput = {
    where: user_profile_historyScalarWhereInput
    data: XOR<user_profile_historyUpdateManyMutationInput, user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersInput>
  }

  export type user_progressUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_progressWhereUniqueInput
    update: XOR<user_progressUpdateWithoutUsersInput, user_progressUncheckedUpdateWithoutUsersInput>
    create: XOR<user_progressCreateWithoutUsersInput, user_progressUncheckedCreateWithoutUsersInput>
  }

  export type user_progressUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_progressWhereUniqueInput
    data: XOR<user_progressUpdateWithoutUsersInput, user_progressUncheckedUpdateWithoutUsersInput>
  }

  export type user_progressUpdateManyWithWhereWithoutUsersInput = {
    where: user_progressScalarWhereInput
    data: XOR<user_progressUpdateManyMutationInput, user_progressUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_progressScalarWhereInput = {
    AND?: user_progressScalarWhereInput | user_progressScalarWhereInput[]
    OR?: user_progressScalarWhereInput[]
    NOT?: user_progressScalarWhereInput | user_progressScalarWhereInput[]
    id?: UuidFilter<"user_progress"> | string
    word_id?: UuidFilter<"user_progress"> | string
    user_id?: UuidFilter<"user_progress"> | string
    level?: IntFilter<"user_progress"> | number
    createdstudydate?: DateTimeNullableFilter<"user_progress"> | Date | string | null
    updatedstudydate?: DateTimeNullableFilter<"user_progress"> | Date | string | null
  }

  export type user_progressCreateWithoutWordsInput = {
    id?: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
    users: usersCreateNestedOneWithoutUser_progressInput
  }

  export type user_progressUncheckedCreateWithoutWordsInput = {
    id?: string
    user_id: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
  }

  export type user_progressCreateOrConnectWithoutWordsInput = {
    where: user_progressWhereUniqueInput
    create: XOR<user_progressCreateWithoutWordsInput, user_progressUncheckedCreateWithoutWordsInput>
  }

  export type user_progressCreateManyWordsInputEnvelope = {
    data: user_progressCreateManyWordsInput | user_progressCreateManyWordsInput[]
    skipDuplicates?: boolean
  }

  export type coursesCreateWithoutWordsInput = {
    id?: string
    title: string
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    topics?: topicsCreateNestedOneWithoutCoursesInput
    user_courses?: user_coursesCreateNestedManyWithoutCoursesInput
  }

  export type coursesUncheckedCreateWithoutWordsInput = {
    id?: string
    title: string
    topic_id?: string | null
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
    user_courses?: user_coursesUncheckedCreateNestedManyWithoutCoursesInput
  }

  export type coursesCreateOrConnectWithoutWordsInput = {
    where: coursesWhereUniqueInput
    create: XOR<coursesCreateWithoutWordsInput, coursesUncheckedCreateWithoutWordsInput>
  }

  export type user_progressUpsertWithWhereUniqueWithoutWordsInput = {
    where: user_progressWhereUniqueInput
    update: XOR<user_progressUpdateWithoutWordsInput, user_progressUncheckedUpdateWithoutWordsInput>
    create: XOR<user_progressCreateWithoutWordsInput, user_progressUncheckedCreateWithoutWordsInput>
  }

  export type user_progressUpdateWithWhereUniqueWithoutWordsInput = {
    where: user_progressWhereUniqueInput
    data: XOR<user_progressUpdateWithoutWordsInput, user_progressUncheckedUpdateWithoutWordsInput>
  }

  export type user_progressUpdateManyWithWhereWithoutWordsInput = {
    where: user_progressScalarWhereInput
    data: XOR<user_progressUpdateManyMutationInput, user_progressUncheckedUpdateManyWithoutWordsInput>
  }

  export type coursesUpsertWithoutWordsInput = {
    update: XOR<coursesUpdateWithoutWordsInput, coursesUncheckedUpdateWithoutWordsInput>
    create: XOR<coursesCreateWithoutWordsInput, coursesUncheckedCreateWithoutWordsInput>
    where?: coursesWhereInput
  }

  export type coursesUpdateToOneWithWhereWithoutWordsInput = {
    where?: coursesWhereInput
    data: XOR<coursesUpdateWithoutWordsInput, coursesUncheckedUpdateWithoutWordsInput>
  }

  export type coursesUpdateWithoutWordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    topics?: topicsUpdateOneWithoutCoursesNestedInput
    user_courses?: user_coursesUpdateManyWithoutCoursesNestedInput
  }

  export type coursesUncheckedUpdateWithoutWordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    topic_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_courses?: user_coursesUncheckedUpdateManyWithoutCoursesNestedInput
  }

  export type react_commentsCreateManyCommentsInput = {
    id?: string
    user_id: string
    created_date?: Date | string
  }

  export type react_commentsUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutReact_commentsNestedInput
  }

  export type react_commentsUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type react_commentsUncheckedUpdateManyWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_coursesCreateManyCoursesInput = {
    id?: string
    user_id: string
    purchase_date?: Date | string | null
  }

  export type wordsCreateManyCoursesInput = {
    id?: string
    englishname: string
    vietnamesename: string
    type?: string | null
    examplesentence?: string | null
    imageurl?: string | null
    transcription?: string | null
  }

  export type user_coursesUpdateWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutUser_coursesNestedInput
  }

  export type user_coursesUncheckedUpdateWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_coursesUncheckedUpdateManyWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wordsUpdateWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    user_progress?: user_progressUpdateManyWithoutWordsNestedInput
  }

  export type wordsUncheckedUpdateWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
    user_progress?: user_progressUncheckedUpdateManyWithoutWordsNestedInput
  }

  export type wordsUncheckedUpdateManyWithoutCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    englishname?: StringFieldUpdateOperationsInput | string
    vietnamesename?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    examplesentence?: NullableStringFieldUpdateOperationsInput | string | null
    imageurl?: NullableStringFieldUpdateOperationsInput | string | null
    transcription?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupCreateManyGroupsInput = {
    id?: string
    post_id: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type group_membersCreateManyGroupsInput = {
    id?: string
    user_id: string
    is_admin?: boolean
    joined_date?: Date | string | null
  }

  export type group_postsCreateManyGroupsInput = {
    id?: string
    user_id: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
  }

  export type messagesCreateManyGroupsInput = {
    id?: string
    sender_id: string
    created_date?: Date | string | null
    content?: string | null
  }

  export type comments_groupUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: postsUpdateOneRequiredWithoutComments_groupNestedInput
    users?: usersUpdateOneRequiredWithoutComments_groupNestedInput
  }

  export type comments_groupUncheckedUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupUncheckedUpdateManyWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type group_membersUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutGroup_membersNestedInput
  }

  export type group_membersUncheckedUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUncheckedUpdateManyWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutGroup_postsNestedInput
  }

  export type group_postsUncheckedUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsUncheckedUpdateManyWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sender_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type messagesUncheckedUpdateManyWithoutGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sender_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_packagesCreateManyPackagesInput = {
    id?: string
    user_id: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
  }

  export type user_packagesUpdateWithoutPackagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users?: usersUpdateOneRequiredWithoutUser_packagesNestedInput
  }

  export type user_packagesUncheckedUpdateWithoutPackagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_packagesUncheckedUpdateManyWithoutPackagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type commentsCreateManyPostsInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
  }

  export type comments_groupCreateManyPostsInput = {
    id?: string
    group_id: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type react_postsCreateManyPostsInput = {
    id?: string
    user_id: string
    created_date?: Date | string | null
  }

  export type shared_postCreateManyPostsInput = {
    id?: string
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
  }

  export type commentsUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutCommentsNestedInput
    shared_post?: shared_postUpdateOneWithoutCommentsNestedInput
    react_comments?: react_commentsUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_comments?: react_commentsUncheckedUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateManyWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
    groups?: groupsUpdateOneRequiredWithoutComments_groupNestedInput
    users?: usersUpdateOneRequiredWithoutComments_groupNestedInput
  }

  export type comments_groupUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupUncheckedUpdateManyWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type react_postsUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutReact_postsNestedInput
  }

  export type react_postsUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type react_postsUncheckedUpdateManyWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shared_postUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutShared_postNestedInput
    shared_post?: shared_postUpdateOneWithoutOther_shared_postNestedInput
    other_shared_post?: shared_postUpdateManyWithoutShared_postNestedInput
    users?: usersUpdateOneRequiredWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutShared_postNestedInput
    other_shared_post?: shared_postUncheckedUpdateManyWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateManyWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type commentsCreateManyShared_postInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
  }

  export type shared_postCreateManyShared_postInput = {
    id?: string
    post_id?: string | null
    user_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_count?: number | null
  }

  export type commentsUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: postsUpdateOneWithoutCommentsNestedInput
    users?: usersUpdateOneRequiredWithoutCommentsNestedInput
    react_comments?: react_commentsUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    react_comments?: react_commentsUncheckedUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateManyWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shared_postUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutShared_postNestedInput
    other_shared_post?: shared_postUpdateManyWithoutShared_postNestedInput
    posts?: postsUpdateOneWithoutShared_postNestedInput
    users?: usersUpdateOneRequiredWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutShared_postNestedInput
    other_shared_post?: shared_postUncheckedUpdateManyWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateManyWithoutShared_postInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type coursesCreateManyTopicsInput = {
    id?: string
    title: string
    level?: string | null
    description?: string | null
    image_url?: string | null
    price?: number
    created_date?: Date | string
  }

  export type study_access_topicCreateManyTopicsInput = {
    id?: string
    user_id: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
  }

  export type coursesUpdateWithoutTopicsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_courses?: user_coursesUpdateManyWithoutCoursesNestedInput
    words?: wordsUpdateManyWithoutCoursesNestedInput
  }

  export type coursesUncheckedUpdateWithoutTopicsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_courses?: user_coursesUncheckedUpdateManyWithoutCoursesNestedInput
    words?: wordsUncheckedUpdateManyWithoutCoursesNestedInput
  }

  export type coursesUncheckedUpdateManyWithoutTopicsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    level?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type study_access_topicUpdateWithoutTopicsInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutStudy_access_topicNestedInput
  }

  export type study_access_topicUncheckedUpdateWithoutTopicsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type study_access_topicUncheckedUpdateManyWithoutTopicsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type abuse_report_feedbacksCreateManyUser_abuse_reportsInput = {
    id?: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type abuse_report_feedbacksUpdateWithoutUser_abuse_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutAbuse_report_feedbacksNestedInput
  }

  export type abuse_report_feedbacksUncheckedUpdateWithoutUser_abuse_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type abuse_report_feedbacksUncheckedUpdateManyWithoutUser_abuse_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type error_report_feedbacksCreateManyUser_error_reportsInput = {
    id?: string
    admin_id?: string | null
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type error_report_feedbacksUpdateWithoutUser_error_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutError_report_feedbacksNestedInput
  }

  export type error_report_feedbacksUncheckedUpdateWithoutUser_error_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type error_report_feedbacksUncheckedUpdateManyWithoutUser_error_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admin_id?: NullableStringFieldUpdateOperationsInput | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type abuse_report_feedbacksCreateManyUsersInput = {
    id?: string
    report_id: string
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type attendanceCreateManyUsersInput = {
    id?: string
    checkin_date?: Date | string
  }

  export type coin_transactionCreateManyUsersInput = {
    id?: string
    amount: number
    reason: string
    reference_id?: string | null
    reference_table?: string | null
    created_at?: Date | string | null
  }

  export type commentsCreateManyUsersInput = {
    id?: string
    post_id?: string | null
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comment?: string | null
    root_comment?: string | null
    shared_post_id?: string | null
  }

  export type comments_groupCreateManyUsersInput = {
    id?: string
    group_id: string
    post_id: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    parent_comments?: string | null
  }

  export type error_report_feedbacksCreateManyUsersInput = {
    id?: string
    report_id: string
    feedback?: string | null
    responded_at?: Date | string | null
  }

  export type group_membersCreateManyUsersInput = {
    id?: string
    group_id: string
    is_admin?: boolean
    joined_date?: Date | string | null
  }

  export type group_postsCreateManyUsersInput = {
    id?: string
    group_id: string
    content?: string | null
    image_url?: string | null
    react_count?: number | null
    created_date?: Date | string | null
    updated_date?: Date | string | null
  }

  export type groupsCreateManyUsersInput = {
    id?: string
    name: string
    image_url?: string | null
    created_date?: Date | string | null
    count_member?: number | null
  }

  export type messagesCreateManyUsersInput = {
    id?: string
    group_id: string
    created_date?: Date | string | null
    content?: string | null
  }

  export type postsCreateManyUsersInput = {
    id?: string
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    image_url?: string | null
    shared_user_id_count?: number | null
    comment_count?: number | null
  }

  export type react_commentsCreateManyUsersInput = {
    id?: string
    comment_id: string
    created_date?: Date | string
  }

  export type react_postsCreateManyUsersInput = {
    id?: string
    post_id: string
    created_date?: Date | string | null
  }

  export type shared_postCreateManyUsersInput = {
    id?: string
    post_id?: string | null
    react_count?: number | null
    content?: string | null
    created_date?: Date | string | null
    comment_count?: number | null
    shared_post_id?: string | null
    shared_count?: number | null
  }

  export type study_access_topicCreateManyUsersInput = {
    id?: string
    topic_id: string
    access_type?: string | null
    access_date?: Date | string | null
    expire_date: Date | string
  }

  export type transaction_historyCreateManyUsersInput = {
    id?: string
    price?: Decimal | DecimalJsLike | number | string | null
    createddate?: Date | string | null
  }

  export type user_abuse_reportsCreateManyUsersInput = {
    id?: string
    content: string
    created_date?: Date | string
  }

  export type user_coursesCreateManyUsersInput = {
    id?: string
    course_id: string
    purchase_date?: Date | string | null
  }

  export type user_error_reportsCreateManyUsersInput = {
    id?: string
    content: string
    created_date?: Date | string
    title: string
    post_id: string
    status?: string | null
  }

  export type user_packagesCreateManyUsersInput = {
    id?: string
    package_id: string
    start_date?: Date | string | null
    end_date: Date | string
    is_active?: boolean | null
  }

  export type user_profile_historyCreateManyUsers_user_profile_history_changed_byTousersInput = {
    id?: string
    user_id: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: Date | string | null
  }

  export type user_profile_historyCreateManyUsers_user_profile_history_user_idTousersInput = {
    id?: string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: string | null
    changed_at?: Date | string | null
  }

  export type user_progressCreateManyUsersInput = {
    id?: string
    word_id: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
  }

  export type abuse_report_feedbacksUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_abuse_reports?: user_abuse_reportsUpdateOneRequiredWithoutAbuse_report_feedbacksNestedInput
  }

  export type abuse_report_feedbacksUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type abuse_report_feedbacksUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type attendanceUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    checkin_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coin_transactionUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type coin_transactionUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type coin_transactionUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    reference_table?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type commentsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: postsUpdateOneWithoutCommentsNestedInput
    shared_post?: shared_postUpdateOneWithoutCommentsNestedInput
    react_comments?: react_commentsUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_comments?: react_commentsUncheckedUpdateManyWithoutCommentsNestedInput
  }

  export type commentsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comment?: NullableStringFieldUpdateOperationsInput | string | null
    root_comment?: NullableStringFieldUpdateOperationsInput | string | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
    groups?: groupsUpdateOneRequiredWithoutComments_groupNestedInput
    posts?: postsUpdateOneRequiredWithoutComments_groupNestedInput
  }

  export type comments_groupUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comments_groupUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent_comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type error_report_feedbacksUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_error_reports?: user_error_reportsUpdateOneRequiredWithoutError_report_feedbacksNestedInput
  }

  export type error_report_feedbacksUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type error_report_feedbacksUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    responded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    groups?: groupsUpdateOneRequiredWithoutGroup_membersNestedInput
  }

  export type group_membersUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    is_admin?: BoolFieldUpdateOperationsInput | boolean
    joined_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    groups?: groupsUpdateOneRequiredWithoutGroup_postsNestedInput
  }

  export type group_postsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_postsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type groupsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUpdateManyWithoutGroupsNestedInput
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
    comments_group?: comments_groupUncheckedUpdateManyWithoutGroupsNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
    group_posts?: group_postsUncheckedUpdateManyWithoutGroupsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    count_member?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type messagesUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    groups?: groupsUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type messagesUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type postsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUpdateManyWithoutPostsNestedInput
    react_posts?: react_postsUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutPostsNestedInput
    comments_group?: comments_groupUncheckedUpdateManyWithoutPostsNestedInput
    react_posts?: react_postsUncheckedUpdateManyWithoutPostsNestedInput
    shared_post?: shared_postUncheckedUpdateManyWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    shared_user_id_count?: NullableIntFieldUpdateOperationsInput | number | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type react_commentsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: commentsUpdateOneRequiredWithoutReact_commentsNestedInput
  }

  export type react_commentsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment_id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type react_commentsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment_id?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type react_postsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posts?: postsUpdateOneRequiredWithoutReact_postsNestedInput
  }

  export type react_postsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type react_postsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shared_postUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUpdateManyWithoutShared_postNestedInput
    shared_post?: shared_postUpdateOneWithoutOther_shared_postNestedInput
    other_shared_post?: shared_postUpdateManyWithoutShared_postNestedInput
    posts?: postsUpdateOneWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
    comments?: commentsUncheckedUpdateManyWithoutShared_postNestedInput
    other_shared_post?: shared_postUncheckedUpdateManyWithoutShared_postNestedInput
  }

  export type shared_postUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    react_count?: NullableIntFieldUpdateOperationsInput | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_count?: NullableIntFieldUpdateOperationsInput | number | null
    shared_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    shared_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type study_access_topicUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    topics?: topicsUpdateOneRequiredWithoutStudy_access_topicNestedInput
  }

  export type study_access_topicUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    topic_id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type study_access_topicUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    topic_id?: StringFieldUpdateOperationsInput | string
    access_type?: NullableStringFieldUpdateOperationsInput | string | null
    access_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type transaction_historyUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaction_historyUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaction_historyUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createddate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_abuse_reportsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksUpdateManyWithoutUser_abuse_reportsNestedInput
  }

  export type user_abuse_reportsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    abuse_report_feedbacks?: abuse_report_feedbacksUncheckedUpdateManyWithoutUser_abuse_reportsNestedInput
  }

  export type user_abuse_reportsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_coursesUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courses?: coursesUpdateOneRequiredWithoutUser_coursesNestedInput
  }

  export type user_coursesUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    course_id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_coursesUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    course_id?: StringFieldUpdateOperationsInput | string
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_error_reportsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    error_report_feedbacks?: error_report_feedbacksUpdateManyWithoutUser_error_reportsNestedInput
  }

  export type user_error_reportsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    error_report_feedbacks?: error_report_feedbacksUncheckedUpdateManyWithoutUser_error_reportsNestedInput
  }

  export type user_error_reportsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_date?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    post_id?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_packagesUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    packages?: packagesUpdateOneRequiredWithoutUser_packagesNestedInput
  }

  export type user_packagesUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    package_id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_packagesUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    package_id?: StringFieldUpdateOperationsInput | string
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_profile_historyUpdateWithoutUsers_user_profile_history_changed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_user_profile_history_user_idTousers?: usersUpdateOneRequiredWithoutUser_profile_history_user_profile_history_user_idTousersNestedInput
  }

  export type user_profile_historyUncheckedUpdateWithoutUsers_user_profile_history_changed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_changed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profile_historyUpdateWithoutUsers_user_profile_history_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_user_profile_history_changed_byTousers?: usersUpdateOneWithoutUser_profile_history_user_profile_history_changed_byTousersNestedInput
  }

  export type user_profile_historyUncheckedUpdateWithoutUsers_user_profile_history_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profile_historyUncheckedUpdateManyWithoutUsers_user_profile_history_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    old_data?: NullableJsonNullValueInput | InputJsonValue
    new_data?: NullableJsonNullValueInput | InputJsonValue
    changed_by?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    words?: wordsUpdateOneRequiredWithoutUser_progressNestedInput
  }

  export type user_progressUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    word_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    word_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressCreateManyWordsInput = {
    id?: string
    user_id: string
    level?: number
    createdstudydate?: Date | string | null
    updatedstudydate?: Date | string | null
  }

  export type user_progressUpdateWithoutWordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutUser_progressNestedInput
  }

  export type user_progressUncheckedUpdateWithoutWordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_progressUncheckedUpdateManyWithoutWordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    createdstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedstudydate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}