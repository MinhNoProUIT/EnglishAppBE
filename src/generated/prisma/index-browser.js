
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Abuse_report_feedbacksScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  admin_id: 'admin_id',
  feedback: 'feedback',
  responded_at: 'responded_at'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_date: 'created_date'
};

exports.Prisma.Coin_transactionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  amount: 'amount',
  reason: 'reason',
  reference_id: 'reference_id',
  reference_table: 'reference_table',
  created_at: 'created_at'
};

exports.Prisma.CommentsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  react_count: 'react_count',
  content: 'content',
  created_date: 'created_date',
  parent_comment: 'parent_comment',
  root_comment: 'root_comment',
  shared_post_id: 'shared_post_id'
};

exports.Prisma.Comments_groupScalarFieldEnum = {
  id: 'id',
  group_id: 'group_id',
  post_id: 'post_id',
  user_id: 'user_id',
  react_count: 'react_count',
  content: 'content',
  created_date: 'created_date',
  parent_comments: 'parent_comments'
};

exports.Prisma.CoursesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  topic_id: 'topic_id',
  level: 'level',
  description: 'description',
  image_url: 'image_url',
  price: 'price',
  created_date: 'created_date'
};

exports.Prisma.Error_report_feedbacksScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  admin_id: 'admin_id',
  feedback: 'feedback',
  responded_at: 'responded_at'
};

exports.Prisma.Group_membersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  group_id: 'group_id',
  is_admin: 'is_admin',
  joined_date: 'joined_date'
};

exports.Prisma.Group_postsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  group_id: 'group_id',
  content: 'content',
  image_url: 'image_url',
  react_count: 'react_count',
  created_date: 'created_date',
  updated_date: 'updated_date'
};

exports.Prisma.GroupsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image_url: 'image_url',
  created_by: 'created_by',
  created_date: 'created_date',
  count_member: 'count_member'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  sender_id: 'sender_id',
  group_id: 'group_id',
  created_date: 'created_date',
  content: 'content'
};

exports.Prisma.PackagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  duration_days: 'duration_days',
  price: 'price',
  is_premium: 'is_premium'
};

exports.Prisma.PostsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  react_count: 'react_count',
  content: 'content',
  created_date: 'created_date',
  image_url: 'image_url',
  shared_user_id_count: 'shared_user_id_count',
  comment_count: 'comment_count'
};

exports.Prisma.React_commentsScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  created_date: 'created_date'
};

exports.Prisma.React_postsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  created_date: 'created_date'
};

exports.Prisma.Shared_postScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  react_count: 'react_count',
  content: 'content',
  created_date: 'created_date',
  comment_count: 'comment_count',
  shared_post_id: 'shared_post_id',
  shared_count: 'shared_count'
};

exports.Prisma.Study_access_topicScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  topic_id: 'topic_id',
  access_type: 'access_type',
  access_date: 'access_date',
  expire_date: 'expire_date'
};

exports.Prisma.TopicsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.Transaction_historyScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  amount: 'amount',
  created_date: 'created_date',
  order_code: 'order_code',
  status: 'status',
  paid_at: 'paid_at',
  description: 'description'
};

exports.Prisma.User_abuse_reportsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  content: 'content',
  created_date: 'created_date'
};

exports.Prisma.User_coursesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  course_id: 'course_id',
  purchase_date: 'purchase_date'
};

exports.Prisma.User_error_reportsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  content: 'content',
  created_date: 'created_date',
  title: 'title',
  post_id: 'post_id',
  status: 'status'
};

exports.Prisma.User_packagesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  package_id: 'package_id',
  start_date: 'start_date',
  end_date: 'end_date',
  is_active: 'is_active'
};

exports.Prisma.User_profile_historyScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  old_data: 'old_data',
  new_data: 'new_data',
  changed_by: 'changed_by',
  changed_at: 'changed_at'
};

exports.Prisma.User_progressScalarFieldEnum = {
  id: 'id',
  word_id: 'word_id',
  user_id: 'user_id',
  level: 'level',
  createdstudydate: 'createdstudydate',
  updatedstudydate: 'updatedstudydate'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  username: 'username',
  passwordhash: 'passwordhash',
  birthday: 'birthday',
  gender: 'gender',
  fullname: 'fullname',
  address: 'address',
  email: 'email',
  phonenumber: 'phonenumber',
  created_date: 'created_date',
  isactive: 'isactive',
  isadmin: 'isadmin',
  balance: 'balance',
  image_url: 'image_url',
  is_block: 'is_block',
  is_verified: 'is_verified',
  firebase_uid: 'firebase_uid'
};

exports.Prisma.WordsScalarFieldEnum = {
  id: 'id',
  englishname: 'englishname',
  vietnamesename: 'vietnamesename',
  type: 'type',
  examplesentence: 'examplesentence',
  imageurl: 'imageurl',
  transcription: 'transcription',
  course_id: 'course_id'
};

exports.Prisma.Quiz_questionsScalarFieldEnum = {
  id: 'id',
  quiz_id: 'quiz_id',
  question_text: 'question_text',
  options: 'options',
  correct_answer: 'correct_answer'
};

exports.Prisma.QuizzesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  created_date: 'created_date'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  abuse_report_feedbacks: 'abuse_report_feedbacks',
  attendance: 'attendance',
  coin_transaction: 'coin_transaction',
  comments: 'comments',
  comments_group: 'comments_group',
  courses: 'courses',
  error_report_feedbacks: 'error_report_feedbacks',
  group_members: 'group_members',
  group_posts: 'group_posts',
  groups: 'groups',
  messages: 'messages',
  packages: 'packages',
  posts: 'posts',
  react_comments: 'react_comments',
  react_posts: 'react_posts',
  shared_post: 'shared_post',
  study_access_topic: 'study_access_topic',
  topics: 'topics',
  transaction_history: 'transaction_history',
  user_abuse_reports: 'user_abuse_reports',
  user_courses: 'user_courses',
  user_error_reports: 'user_error_reports',
  user_packages: 'user_packages',
  user_profile_history: 'user_profile_history',
  user_progress: 'user_progress',
  users: 'users',
  words: 'words',
  quiz_questions: 'quiz_questions',
  quizzes: 'quizzes'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
